//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTAbbaFeatureFlagsObserver.h"
#import "SPTGaiaAirplayManagerObserver.h"
#import "SPTGaiaDeviceStateManagerObserver.h"
#import "SPTGaiaManager.h"
#import "SPTNetworkConnectivityControllerObserver.h"
#import "SPTPlayerObserver.h"

@class GaiaFeatureImplementation, GaiaSettings, NSArray, NSHashTable, NSNotificationCenter, NSString, SPTCastManager, SPTGaiaAirplayManager, SPTGaiaDeviceManager, SPTGaiaLogger, SPTNetworkConnectivityController, SPTPlayerState, SPTTheme;

@interface SPTGaiaManagerImplementation : NSObject <SPTGaiaDeviceStateManagerObserver, SPTGaiaAirplayManagerObserver, SPTNetworkConnectivityControllerObserver, SPTPlayerObserver, SPTAbbaFeatureFlagsObserver, SPTGaiaManager>
{
    _Bool _available;
    _Bool _displayingGaiaVolumeControlInMainView;
    _Bool _chromecastContextlessBarEnabled;
    GaiaSettings *_gaiaSettings;
    SPTGaiaDeviceManager *_deviceManager;
    SPTGaiaAirplayManager *_airplayManager;
    SPTCastManager *_castManager;
    SPTTheme *_theme;
    SPTNetworkConnectivityController *_networkConnectivityController;
    id <SPTPlayer> _player;
    id <SPTAbbaFeatureFlags> _abbaFeatureFlags;
    SPTGaiaLogger *_logCenter;
    long long _remoteConnectionState;
    long long _activeConnectionType;
    NSString *_activeDeviceName;
    NSHashTable *_observers;
    NSArray *_availableConnectionTypes;
    SPTPlayerState *_playerState;
    id <SPTOfflineModeState> _offlineModeState;
    GaiaFeatureImplementation *_feature;
    NSNotificationCenter *_notificationCenter;
    id <SPTModalPresentationController> _modalPresentationController;
    id <SPTCrashReporter> _crashReporter;
}

@property(retain, nonatomic) id <SPTCrashReporter> crashReporter; // @synthesize crashReporter=_crashReporter;
@property(retain, nonatomic) id <SPTModalPresentationController> modalPresentationController; // @synthesize modalPresentationController=_modalPresentationController;
@property(retain, nonatomic) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(nonatomic) __weak GaiaFeatureImplementation *feature; // @synthesize feature=_feature;
@property(retain, nonatomic) id <SPTOfflineModeState> offlineModeState; // @synthesize offlineModeState=_offlineModeState;
@property(retain, nonatomic) SPTPlayerState *playerState; // @synthesize playerState=_playerState;
@property(retain, nonatomic) NSArray *availableConnectionTypes; // @synthesize availableConnectionTypes=_availableConnectionTypes;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(nonatomic, getter=isChromecastContextlessBarEnabled) _Bool chromecastContextlessBarEnabled; // @synthesize chromecastContextlessBarEnabled=_chromecastContextlessBarEnabled;
@property(retain, nonatomic) NSString *activeDeviceName; // @synthesize activeDeviceName=_activeDeviceName;
@property(nonatomic) long long activeConnectionType; // @synthesize activeConnectionType=_activeConnectionType;
@property(nonatomic) long long remoteConnectionState; // @synthesize remoteConnectionState=_remoteConnectionState;
@property(readonly, nonatomic) SPTGaiaLogger *logCenter; // @synthesize logCenter=_logCenter;
@property(readonly, nonatomic) id <SPTAbbaFeatureFlags> abbaFeatureFlags; // @synthesize abbaFeatureFlags=_abbaFeatureFlags;
@property(readonly, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(readonly, nonatomic) SPTNetworkConnectivityController *networkConnectivityController; // @synthesize networkConnectivityController=_networkConnectivityController;
@property(retain, nonatomic) SPTTheme *theme; // @synthesize theme=_theme;
@property(nonatomic) __weak SPTCastManager *castManager; // @synthesize castManager=_castManager;
@property(retain, nonatomic) SPTGaiaAirplayManager *airplayManager; // @synthesize airplayManager=_airplayManager;
@property(retain, nonatomic) SPTGaiaDeviceManager *deviceManager; // @synthesize deviceManager=_deviceManager;
@property(retain, nonatomic) GaiaSettings *gaiaSettings; // @synthesize gaiaSettings=_gaiaSettings;
@property(readonly, nonatomic, getter=isDisplayingGaiaVolumeControlInMainView) _Bool displayingGaiaVolumeControlInMainView; // @synthesize displayingGaiaVolumeControlInMainView=_displayingGaiaVolumeControlInMainView;
@property(nonatomic, getter=isAvailable) _Bool available; // @synthesize available=_available;
- (void).cxx_destruct;
- (id)connectionStringFromConnectionType:(long long)arg1;
- (id)sourceStringFromContext:(unsigned long long)arg1;
- (id)calculatedDevicesAvailableState;
- (void)logDevicePickerShownFrom:(unsigned long long)arg1;
- (void)featureFlagsDidChange:(id)arg1;
- (void)player:(id)arg1 stateDidChange:(id)arg2;
- (void)networkConnectivityController:(id)arg1 didChangeForcedOffline:(_Bool)arg2;
- (void)dealloc;
- (void)presentDevicePickerPopOverFromView:(id)arg1 fromContext:(unsigned long long)arg2;
- (void)presentDevicePickerForTA;
- (void)presentDevicePickerOnViewController:(id)arg1 fromContext:(unsigned long long)arg2;
- (_Bool)shouldShowGaiaPicker;
- (_Bool)isConnectionTypeAvailable:(long long)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)devicePickerWillDisappear:(id)arg1;
- (void)devicePickerWillAppear:(id)arg1;
- (void)gaiaAirplayManagerDidChangeAvailability:(id)arg1;
- (void)gaiaAirplayManagerDidChangeActive:(id)arg1;
- (void)deviceStateManager:(id)arg1 deviceBeingActivatedDidChange:(id)arg2 error:(id)arg3;
- (void)deviceStateManager:(id)arg1 activeDeviceDidChange:(id)arg2;
- (void)deviceStateManager:(id)arg1 availableDevicesDidChange:(id)arg2;
- (void)deviceStateManager:(id)arg1 playingRemotelyDidChange:(_Bool)arg2;
@property(readonly, nonatomic, getter=isDevicePickerAvailable) _Bool devicePickerAvailable;
- (void)setDisplayingGaiaVolumeControlInMainView:(_Bool)arg1;
- (void)calculateChromecastContextlessBarEnabled;
- (void)calculateActiveDeviceName;
- (void)calculateActiveConnectionType;
- (void)calculateAvailable;
- (void)calculateActive;
- (id)initWithDeviceManager:(id)arg1 airplayManager:(id)arg2 castManager:(id)arg3 theme:(id)arg4 feature:(id)arg5 gaiaSettings:(id)arg6 networkConnectivityController:(id)arg7 player:(id)arg8 abbaFeatureFlags:(id)arg9 logCenter:(id)arg10 offlineModeState:(id)arg11 notificationCenter:(id)arg12 modalPresentationController:(id)arg13 crashReporter:(id)arg14;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

