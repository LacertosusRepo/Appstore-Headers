//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTPlayerObserver.h"
#import "SPTPlaylistViewModel.h"
#import "SPTSponsoredContextViewModelDelegate.h"

@class NSArray, NSDate, NSNumber, NSString, NSURL, SPSession, SPTPlayOrigin, SPTPlayerState, SPTPlaylistLogger, SPTPlaylistTestManager, SPTUser;

@interface SPTPlaylistCosmosViewModel : NSObject <SPTPlayerObserver, SPTSponsoredContextViewModelDelegate, SPTPlaylistViewModel>
{
    _Bool _playlistIsLocalFiles;
    _Bool _playlistIsAllTracksInFolder;
    _Bool _ascendingSortOrder;
    _Bool _loadError;
    id <SPTPlaylistViewModelDelegate> delegate;
    NSURL *_entityURL;
    SPSession *_session;
    SPTPlaylistLogger *_playlistLogger;
    SPTUser *_playlistOwner;
    id <SPTOfflineManager> _offlineManager;
    id <SPTSponsoredContextViewModel> _sponsoredContextViewModel;
    unsigned long long _sortColumn;
    id <SPTCollectionSortingEntityManager> _sortingEntityManager;
    id <SPTUpsellManager> _upsellManager;
    id <SPTPlaylistModel> _playlistCosmosModel;
    NSNumber *_canReportAbuseAnnotation;
    SPTPlaylistTestManager *_testManager;
    id <SPTPlaylistPlatformPlaylistDataLoader> _playlistDataLoader;
    id <SPTPlayer> _player;
    SPTPlayerState *_lastPlayerState;
    id _metadataSubscription;
    id _tracksSubscription;
    id <SPTPlaylistCosmosViewModelMetadataFields> _metadata;
    NSArray *_tracks;
    NSArray *_songItems;
    id <SPTProductState> _productState;
    NSString *_textFilter;
    SPTPlayOrigin *_playOrigin;
    long long _numberOfItems;
    id <SPTClientSettings> _clientSettings;
    struct _NSRange _currentWindow;
}

@property(nonatomic) _Bool loadError; // @synthesize loadError=_loadError;
@property(retain, nonatomic) id <SPTClientSettings> clientSettings; // @synthesize clientSettings=_clientSettings;
@property(nonatomic) long long numberOfItems; // @synthesize numberOfItems=_numberOfItems;
@property(nonatomic) struct _NSRange currentWindow; // @synthesize currentWindow=_currentWindow;
@property(retain, nonatomic) SPTPlayOrigin *playOrigin; // @synthesize playOrigin=_playOrigin;
@property(copy, nonatomic) NSString *textFilter; // @synthesize textFilter=_textFilter;
@property(retain, nonatomic) id <SPTProductState> productState; // @synthesize productState=_productState;
@property(retain, nonatomic) NSArray *songItems; // @synthesize songItems=_songItems;
@property(retain, nonatomic) NSArray *tracks; // @synthesize tracks=_tracks;
@property(retain, nonatomic) id <SPTPlaylistCosmosViewModelMetadataFields> metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) id tracksSubscription; // @synthesize tracksSubscription=_tracksSubscription;
@property(retain, nonatomic) id metadataSubscription; // @synthesize metadataSubscription=_metadataSubscription;
@property(retain, nonatomic) SPTPlayerState *lastPlayerState; // @synthesize lastPlayerState=_lastPlayerState;
@property(retain, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(retain, nonatomic) id <SPTPlaylistPlatformPlaylistDataLoader> playlistDataLoader; // @synthesize playlistDataLoader=_playlistDataLoader;
@property(retain, nonatomic) SPTPlaylistTestManager *testManager; // @synthesize testManager=_testManager;
@property(retain, nonatomic) NSNumber *canReportAbuseAnnotation; // @synthesize canReportAbuseAnnotation=_canReportAbuseAnnotation;
@property(retain, nonatomic) id <SPTPlaylistModel> playlistCosmosModel; // @synthesize playlistCosmosModel=_playlistCosmosModel;
@property(readonly, nonatomic) __weak id <SPTUpsellManager> upsellManager; // @synthesize upsellManager=_upsellManager;
@property(nonatomic) __weak id <SPTCollectionSortingEntityManager> sortingEntityManager; // @synthesize sortingEntityManager=_sortingEntityManager;
@property(nonatomic) _Bool ascendingSortOrder; // @synthesize ascendingSortOrder=_ascendingSortOrder;
@property(nonatomic) unsigned long long sortColumn; // @synthesize sortColumn=_sortColumn;
@property(retain, nonatomic) id <SPTSponsoredContextViewModel> sponsoredContextViewModel; // @synthesize sponsoredContextViewModel=_sponsoredContextViewModel;
@property(nonatomic) __weak id <SPTOfflineManager> offlineManager; // @synthesize offlineManager=_offlineManager;
@property(retain, nonatomic) SPTUser *playlistOwner; // @synthesize playlistOwner=_playlistOwner;
@property(retain, nonatomic) SPTPlaylistLogger *playlistLogger; // @synthesize playlistLogger=_playlistLogger;
@property(nonatomic) __weak SPSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) _Bool playlistIsAllTracksInFolder; // @synthesize playlistIsAllTracksInFolder=_playlistIsAllTracksInFolder;
@property(readonly, nonatomic) _Bool playlistIsLocalFiles; // @synthesize playlistIsLocalFiles=_playlistIsLocalFiles;
@property(retain, nonatomic) NSURL *entityURL; // @synthesize entityURL=_entityURL;
@property(nonatomic) __weak id <SPTPlaylistViewModelDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)sponsoredContextViewModelDidUpdate:(id)arg1;
- (void)setSortOrderWithColumn:(unsigned long long)arg1 ascending:(_Bool)arg2;
- (void)setTextFilter:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSArray *supportedSortColumns;
- (void)reloadTracks;
- (void)hideUnplayableTracksSettingDidChange;
- (id)playlistPlayOptionsForCurrentViewDidUserTapTrackRow:(_Bool)arg1;
- (void)fillOptionsForPlaylistTracks:(id)arg1;
- (void)reloadMetadata;
- (void)updateTracksWithResponse:(id)arg1;
- (void)rebuildSongItems;
- (void)updateMetadataWithResponse:(id)arg1;
- (void)reload;
- (void)changeOfflineAvailabilityForEntityURLs:(id)arg1 offline:(_Bool)arg2;
- (void)handleError:(id)arg1 withContext:(id)arg2;
- (void)player:(id)arg1 stateDidChange:(id)arg2 fromState:(id)arg3;
- (id)loggingSource;
- (long long)totalNumberOfItemsInSection:(long long)arg1;
- (long long)numberOfItemsInSection:(long long)arg1;
- (long long)numberOfSections;
- (id)itemAtIndexPath:(id)arg1;
- (void)tryLoadItemAtIndexPath:(id)arg1;
- (_Bool)tryIncreaseRangeToAtLeastIndexPath:(id)arg1;
- (_Bool)canServeItemFromCurrentWindow:(id)arg1;
- (void)followPlaylist:(_Bool)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)renamePlaylist:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (_Bool)isPlayingIndexPath:(id)arg1;
- (void)playWithShuffle:(_Bool)arg1 didUserTapTrackRow:(_Bool)arg2;
- (void)playTrackWithPlayOptions:(id)arg1 didUserTapTrackRow:(_Bool)arg2;
- (void)playAutoTrialTrackURL:(id)arg1;
- (void)playTrackAtIndexPath:(id)arg1;
- (void)playTrackURL:(id)arg1;
- (void)playFolderWithOptions:(id)arg1;
- (_Bool)filterIsActive;
- (void)moveTrackAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (id)ownerNameForTrackAtIndex:(unsigned long long)arg1;
- (void)removePlaylist;
- (void)publishPlaylist:(_Bool)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)makePlaylistCollaborative:(_Bool)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (unsigned long long)offlineAvailability;
- (long long)offlineSyncStatusForIndexPath:(id)arg1;
- (void)removeTrackAtIndex:(unsigned long long)arg1;
- (_Bool)shouldHighlightTracks;
- (void)updateFollowerCount;
- (void)removeObservers;
- (void)setupObservers;
- (void)viewDidLoad;
- (void)load;
- (_Bool)containsTrackWithURI:(id)arg1;
@property(readonly, nonatomic) NSArray *playerTracks;
- (_Bool)sortingIsActive;
@property(readonly, nonatomic) _Bool playlistCanEditTrackOrder;
@property(readonly, nonatomic) _Bool playlistCanBeEdited;
@property(readonly, nonatomic, getter=isPlaylistPublished) _Bool playlistPublished;
@property(nonatomic, getter=isAvailableOffline) _Bool availableOffline;
@property(readonly, nonatomic, getter=isPlaylistIsCollaborative) _Bool playlistIsCollaborative;
@property(readonly, nonatomic) NSString *descriptionForSpotlightIndex;
@property(readonly, nonatomic) NSString *playlistDescription;
@property(readonly, nonatomic) _Bool totalDurationLoaded;
@property(readonly, nonatomic, getter=isLoaded) _Bool loaded; // @dynamic loaded;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
@property(readonly, nonatomic) _Bool enableReportAbuse;
@property(readonly, nonatomic) NSURL *playlistOwnerProfilePictureThumbnailURL;
@property(readonly, nonatomic) NSURL *playlistOwnerProfilePictureURL;
@property(readonly, nonatomic) NSURL *playlistOwnerLink;
@property(readonly, copy, nonatomic) NSString *playlistOwnerName;
@property(readonly, nonatomic) NSString *playlistName; // @dynamic playlistName;
@property(readonly, nonatomic) NSURL *playlistImageURL; // @dynamic playlistImageURL;
@property(readonly, nonatomic) _Bool playlistIsOwnedByCurrentUser;
@property(readonly, nonatomic) _Bool playlistIsFollowedByCurrentUser;
@property(readonly, nonatomic) double totalDuration;
@property(readonly, nonatomic) NSString *numberOfSubscribersText; // @dynamic numberOfSubscribersText;
@property(readonly, nonatomic) long long numberOfSubscribers;
@property(readonly, nonatomic) NSDate *playlistLastEditedDate;
- (id)initWithEntityURL:(id)arg1 playlistDataLoader:(id)arg2 playlistModel:(id)arg3 player:(id)arg4 session:(id)arg5 playlistLogger:(id)arg6 offlineManager:(id)arg7 sponsoredContextModel:(id)arg8 sortingEntityManager:(id)arg9 upsellManager:(id)arg10 testManager:(id)arg11 playOrigin:(id)arg12 clientSettings:(id)arg13;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

