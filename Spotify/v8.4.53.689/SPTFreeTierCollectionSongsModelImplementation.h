//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTExplicitContentEnabledStateObserver.h"
#import "SPTFreeTierCollectionRangeDataSourceDelegate.h"
#import "SPTFreeTierCollectionSongsDataLoaderDelegate.h"
#import "SPTFreeTierCollectionSongsModel.h"
#import "SPTProductStateObserver.h"

@class NSMutableArray, NSSet, NSString;

@interface SPTFreeTierCollectionSongsModelImplementation : NSObject <SPTExplicitContentEnabledStateObserver, SPTProductStateObserver, SPTFreeTierCollectionSongsModel, SPTFreeTierCollectionRangeDataSourceDelegate, SPTFreeTierCollectionSongsDataLoaderDelegate>
{
    _Bool _firstLoadPerformed;
    _Bool _loaded;
    id <SPTFreeTierCollectionSongsModelDelegate> delegate;
    id <SPTFreeTierCollectionRangeDataSource> _rangeDataSource;
    id <SPTCollectionPlatform> _collectionPlatform;
    id <SPTFreeTierRecommendationsTracksDataLoader> _recommendationsTracksDataLoader;
    id <SPTClientSettings> _clientSettings;
    id <SPTExplicitContentAccessManager> _explicitContentAccessManager;
    id <SPTProductState> _productState;
    NSMutableArray *_recommendedTracks;
    id <SPTCollectionPlatformDataLoaderRequestToken> _bannedTrackSubscription;
    NSSet *_bannedTracks;
    unsigned long long _offlineAvailability;
}

@property(nonatomic) unsigned long long offlineAvailability; // @synthesize offlineAvailability=_offlineAvailability;
@property(retain, nonatomic) NSSet *bannedTracks; // @synthesize bannedTracks=_bannedTracks;
@property(retain, nonatomic) id <SPTCollectionPlatformDataLoaderRequestToken> bannedTrackSubscription; // @synthesize bannedTrackSubscription=_bannedTrackSubscription;
@property(retain, nonatomic) NSMutableArray *recommendedTracks; // @synthesize recommendedTracks=_recommendedTracks;
@property(nonatomic, getter=isLoaded) _Bool loaded; // @synthesize loaded=_loaded;
@property(nonatomic, getter=isFirstLoadPerformed) _Bool firstLoadPerformed; // @synthesize firstLoadPerformed=_firstLoadPerformed;
@property(readonly, nonatomic) id <SPTProductState> productState; // @synthesize productState=_productState;
@property(readonly, nonatomic) id <SPTExplicitContentAccessManager> explicitContentAccessManager; // @synthesize explicitContentAccessManager=_explicitContentAccessManager;
@property(retain, nonatomic) id <SPTClientSettings> clientSettings; // @synthesize clientSettings=_clientSettings;
@property(retain, nonatomic) id <SPTFreeTierRecommendationsTracksDataLoader> recommendationsTracksDataLoader; // @synthesize recommendationsTracksDataLoader=_recommendationsTracksDataLoader;
@property(nonatomic) __weak id <SPTCollectionPlatform> collectionPlatform; // @synthesize collectionPlatform=_collectionPlatform;
@property(retain, nonatomic) id <SPTFreeTierCollectionRangeDataSource> rangeDataSource; // @synthesize rangeDataSource=_rangeDataSource;
@property(nonatomic) __weak id <SPTFreeTierCollectionSongsModelDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)explicitContentEnabledStateDidChange:(_Bool)arg1;
- (void)productState:(id)arg1 stateDidChange:(id)arg2;
- (void)songsDataLoader:(id)arg1 didUpdateOfflineAvailability:(unsigned long long)arg2;
- (void)rangeDataSource:(id)arg1 error:(id)arg2;
- (void)rangeDataSourceUpdated:(id)arg1;
- (_Bool)filterDuplicatedRecommendations;
- (_Bool)filterBannedRecommentations;
- (void)subscribeBannedTracks;
- (id)collectionOptions;
- (void)playWithPlayOrigin:(id)arg1 options:(id)arg2;
- (void)playWithRecommendationsUsingPlayer:(id)arg1 playOrigin:(id)arg2 options:(id)arg3;
- (void)changeTrackURL:(id)arg1 likeState:(_Bool)arg2;
- (void)changeTrackURL:(id)arg1 banState:(_Bool)arg2;
- (void)setAvailableOffline:(_Bool)arg1;
- (_Bool)isPlaybackRestrictedForItemURL:(id)arg1 itemExplicit:(_Bool)arg2 playbackPrevented:(_Bool)arg3;
- (void)playTrackEntity:(id)arg1 andPlayOrigin:(id)arg2;
- (void)shufflePlayWithPlayOrigin:(id)arg1 fallbackPlayer:(id)arg2;
- (void)loadRecommendationsIfNeeded;
- (void)notifyModelUpdateIfLoaded;
- (void)requestRecommendations;
@property(readonly, nonatomic, getter=isOfflineSyncAvailable) _Bool offlineSyncAvailable;
@property(readonly, nonatomic, getter=isPreviewsAvailable) _Bool previewsAvailable;
- (void)loadModel;
- (id)recommendedItemAtIndex:(unsigned long long)arg1;
- (id)itemAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long numberRecommendedItems;
@property(readonly, nonatomic) unsigned long long numberItems;
- (void)dealloc;
- (id)initWithCollectionPlatform:(id)arg1 recommendedTracksDataLoader:(id)arg2 clientSettings:(id)arg3 explicitContentAccessManager:(id)arg4 productState:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

