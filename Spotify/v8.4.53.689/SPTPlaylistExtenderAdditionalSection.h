//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTNetworkConnectivityControllerObserver.h"
#import "SPTPlayerObserver.h"
#import "SPTPlaylistAdditionalSection.h"
#import "SPTPlaylistAdditionalSectionNux.h"
#import "SPTPlaylistExtenderSectionHeaderViewDelegate.h"
#import "SPTPlaylistTrackCellConfiguratorDelegate.h"

@class NSArray, NSMutableArray, NSString, NSURL, SPTNetworkConnectivityController, SPTPlaylistExtender, SPTPlaylistExtenderLogger, SPTPlaylistExtenderRefreshViewCell, SPTPlaylistExtenderSectionHeaderView, SPTPlaylistTrackCellConfigurator;

@interface SPTPlaylistExtenderAdditionalSection : NSObject <SPTPlayerObserver, SPTPlaylistExtenderSectionHeaderViewDelegate, SPTNetworkConnectivityControllerObserver, SPTPlaylistTrackCellConfiguratorDelegate, SPTPlaylistAdditionalSection, SPTPlaylistAdditionalSectionNux>
{
    _Bool _refreshingRecomendations;
    _Bool _requestPending;
    _Bool _shouldPlayExtenderContext;
    _Bool _hidden;
    _Bool _enabled;
    CDStruct_811f134b _delegateImpFlags;
    _Bool _waitingForRecommendationsTimer;
    _Bool _hasPerformedCellRegistration;
    id <SPTPlaylistAdditionalSectionDelegate> _delegate;
    SPTPlaylistExtenderRefreshViewCell *_footerTableViewCell;
    NSArray *_currentTrackURLs;
    unsigned long long _preferedNumberOfTracks;
    unsigned long long _recommendationsSource;
    SPTPlaylistExtender *_playlistExtender;
    id <SPTPlayer> _player;
    id <SPTPlaylistModel> _playlistModel;
    id <SPTPlaylistPlatformPlaylistDataLoader> _playlistDataLoader;
    NSURL *_playlistURI;
    NSMutableArray *_items;
    CDUnknownBlockType _onExtraTracks;
    NSURL *_lastPlayingTrack;
    unsigned long long _state;
    SPTPlaylistExtenderSectionHeaderView *_header;
    SPTPlaylistExtenderLogger *_logger;
    SPTNetworkConnectivityController *_networkConnectivityController;
    id <SPTExplicitContentAccessManager> _explicitContentAccessManager;
    SPTPlaylistTrackCellConfigurator *_trackCellConfigurator;
    id <SPTShelves> _shelves;
    id <GLUETheme> _theme;
}

@property(nonatomic) _Bool hasPerformedCellRegistration; // @synthesize hasPerformedCellRegistration=_hasPerformedCellRegistration;
@property(readonly, nonatomic) id <GLUETheme> theme; // @synthesize theme=_theme;
@property(readonly, nonatomic) id <SPTShelves> shelves; // @synthesize shelves=_shelves;
@property(retain, nonatomic) SPTPlaylistTrackCellConfigurator *trackCellConfigurator; // @synthesize trackCellConfigurator=_trackCellConfigurator;
@property(nonatomic) _Bool waitingForRecommendationsTimer; // @synthesize waitingForRecommendationsTimer=_waitingForRecommendationsTimer;
@property(nonatomic) CDStruct_811f134b delegateImpFlags; // @synthesize delegateImpFlags=_delegateImpFlags;
@property(readonly, nonatomic) id <SPTExplicitContentAccessManager> explicitContentAccessManager; // @synthesize explicitContentAccessManager=_explicitContentAccessManager;
@property(readonly, nonatomic) SPTNetworkConnectivityController *networkConnectivityController; // @synthesize networkConnectivityController=_networkConnectivityController;
@property(retain, nonatomic) SPTPlaylistExtenderLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SPTPlaylistExtenderSectionHeaderView *header; // @synthesize header=_header;
@property(readonly, nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) _Bool hidden; // @synthesize hidden=_hidden;
@property(nonatomic) _Bool shouldPlayExtenderContext; // @synthesize shouldPlayExtenderContext=_shouldPlayExtenderContext;
@property(nonatomic) _Bool requestPending; // @synthesize requestPending=_requestPending;
@property(nonatomic) _Bool refreshingRecomendations; // @synthesize refreshingRecomendations=_refreshingRecomendations;
@property(retain, nonatomic) NSURL *lastPlayingTrack; // @synthesize lastPlayingTrack=_lastPlayingTrack;
@property(copy, nonatomic) CDUnknownBlockType onExtraTracks; // @synthesize onExtraTracks=_onExtraTracks;
@property(retain, nonatomic) NSMutableArray *items; // @synthesize items=_items;
@property(retain, nonatomic) NSURL *playlistURI; // @synthesize playlistURI=_playlistURI;
@property(retain, nonatomic) id <SPTPlaylistPlatformPlaylistDataLoader> playlistDataLoader; // @synthesize playlistDataLoader=_playlistDataLoader;
@property(retain, nonatomic) id <SPTPlaylistModel> playlistModel; // @synthesize playlistModel=_playlistModel;
@property(retain, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(retain, nonatomic) SPTPlaylistExtender *playlistExtender; // @synthesize playlistExtender=_playlistExtender;
@property(nonatomic) unsigned long long recommendationsSource; // @synthesize recommendationsSource=_recommendationsSource;
@property(nonatomic) unsigned long long preferedNumberOfTracks; // @synthesize preferedNumberOfTracks=_preferedNumberOfTracks;
@property(retain, nonatomic) NSArray *currentTrackURLs; // @synthesize currentTrackURLs=_currentTrackURLs;
@property(retain, nonatomic) SPTPlaylistExtenderRefreshViewCell *footerTableViewCell; // @synthesize footerTableViewCell=_footerTableViewCell;
@property(nonatomic) __weak id <SPTPlaylistAdditionalSectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)networkConnectivityController:(id)arg1 didChangeConnectionType:(long long)arg2 oldConnectionType:(long long)arg3;
- (void)toggleCollapsedPlaylistExtenderForSectionHeaderView:(id)arg1;
- (void)refreshPlaylistAction;
- (void)updateAndDelayedFadeInVisisbleRowsWithCompletion:(CDUnknownBlockType)arg1;
- (void)delayedFadeOutVisisbleRowsWithCompletion:(CDUnknownBlockType)arg1;
- (void)fadeOutVisibleRows;
- (void)disableVisibleCells;
- (_Bool)canToAnimateNewRecommendations;
- (void)invalidateWaitingForRecommendationsTimer;
- (void)startWaitingForRecommendationsTimer;
- (void)loadRequestWithNumberOfItems:(long long)arg1 currentTracks:(id)arg2 replaceCurrent:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)notifyContentDidChange;
- (void)updateItems;
- (void)rebuildItemsArray;
- (void)loadRequestAndReplaceCurrent:(_Bool)arg1 numberOfTracks:(unsigned long long)arg2 complete:(CDUnknownBlockType)arg3;
- (void)loadRequestAndReplaceCurrent:(_Bool)arg1 complete:(CDUnknownBlockType)arg2;
- (void)tappedCellAtIndexPath:(id)arg1;
- (void)cellConfiguratorTrailingAccessoryButtonTapped:(id)arg1 inCell:(id)arg2;
- (void)cellConfiguratorTableViewNeedsReload;
- (void)player:(id)arg1 stateDidChange:(id)arg2;
- (double)heightForSectionViewFooter;
- (double)heightForSectionViewHeader;
- (id)sectionViewHeader;
- (_Bool)updateHeaderAndStateWithRecommendationSource:(unsigned long long)arg1;
- (_Bool)didSelectItemAtIndex:(unsigned long long)arg1;
- (id)cellItemStateForIndex:(long long)arg1;
- (id)cellItemForIndex:(long long)arg1;
- (void)configureTrackCell:(id)arg1 indexPath:(id)arg2;
- (id)cellForIndexPath:(id)arg1 forTableView:(id)arg2;
- (id)itemAtIndex:(unsigned long long)arg1;
- (_Bool)shouldOverrideMainSectionHeader;
@property(readonly, nonatomic) NSString *mainSectionTitle;
@property(readonly, nonatomic) NSString *title;
- (unsigned long long)numberOfTracks;
- (unsigned long long)numberOfItems;
- (_Bool)isRefreshCellAtIndex:(unsigned long long)arg1;
- (_Bool)shouldDisplayRefreshCell;
- (void)willHideNux;
@property(readonly, nonatomic) _Bool showInNUX;
- (void)persistHiddenState:(_Bool)arg1;
- (_Bool)loadHiddenState;
- (void)removeState:(unsigned long long)arg1;
- (void)addState:(unsigned long long)arg1;
- (_Bool)loadIfNecessaryReplacingCurrent:(_Bool)arg1;
- (_Bool)canPerformNewRequest;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithPlaylistExtender:(id)arg1 player:(id)arg2 playlistURI:(id)arg3 playlistModel:(id)arg4 playlistDataLoader:(id)arg5 logger:(id)arg6 networkConnectivityController:(id)arg7 explicitContentAccessManager:(id)arg8 shelves:(id)arg9 theme:(id)arg10 onExtraTracks:(CDUnknownBlockType)arg11;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

