//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTAdFeedbackContextMenuHeaderHandlerDelegate.h"
#import "SPTAdFocusManagerObserver.h"
#import "SPTAdRegistryObserver.h"
#import "SPTPlayerObserver.h"

@class AVAudioSession, NSString, SPTAdCosmosBridge, SPTAdFeatureFlagChecks, SPTAdFeedbackContextMenuHeaderHandler, SPTAdFocusManager, SPTAdRegistry, SPTPlayerState;

@interface SPTAdNowPlayingManager : NSObject <SPTAdRegistryObserver, SPTPlayerObserver, SPTAdFocusManagerObserver, SPTAdFeedbackContextMenuHeaderHandlerDelegate>
{
    _Bool _inAdBreak;
    _Bool _nowPlayingViewHiddenBeforeAdStart;
    float _previousVolume;
    id <SPTNowPlayingManager> _nowPlayingManager;
    SPTAdCosmosBridge *_cosmosBridge;
    SPTAdRegistry *_adRegistry;
    id <SPTPlayer> _player;
    SPTAdFeatureFlagChecks *_featureChecker;
    SPTAdFocusManager *_adFocusManager;
    id <SPTAdEventLogger> _adEventLogger;
    SPTAdFeedbackContextMenuHeaderHandler *_feedbackHandler;
    id <SPContextMenuFeature> _contextMenuFeature;
    AVAudioSession *_audioSession;
    NSString *_previousAudioOutput;
}

@property(nonatomic, getter=isNowPlayingViewHiddenBeforeAdStart) _Bool nowPlayingViewHiddenBeforeAdStart; // @synthesize nowPlayingViewHiddenBeforeAdStart=_nowPlayingViewHiddenBeforeAdStart;
@property(retain, nonatomic) NSString *previousAudioOutput; // @synthesize previousAudioOutput=_previousAudioOutput;
@property(nonatomic) float previousVolume; // @synthesize previousVolume=_previousVolume;
@property(retain, nonatomic) AVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property(nonatomic) __weak id <SPContextMenuFeature> contextMenuFeature; // @synthesize contextMenuFeature=_contextMenuFeature;
@property(retain, nonatomic) SPTAdFeedbackContextMenuHeaderHandler *feedbackHandler; // @synthesize feedbackHandler=_feedbackHandler;
@property(retain, nonatomic) id <SPTAdEventLogger> adEventLogger; // @synthesize adEventLogger=_adEventLogger;
@property(retain, nonatomic) SPTAdFocusManager *adFocusManager; // @synthesize adFocusManager=_adFocusManager;
@property(retain, nonatomic) SPTAdFeatureFlagChecks *featureChecker; // @synthesize featureChecker=_featureChecker;
@property(retain, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(retain, nonatomic) SPTAdRegistry *adRegistry; // @synthesize adRegistry=_adRegistry;
@property(retain, nonatomic) SPTAdCosmosBridge *cosmosBridge; // @synthesize cosmosBridge=_cosmosBridge;
@property(nonatomic, getter=isInAdBreak) _Bool inAdBreak; // @synthesize inAdBreak=_inAdBreak;
@property(nonatomic) __weak id <SPTNowPlayingManager> nowPlayingManager; // @synthesize nowPlayingManager=_nowPlayingManager;
- (void).cxx_destruct;
- (_Bool)isVideoCompanionAd:(id)arg1;
- (void)showFeedbackHandler:(_Bool)arg1;
- (void)createFeedbackHandlerIfNeeded:(id)arg1;
- (void)didFinishDisplayingContextMenu;
- (void)adFocusManagerDidResignActive:(id)arg1;
- (void)adFocusManagerDidBecomeActive:(id)arg1;
- (void)adRegistry:(id)arg1 didProcessAdEntity:(id)arg2 event:(long long)arg3;
- (void)processAdBreakChange:(id)arg1;
- (void)subscribeToAdBreakChanges;
- (void)logEvent:(id)arg1;
- (id)getAudioRoute;
- (void)volumeChanged:(id)arg1;
- (void)audioRouteChanged:(id)arg1;
- (void)addAVAudioChangeObservers;
- (void)showNowPlayingView:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=isPlayingSkippableAd) _Bool playingSkippableAd;
@property(readonly, nonatomic, getter=isPlayingVideoAd) _Bool playingVideoAd;
@property(readonly, nonatomic, getter=isPlayingAd) _Bool playingAd;
@property(readonly, nonatomic) SPTPlayerState *currentPlayerState;
- (void)dealloc;
- (id)initWithCosmosBridge:(id)arg1 adRegistry:(id)arg2 player:(id)arg3 featureChecker:(id)arg4 adFocusManager:(id)arg5 adEventLogger:(id)arg6 contextMenuFeature:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

