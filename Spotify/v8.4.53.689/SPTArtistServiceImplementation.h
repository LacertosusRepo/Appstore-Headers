//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTArtistService.h"
#import "SPTArtistTestManagerDelegate.h"
#import "SPTFeatureFlagSignalObserver.h"

@class NSString, SPTAllocationContext, SPTArtistEndpointFactory, SPTArtistHubManager, SPTArtistResolverFactory, SPTArtistSettingsManager, SPTArtistTestManager<SPTArtistSettingsManagerDelegate>;

@interface SPTArtistServiceImplementation : NSObject <SPTArtistTestManagerDelegate, SPTFeatureFlagSignalObserver, SPTArtistService>
{
    id <SPTAbbaFeatureFlags> _featureFlags;
    id <SPTFeatureFlagSignal> _legacyArtistFeatureEnabledSignal;
    id <SPTFeatureFlagSignal> _heartsEverywhereSignal;
    SPTArtistTestManager<SPTArtistSettingsManagerDelegate> *_testManager;
    SPTArtistSettingsManager *_settingsManager;
    id <SPTArtistUIService> _artistUIService;
    id <SPTNavigationFeature> _navigationService;
    id <SPTSettingsFeature> _settingsFeature;
    id <SPTAbbaService> _abbaService;
    id <SPTFeatureFlaggingService> _featureFlagService;
    id <SPTSessionService> _clientSessionService;
    id <SPTContainerService> _containerService;
    id <SPTCoreService> _coreService;
    id <SPTNetworkService> _networkFeature;
    id <CosmosFeature> _cosmos;
    id <SPContextMenuFeature> _contextMenuFeature;
    id <SPTShelfService> _shelfService;
    id <FollowFeature> _followFeature;
    id <SPTFreeTierService> _freeTierService;
    id <SPTGLUEService> _glueService;
    id <NowPlayingFeature> _nowPlayingService;
    id <SPTURIDispatchService> _uriDispatchService;
    id <SPTCrashReporterService> _crashReporterService;
    id <SPTUIPresentationService> _presentationService;
    id <SPTExplicitContentService> _explicitContentService;
    id <SPTPerformanceMetricsService> _performanceMetricsService;
    id <SPTCollectionPlatformService> _collectionPlatformService;
    id <SPTResolver> _preloadResolver;
    SPTArtistResolverFactory *_resolverFactory;
    SPTArtistEndpointFactory *_endpointFactory;
    id <SPTCrashReporter> _crashReporter;
    id <SPTPageRegistrationToken> _pageRegistrationToken;
    id <EXP_SPTHubFrameworkService> _exp_hubFrameworkService;
    SPTArtistHubManager *_tinyHubManager;
}

+ (id)serviceIdentifier;
@property(retain, nonatomic) SPTArtistHubManager *tinyHubManager; // @synthesize tinyHubManager=_tinyHubManager;
@property(nonatomic) __weak id <EXP_SPTHubFrameworkService> exp_hubFrameworkService; // @synthesize exp_hubFrameworkService=_exp_hubFrameworkService;
@property(retain, nonatomic) id <SPTPageRegistrationToken> pageRegistrationToken; // @synthesize pageRegistrationToken=_pageRegistrationToken;
@property(retain, nonatomic) id <SPTCrashReporter> crashReporter; // @synthesize crashReporter=_crashReporter;
@property(retain, nonatomic) SPTArtistEndpointFactory *endpointFactory; // @synthesize endpointFactory=_endpointFactory;
@property(retain, nonatomic) SPTArtistResolverFactory *resolverFactory; // @synthesize resolverFactory=_resolverFactory;
@property(retain, nonatomic) id <SPTResolver> preloadResolver; // @synthesize preloadResolver=_preloadResolver;
@property(nonatomic) __weak id <SPTCollectionPlatformService> collectionPlatformService; // @synthesize collectionPlatformService=_collectionPlatformService;
@property(nonatomic) __weak id <SPTPerformanceMetricsService> performanceMetricsService; // @synthesize performanceMetricsService=_performanceMetricsService;
@property(nonatomic) __weak id <SPTExplicitContentService> explicitContentService; // @synthesize explicitContentService=_explicitContentService;
@property(nonatomic) __weak id <SPTUIPresentationService> presentationService; // @synthesize presentationService=_presentationService;
@property(nonatomic) __weak id <SPTCrashReporterService> crashReporterService; // @synthesize crashReporterService=_crashReporterService;
@property(nonatomic) __weak id <SPTURIDispatchService> uriDispatchService; // @synthesize uriDispatchService=_uriDispatchService;
@property(nonatomic) __weak id <NowPlayingFeature> nowPlayingService; // @synthesize nowPlayingService=_nowPlayingService;
@property(nonatomic) __weak id <SPTGLUEService> glueService; // @synthesize glueService=_glueService;
@property(nonatomic) __weak id <SPTFreeTierService> freeTierService; // @synthesize freeTierService=_freeTierService;
@property(nonatomic) __weak id <FollowFeature> followFeature; // @synthesize followFeature=_followFeature;
@property(nonatomic) __weak id <SPTShelfService> shelfService; // @synthesize shelfService=_shelfService;
@property(nonatomic) __weak id <SPContextMenuFeature> contextMenuFeature; // @synthesize contextMenuFeature=_contextMenuFeature;
@property(nonatomic) __weak id <CosmosFeature> cosmos; // @synthesize cosmos=_cosmos;
@property(nonatomic) __weak id <SPTNetworkService> networkFeature; // @synthesize networkFeature=_networkFeature;
@property(nonatomic) __weak id <SPTCoreService> coreService; // @synthesize coreService=_coreService;
@property(nonatomic) __weak id <SPTContainerService> containerService; // @synthesize containerService=_containerService;
@property(nonatomic) __weak id <SPTSessionService> clientSessionService; // @synthesize clientSessionService=_clientSessionService;
@property(nonatomic) __weak id <SPTFeatureFlaggingService> featureFlagService; // @synthesize featureFlagService=_featureFlagService;
@property(nonatomic) __weak id <SPTAbbaService> abbaService; // @synthesize abbaService=_abbaService;
@property(nonatomic) __weak id <SPTSettingsFeature> settingsFeature; // @synthesize settingsFeature=_settingsFeature;
@property(nonatomic) __weak id <SPTNavigationFeature> navigationService; // @synthesize navigationService=_navigationService;
@property(nonatomic) __weak id <SPTArtistUIService> artistUIService; // @synthesize artistUIService=_artistUIService;
@property(retain, nonatomic) SPTArtistSettingsManager *settingsManager; // @synthesize settingsManager=_settingsManager;
@property(retain, nonatomic) SPTArtistTestManager<SPTArtistSettingsManagerDelegate> *testManager; // @synthesize testManager=_testManager;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> heartsEverywhereSignal; // @synthesize heartsEverywhereSignal=_heartsEverywhereSignal;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> legacyArtistFeatureEnabledSignal; // @synthesize legacyArtistFeatureEnabledSignal=_legacyArtistFeatureEnabledSignal;
@property(retain, nonatomic) id <SPTAbbaFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
- (void).cxx_destruct;
- (void)unregisterArtistFeature;
- (void)registerArtistServie;
- (void)featureFlagSignal:(id)arg1 hasAssumedState:(long long)arg2;
- (id)provideLegacyArtistFeatureEnabledSignal;
- (void)artistViewHubsVersionChanged:(id)arg1;
- (id)provideSettingsManager;
- (void)unregisterPageRegistryRegistration;
- (void)unregisterArtistViewWithTinyHubs;
- (void)registerArtistViewWithTinyHubs;
- (void)manageRegisteringArtistView;
- (id)viewLoggerForViewURI:(id)arg1;
- (void)registerNPVTrackModuleProvider;
- (id)createPreloadResolver;
- (id)provideArtistLogger;
- (id)provideArtistViewModelForSubview:(id)arg1 artistURL:(id)arg2 ceramicSpaceTarget:(unsigned long long)arg3;
- (id)provideTinyHubsViewController:(id)arg1 context:(id)arg2;
- (id)provideArtistAlbumsViewController:(id)arg1;
- (id)provideArtistPlaylistsViewController:(id)arg1;
- (id)provideArtistRelatedArtistsViewController:(id)arg1;
- (id)provideArtistAboutViewController:(id)arg1;
- (void)unload;
- (void)load;
- (void)configureWithServices:(id)arg1;

// Remaining properties
@property(retain, nonatomic) SPTAllocationContext *allocationContext;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

