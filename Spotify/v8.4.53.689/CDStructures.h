//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class SPTOfflineManager;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AVConnectionType;

struct AVPlayerState;

struct AbstractConnectDevice;

struct ActivityPeriod {
    int _field1;
    int _field2;
};

struct AlbumGroup;

struct AlbumInfo {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<spotify::metadata::AlbumInfo> _field2;
    struct MetadataModel *_field3;
    unsigned int :1;
};

struct AlbumMetadata {
    struct shared_ptr<spotify::metadata::AlbumInfo> _field1;
    struct vector<spotify::metadata::AlbumMetadata::Disc, std::__1::allocator<spotify::metadata::AlbumMetadata::Disc>> _field2;
    vector_553ebee1 _field3;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field4;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field5;
    vector_553ebee1 _field6;
};

struct ApHandler {
    CDUnknownFunctionPointerType *_field1;
};

struct ApResolver;

struct AppKey {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field1;
    basic_string_7c0a1c0b _field2;
};

struct AppleSessionManager;

struct ApplicationStateTracker {
    struct shared_ptr<spotify::client::ApplicationStateTracker::Impl> _field1;
};

struct Array<ComScore::EventInfo::ClientInfo, ComScore::DummyCriticalSection, 0> {
    struct ArrayAllocationBase<ComScore::EventInfo::ClientInfo, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct Array<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection, 0> {
    struct ArrayAllocationBase<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct Array<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::DummyCriticalSection>::HashEntry *, ComScore::DummyCriticalSection, 0> {
    struct ArrayAllocationBase<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::DummyCriticalSection>::HashEntry *, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct Array<ComScore::String, ComScore::DummyCriticalSection, 0> {
    struct ArrayAllocationBase<ComScore::String, ComScore::DummyCriticalSection> data;
    int numUsed;
};

struct ArrayAllocationBase<ComScore::EventInfo::ClientInfo, ComScore::DummyCriticalSection> {
    struct HeapBlock<ComScore::EventInfo::ClientInfo, false> _field1;
    int _field2;
};

struct ArrayAllocationBase<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection> {
    struct HeapBlock<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, false> _field1;
    int _field2;
};

struct ArrayAllocationBase<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::DummyCriticalSection>::HashEntry *, ComScore::DummyCriticalSection> {
    struct HeapBlock<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::DummyCriticalSection>::HashEntry *, false> _field1;
    int _field2;
};

struct ArrayAllocationBase<ComScore::String, ComScore::DummyCriticalSection> {
    struct HeapBlock<ComScore::String, false> elements;
    int numAllocated;
};

struct ArrayAllocationBase<ConfigurationListenerImpl *, ComScore::DummyCriticalSection> {
    struct HeapBlock<ConfigurationListenerImpl *, false> _field1;
    int _field2;
};

struct ArrayAllocationBase<StreamingListenerImpl *, ComScore::CriticalSection> {
    struct _opaque_pthread_mutex_t _field1;
    struct HeapBlock<StreamingListenerImpl *, false> _field2;
    int _field3;
};

struct ArtistInfo {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<spotify::metadata::ArtistInfo> _field2;
    struct MetadataModel *_field3;
    basic_string_7c0a1c0b _field4;
};

struct ArtistMetadata {
    struct shared_ptr<spotify::metadata::ArtistInfo> _field1;
    vector_553ebee1 _field2;
    struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> _field3;
    struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> _field4;
    struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> _field5;
    struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> _field6;
    vector_553ebee1 _field7;
    struct vector<spotify::metadata::BiographyOrReview, std::__1::allocator<spotify::metadata::BiographyOrReview>> _field8;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field9;
    struct ActivityPeriod _field10;
};

struct Asset;

struct Atomic<int> {
    int _field1;
};

struct AudioBuffer {
    unsigned int mNumberChannels;
    unsigned int mDataByteSize;
    void *mData;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioDriver {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioVolumeControlManager {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection>, std::__1::allocator<std::__1::pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection>>> _field2;
    struct signal<void (spotify::playback::VolumeChangeReason), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::playback::VolumeChangeReason)>, boost::function<void (const boost::signals2::connection &, spotify::playback::VolumeChangeReason)>, boost::signals2::mutex> _field3;
    int _field4;
};

struct BMWRemotingClientFactory {
    CDUnknownFunctionPointerType *_field1;
};

struct BiographyOrReview;

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CCCubeCell {
    unsigned int hitCount;
    double redAcc;
    double greenAcc;
    double blueAcc;
};

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGColor;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct CacheInfo {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    _Bool _field4;
};

struct CharPointer_UTF8 {
    char *_field1;
};

struct ClientConfiguration;

struct ClientFeatureStack {
    struct unique_ptr<spotify::client_features::ClientFeatureStack::Impl, std::__1::default_delete<spotify::client_features::ClientFeatureStack::Impl>> _field1;
};

struct ClientInfo;

struct ClientVersionInfo {
    unsigned int _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
};

struct Configuration;

struct ConfigurationListenerImpl;

struct ConnectionFactory;

struct ConnectivityManager {
    struct unique_ptr<spotify::client::ConnectivityManager::Impl, std::__1::default_delete<spotify::client::ConnectivityManager::Impl>> _field1;
};

struct ContextPlayerOptionOverrides {
    struct optional<bool> _field1;
    struct optional<bool> _field2;
    struct optional<bool> _field3;
};

struct ContextTrack {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    struct flat_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field3;
};

struct Core {
    CDUnknownFunctionPointerType *_field1;
};

struct CoreCreateOptions {
    struct CacheInfo _field1;
    struct DeviceInfo _field2;
    struct ClientVersionInfo _field3;
    struct AppKey _field4;
    int _field5;
    struct NetworkInfo _field6;
    basic_string_7c0a1c0b _field7;
    basic_string_7c0a1c0b _field8;
    basic_string_7c0a1c0b _field9;
    struct function<void (const std::__1::basic_string<char>&)> _field10;
    _Bool _field11;
};

struct CoreLoginOptions {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    _Bool _field5;
    basic_string_7c0a1c0b _field6;
    struct ProxySettings _field7;
    struct optional<unsigned char> _field8;
    struct optional<unsigned int> _field9;
};

struct CriticalSection {
    struct _opaque_pthread_mutex_t _field1;
};

struct DefaultHashFunctions;

struct DeviceInfo {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
};

struct DialManagerInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct Disc;

struct DummyCriticalSection;

struct EtchAsyncResult<EtchBool>;

struct EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>>;

struct EtchAsyncResult<EtchInt32>;

struct EtchAsyncResult<EtchNativeArray<signed char>>;

struct EtchAsyncResult<EtchObject>;

struct EtchAsyncResult<EtchString>;

struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>;

struct EtchAsyncResultNone;

struct EtchBool;

struct EtchByte;

struct EtchDeliveryService;

struct EtchException;

struct EtchFloat;

struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchHash<EtchString>> {
    CDUnknownFunctionPointerType *_field1;
    struct list<const EtchObjectType *, std::__1::allocator<const EtchObjectType *>> _field2;
    struct __hash_table<std::__1::__hash_value_type<EtchString, EtchObject *>, std::__1::__unordered_map_hasher<EtchString, std::__1::__hash_value_type<EtchString, EtchObject *>, EtchHash<EtchString>, true>, std::__1::__unordered_map_equal<EtchString, std::__1::__hash_value_type<EtchString, EtchObject *>, EtchComparator<EtchString>, true>, std::__1::allocator<std::__1::__hash_value_type<EtchString, EtchObject *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<EtchString, std::__1::__hash_value_type<EtchString, EtchObject *>, EtchHash<EtchString>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<EtchString, std::__1::__hash_value_type<EtchString, EtchObject *>, EtchComparator<EtchString>, true>> {
            float _field1;
        } _field4;
    } _field3;
};

struct EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>;

struct EtchInt32 {
    CDUnknownFunctionPointerType *_field1;
    struct list<const EtchObjectType *, std::__1::allocator<const EtchObjectType *>> _field2;
    int _field3;
};

struct EtchNativeArray<signed char>;

struct EtchNativeArray<std::__1::shared_ptr<EtchObject>>;

struct EtchObject;

struct EtchResources {
    struct EtchResources *_field1;
    struct EtchHashTable<EtchString, EtchObject *, EtchComparator<EtchString>, EtchHash<EtchString>> _field2;
};

struct EtchRuntime;

struct EtchSessionData;

struct EtchShort;

struct EtchStack;

struct EtchString {
    CDUnknownFunctionPointerType *_field1;
    struct list<const EtchObjectType *, std::__1::allocator<const EtchObjectType *>> _field2;
    char *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct EtchValueFactory;

struct EventManager;

struct FBSDKLikeControlLayout {
    struct CGSize _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct FacebookApi;

struct FacebookPermissions;

struct FacebookService {
    CDUnknownFunctionPointerType *_field1;
    basic_string_7c0a1c0b _field2;
    _Bool _field3;
    int _field4;
    struct weak_ptr<spotify::facebook::FacebookService> _field5;
    struct FacebookApi *_field6;
    struct function<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> _field7;
    struct function<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> _field8;
    shared_ptr_6ae16b82 _field9;
    int _field10;
    struct TimerManager *_field11;
    basic_string_7c0a1c0b _field12;
    basic_string_7c0a1c0b _field13;
    _Bool _field14;
    shared_ptr_2175cb8d _field15;
    struct Logger *_field16;
    shared_ptr_6ae16b82 _field17;
    struct HermesHandler *_field18;
    struct MercuryHandler *_field19;
    struct function<std::__1::basic_string<char>()> _field20;
    struct function<spotify::accesspoint::AccountInfo ()> _field21;
    basic_string_7c0a1c0b _field22;
    struct signal<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::signals2::mutex> _field23;
    struct signal<void (spotify::facebook::ServiceEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceEvent)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceEvent)>, boost::signals2::mutex> _field24;
    struct signal<void (), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void ()>, boost::function<void (const boost::signals2::connection &)>, boost::signals2::mutex> _field25;
    struct shared_ptr<spotify::facebook::FacebookServiceRequestFactory> _field26;
    struct shared_ptr<spotify::facebook::MeMetadataRequest> _field27;
    struct shared_ptr<spotify::facebook::FriendsMetadataRequest> _field28;
    struct shared_ptr<spotify::facebook::FacebookPermissions> _field29;
    basic_string_7c0a1c0b _field30;
};

struct FacebookServiceRequestFactory;

struct FriendsMetadataRequest;

struct GLUEEntityCardImageLayoutState {
    double sideMargin;
    double sizeMultiplier;
};

struct GLUESideMargins {
    double leading;
    double trailing;
};

struct GaiaManagerInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct HashEntry;

struct HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection> {
    struct DefaultHashFunctions _field1;
    struct Array<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection, 0> _field2;
    int _field3;
    struct CriticalSection _field4;
};

struct HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::DummyCriticalSection> {
    struct DefaultHashFunctions _field1;
    struct Array<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::DummyCriticalSection>::HashEntry *, ComScore::DummyCriticalSection, 0> _field2;
    int _field3;
    struct DummyCriticalSection _field4;
};

struct HeapBlock<ComScore::EventInfo::ClientInfo, false> {
    struct ClientInfo *_field1;
};

struct HeapBlock<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, false> {
    struct HashEntry **_field1;
};

struct HeapBlock<ComScore::HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::DummyCriticalSection>::HashEntry *, false> {
    struct HashEntry **_field1;
};

struct HeapBlock<ComScore::String, false> {
    struct String *data;
};

struct HeapBlock<ConfigurationListenerImpl *, false> {
    struct ConfigurationListenerImpl **_field1;
};

struct HeapBlock<StreamingListenerImpl *, false> {
    struct StreamingListenerImpl **_field1;
};

struct HermesHandler {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<spotify::hermes::HermesHandler::Impl> _field2;
};

struct HermesMessage;

struct HermesQuery;

struct HermesRequest;

struct IDBclConnection {
    CDUnknownFunctionPointerType *_field1;
    struct EtchSessionData *_field2;
    id _field3;
    id _field4;
    unsigned int _field5;
    unsigned int _field6;
    struct mutex _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct IDEtchSessionCppAdaptor {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct IOSAudioDriver {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
};

struct Impl;

struct IncognitoModeHandler {
    struct Timer _field1;
    struct Prefs *_field2;
    struct ProductState *_field3;
    struct Logger *_field4;
    struct function<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> _field5;
    struct ScrobblerContainer *_field6;
    struct function<bool ()> _field7;
    struct signal<void (bool, bool), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (bool, bool)>, boost::function<void (const boost::signals2::connection &, bool, bool)>, boost::signals2::mutex> _field8;
};

struct LifetimeStorageEntry;

struct LocalTrack;

struct LogLevel;

struct LogMessageFilter {
    struct unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> _field1;
    int _field2;
    struct mutex _field3;
};

struct LogObserver {
    CDUnknownFunctionPointerType *_field1;
    struct LogMessageFilter _field2;
    id _field3;
    basic_string_7c0a1c0b _field4;
};

struct Logger;

struct LoginCredentials {
    struct shared_ptr<spotify::accesspoint::LoginCredentials::Impl> _impl;
};

struct MapMode;

struct MdnsManagerInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct MeMetadataRequest;

struct MercuryHandler;

struct MetadataHandler {
    CDUnknownFunctionPointerType *_field1;
};

struct MetadataModel {
    struct unique_ptr<spotify::metadata::MetadataModel::Impl, std::__1::default_delete<spotify::metadata::MetadataModel::Impl>> _field1;
};

struct MetadataTask {
    CDUnknownFunctionPointerType *_field1;
};

struct MftCanPlayChecker;

struct MultiStringHermesQuery {
    CDUnknownFunctionPointerType *_field1;
    struct error_code _field2;
    struct shared_ptr<spotify::hermes::HermesQuery> _field3;
    struct shared_ptr<spotify::hermes::HermesMessage> _field4;
    struct shared_ptr<spotify::hermes::HermesRequest> _field5;
    struct function<void (spotify::hermes::HermesQuery *)> _field6;
    struct TimerManager *_field7;
    _Bool _field8;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field9;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field10;
};

struct MutableState {
    struct shared_ptr<spotify::metadata::TrackInfo> _field1;
    struct LocalTrack *_field2;
    unsigned char _field3;
    unsigned int :2;
    unsigned int :3;
    unsigned int :2;
    unsigned int :2;
    unsigned int :2;
    unsigned int :3;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSNumber {
    Class _field1;
};

struct NetworkInfo {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct ObjectStorage<std::__1::basic_string<char>> {
    unsigned char _field1[24];
};

struct ObjectStorage<std::__1::vector<spotify::spos::SposDictEntry, std::__1::allocator<spotify::spos::SposDictEntry>>> {
    unsigned char _field1[24];
};

struct ObjectStorage<std::__1::vector<spotify::spos::SposNode, std::__1::allocator<spotify::spos::SposNode>>> {
    unsigned char _field1[24];
};

struct OfflineCache;

struct OfflineManager {
    CDUnknownFunctionPointerType *_field1;
};

struct OfflineManagerObserverBridge {
    CDUnknownFunctionPointerType *_vptr$Observer;
    SPTOfflineManager *_objc;
};

struct OwnedArray<ConfigurationListenerImpl, ComScore::DummyCriticalSection> {
    struct ArrayAllocationBase<ConfigurationListenerImpl *, ComScore::DummyCriticalSection> _field1;
    int _field2;
};

struct OwnedArray<StreamingListenerImpl, ComScore::CriticalSection> {
    struct ArrayAllocationBase<StreamingListenerImpl *, ComScore::CriticalSection> _field1;
    int _field2;
};

struct PendingMessageStorage {
    struct Timer _field1;
    struct Timer _field2;
    struct Logger *_field3;
    basic_string_7c0a1c0b _field4;
    struct mutex _field5;
    struct vector<std::__1::unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>>, std::__1::allocator<std::__1::unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>>>> _field6;
    basic_string_7c0a1c0b _field7;
    struct map<std::__1::basic_string<char>, long long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long>>> _field8;
    _Bool _field9;
    _Bool _field10;
};

struct PlayOrigin {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    basic_string_7c0a1c0b _field6;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field7;
};

struct PlayTokenHandler {
    CDUnknownFunctionPointerType *_field1;
};

struct PlaybackSession;

struct PrefStore;

struct Prefs {
    struct unique_ptr<spotify::prefs::PrefStore, std::__1::default_delete<spotify::prefs::PrefStore>> _field1;
    struct signal<void (spotify::prefs::PrefEntry *), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::prefs::PrefEntry *)>, boost::function<void (const boost::signals2::connection &, spotify::prefs::PrefEntry *)>, boost::signals2::mutex> _field2;
    _Bool _field3;
};

struct PreparePlayOptions {
    struct optional<spotify::player::PlaybackId> _field1;
    struct SkipToTrack _field2;
    struct optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> _field3;
    _Bool _field4;
    _Bool _field5;
    struct ContextPlayerOptionOverrides _field6;
    struct Suppressions _field7;
    int _field8;
    int _field9;
    basic_string_7c0a1c0b _field10;
    struct optional<spotify::player::PlayerLicense> _field11;
    struct flat_map<std::__1::basic_string<char>, spotify::json::encoded_value, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<std::__1::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>> _field12;
};

struct ProductState;

struct PropertyManager;

struct ProxyContextPlayer;

struct ProxySettings {
    int _field1;
    int _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
};

struct RHMIDataTable;

struct RHMIMetaData;

struct RHMIResourceType;

struct RHMIVersion;

struct ReducedRequirementsStreamingAnalytics {
    struct shared_ptr<ComScore::StreamingAnalytics> _field1;
    int _field2;
    struct StringPairArray _field3;
    _Bool _field4;
    int _field5;
};

struct RemoteBMWRemotingServer {
    CDUnknownFunctionPointerType *_field1;
    shared_ptr_628bbfde _field2;
    struct EtchDeliveryService *_field3;
    struct EtchValueFactory *_field4;
    struct EtchStack *_field5;
    CDUnknownFunctionPointerType *_field6;
    struct EtchInt32 _field7;
    struct EtchInt32 _field8;
    shared_ptr_628bbfde _field9;
    CDUnknownFunctionPointerType *_field10;
    CDUnknownFunctionPointerType *_field11;
    struct EtchInt32 _field12;
    struct EtchInt32 _field13;
};

struct Request {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field3;
    basic_string_7c0a1c0b _field4;
};

struct RequestAccountingSink {
    struct weak_ptr<spotify::netstat::RequestAccounting::Impl> _weak_impl;
};

struct Response {
    int _field1;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
    basic_string_7c0a1c0b _field3;
};

struct Restorable;

struct SDSDialogCommand;

struct SPTCeramicItemOrder {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct SPTHubIndexPath {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct SPTID3ParserHeaderStruct {
    char headerType[3];
    unsigned char version;
    unsigned char flags;
    unsigned char unknown;
    int synchsafeLength;
};

struct SPTIconCharacterSet {
    union {
        struct {
            unsigned short _field1;
            unsigned short _field2;
            unsigned short _field3;
            unsigned short _field4;
            unsigned short _field5;
        } _field1;
        unsigned short _field2[5];
    } _field1;
};

struct SPTPersistentCacheRecordHeader {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
};

struct Scheduler {
    CDUnknownFunctionPointerType *_field1;
};

struct ScrobblerContainer;

struct Search {
    CDUnknownFunctionPointerType *_field1;
};

struct SerializableCredentials {
    struct shared_ptr<spotify::accesspoint::SerializableCredentials::Impl> _impl;
};

struct ServerTime;

struct Session {
    CDUnknownFunctionPointerType *_field1;
};

struct SkipToTrack {
    struct optional<std::__1::basic_string<char>> _field1;
    struct optional<unsigned long> _field2;
    struct optional<std::__1::basic_string<char>> _field3;
    struct optional<std::__1::basic_string<char>> _field4;
    struct optional<unsigned long> _field5;
};

struct SocialManager {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<spotify::social::SocialManager> _field2;
};

struct SocialManagerObserver {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct SocialUserData;

struct SpinLock {
    struct Atomic<int> _field1;
};

struct SposDict {
    union {
        unsigned char _field1;
        struct {
            unsigned char _field1;
            long long _field2;
        } _field2;
        struct {
            unsigned char _field1;
            double _field2;
        } _field3;
        struct {
            unsigned char _field1;
            struct ObjectStorage<std::__1::basic_string<char>> _field2;
        } _field4;
        struct {
            int _field1;
            struct ObjectStorage<std::__1::vector<spotify::spos::SposNode, std::__1::allocator<spotify::spos::SposNode>>> _field2;
        } _field5;
        struct {
            int _field1;
            struct ObjectStorage<std::__1::vector<spotify::spos::SposDictEntry, std::__1::allocator<spotify::spos::SposDictEntry>>> _field2;
        } _field6;
        struct {
            unsigned char _field1;
            char _field2[15];
        } _field7;
    } _field1;
};

struct SpotifyLink {
    int _field1;
    basic_string_7c0a1c0b _field2;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
    unsigned int _field4;
    unsigned int _field5;
    int _field6;
    int _field7;
    union {
        struct gid<16, spotify::uri::detail::AlbumIdTag> _field1;
        struct gid<16, spotify::uri::detail::ArtistIdTag> _field2;
        struct gid<16, spotify::uri::detail::TrackIdTag> _field3;
        struct gid<16, spotify::uri::detail::PlaylistIdTag> _field4;
        int _field5;
        struct gid<16, spotify::uri::detail::AdIdTag> _field6;
        unsigned int _field7;
        unsigned long long _field8;
        basic_string_7c0a1c0b *_field9;
        int _field10;
        struct gid<20, spotify::uri::detail::ImageIdTag> _field11;
        vector_553ebee1 *_field12;
        struct gid<16, spotify::uri::detail::ShowIdTag> _field13;
        struct gid<16, spotify::uri::detail::EpisodeIdTag> _field14;
        struct gid<16, spotify::uri::detail::DailyMixIdTag> _field15;
        struct gid<16, spotify::uri::detail::LicensorIdTag> _field16;
        int _field17;
        struct {
            struct vector<spotify::tl::gid<16, spotify::uri::detail::TrackIdTag>, std::__1::allocator<spotify::tl::gid<16, spotify::uri::detail::TrackIdTag>>> *_field1;
            int _field2;
        } _field18;
        struct {
            struct gid<20, spotify::uri::detail::FileIdTag> _field1;
            int _field2;
        } _field19;
        struct {
            int _field1;
            unsigned int _field2;
        } _field20;
        int _field21;
        int _field22;
    } _field8;
};

struct StorageSystem {
    CDUnknownFunctionPointerType *_field1;
};

struct StreamingAnalytics {
    struct shared_ptr<ComScore::StreamingCore> _field1;
    struct shared_ptr<ComScore::TaskExecutor> _field2;
    struct StringPairArray _field3;
    struct StreamingConfiguration _field4;
    struct CriticalSection _field5;
    struct SpinLock _field6;
};

struct StreamingConfiguration {
    struct streamingConfigurationParams _params;
};

struct StreamingCore;

struct StreamingListenerImpl;

struct String {
    struct CharPointer_UTF8 _field1;
};

struct StringArray {
    struct Array<ComScore::String, ComScore::DummyCriticalSection, 0> strings;
};

struct StringPairArray {
    struct StringArray _field1;
    struct StringArray _field2;
    _Bool _field3;
};

struct Suppressions {
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field1;
};

struct SyncManagerApi {
    CDUnknownFunctionPointerType *_field1;
};

struct TaskExecutor;

struct Timer {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<spotify::async::Timer::Impl> _field2;
};

struct TimerManager {
    CDUnknownFunctionPointerType *_field1;
};

struct TrackInfo {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<spotify::metadata::TrackInfo> _field2;
    struct MetadataModel *_field3;
    struct MutableState _field4;
    unsigned char _field5;
    int _field6;
    unsigned char _field7;
    _Bool _field8;
    basic_string_7c0a1c0b _field9;
    unsigned int _field10;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIImage {
    Class _field1;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UIViewController {
    Class _field1;
};

struct VersionInfo;

struct VoicePriorityType;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*> *_field1;
};

struct __list_node_base<SPTTimeRange, void *> {
    struct __list_node_base<SPTTimeRange, void *> *__prev_;
    struct __list_node_base<SPTTimeRange, void *> *__next_;
};

struct __list_node_base<const EtchObjectType *, void *> {
    struct __list_node_base<const EtchObjectType *, void *> *_field1;
    struct __list_node_base<const EtchObjectType *, void *> *_field2;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct a4;

struct a8;

struct aligned_storage<bool> {
    union dummy_u {
        char _field1[1];
        char _field2;
    } _field1;
};

struct aligned_storage<spotify::player::PlaybackId> {
    union dummy_u {
        char _field1[16];
        char _field2;
    } _field1;
};

struct aligned_storage<spotify::player::PlayerLicense> {
    union dummy_u {
        char _field1[24];
        struct a8 _field2;
    } _field1;
};

struct aligned_storage<std::__1::basic_string<char>> {
    union dummy_u {
        char _field1[24];
        struct a8 _field2;
    } _field1;
};

struct aligned_storage<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> {
    union dummy_u {
        char _field1[8];
        struct a8 _field2;
    } _field1;
};

struct aligned_storage<unsigned char> {
    union dummy_u {
        char _field1[1];
        char _field2;
    } _field1;
};

struct aligned_storage<unsigned int> {
    union dummy_u {
        char _field1[4];
        struct a4 _field2;
    } _field1;
};

struct aligned_storage<unsigned long> {
    union dummy_u {
        char _field1[8];
        struct a8 _field2;
    } _field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct clientConfigurationParams {
    _Bool _field1;
    struct String _field2;
    struct String _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
    int _field7;
    struct StringArray _field8;
    _Bool _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    _Bool _field18;
    struct String _field19;
    struct String _field20;
    struct String _field21;
    struct String _field22;
    struct StringPairArray _field23;
    struct StringPairArray _field24;
    struct String _field25;
};

struct cmp_ctx_s {
    unsigned char _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
};

struct connection_body_base;

struct deque<short, std::__1::allocator<short>> {
    struct __split_buffer<short *, std::__1::allocator<short *>> {
        short **__first_;
        short **__begin_;
        short **__end_;
        struct __compressed_pair<short **, std::__1::allocator<short *>> {
            short **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<short>> {
        unsigned long long __value_;
    } __size_;
};

struct dl_info {
    char *_field1;
    void *_field2;
    char *_field3;
    void *_field4;
};

struct error_category;

struct error_code {
    int m_val;
    struct error_category *m_cat;
};

struct flat_map<std::__1::basic_string<char>, spotify::json::encoded_value, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<std::__1::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>> {
    struct flat_tree<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>, boost::container::container_detail::select1st<std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>> _field1;
};

struct flat_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<std::__1::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct flat_tree<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, boost::container::container_detail::select1st<std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field1;
};

struct flat_tree<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>, boost::container::container_detail::select1st<std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>> {
    struct Data {
        struct vector<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>, boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>> _field1;
    } _field1;
};

struct flat_tree<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, boost::container::container_detail::select1st<std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct Data {
        struct vector<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field1;
    } _field1;
};

struct function<bool ()> {
    struct type _field1;
    struct __base<bool ()> *_field2;
};

struct function<spotify::accesspoint::AccountInfo ()> {
    struct type _field1;
    struct __base<spotify::accesspoint::AccountInfo ()> *_field2;
};

struct function<std::__1::basic_string<char>()> {
    struct type _field1;
    struct __base<std::__1::basic_string<char>()> *_field2;
};

struct function<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> {
    struct type _field1;
    struct __base<std::__1::chrono::time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>()> *_field2;
};

struct function<std::__1::shared_ptr<void>(const spotify::cosmos::Request &, const std::__1::function<void (spotify::cosmos::Response)>&)> {
    struct type __buf_;
    struct __base<std::__1::shared_ptr<void>(const spotify::cosmos::Request &, const std::__1::function<void (spotify::cosmos::Response)>&)> *__f_;
};

struct function<void ()> {
    struct type __buf_;
    struct __base<void ()> *__f_;
};

struct function<void (const std::__1::basic_string<char>&)> {
    struct type _field1;
    struct __base<void (const std::__1::basic_string<char>&)> *_field2;
};

struct function<void (const std::__1::function<void ()>&)> {
    struct type __buf_;
    struct __base<void (const std::__1::function<void ()>&)> *__f_;
};

struct function<void (spotify::hermes::HermesQuery *)> {
    struct type _field1;
    struct __base<void (spotify::hermes::HermesQuery *)> *_field2;
};

struct gid<16, spotify::uri::detail::AdIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::AlbumIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::ArtistIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::DailyMixIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::EpisodeIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::LicensorIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::PlaylistIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::ShowIdTag> {
    unsigned char _field1[16];
};

struct gid<16, spotify::uri::detail::TrackIdTag> {
    unsigned char _field1[16];
};

struct gid<20, spotify::uri::detail::FileIdTag> {
    unsigned char _field1[20];
};

struct gid<20, spotify::uri::detail::ImageIdTag> {
    unsigned char _field1[20];
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct in_addr {
    unsigned int _field1;
};

struct list<SPTTimeRange, std::__1::allocator<SPTTimeRange>> {
    struct __list_node_base<SPTTimeRange, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<SPTTimeRange, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<const EtchObjectType *, std::__1::allocator<const EtchObjectType *>> {
    struct __list_node_base<const EtchObjectType *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const EtchObjectType *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<std::__1::basic_string<char>, long long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mutex {
    struct _opaque_pthread_mutex_t _field1;
};

struct optional<bool> {
    _Bool _field1;
    struct aligned_storage<bool> _field2;
};

struct optional<spotify::player::PlaybackId> {
    _Bool _field1;
    struct aligned_storage<spotify::player::PlaybackId> _field2;
};

struct optional<spotify::player::PlayerLicense> {
    _Bool _field1;
    struct aligned_storage<spotify::player::PlayerLicense> _field2;
};

struct optional<std::__1::basic_string<char>> {
    _Bool _field1;
    struct aligned_storage<std::__1::basic_string<char>> _field2;
};

struct optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> {
    _Bool _field1;
    struct aligned_storage<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> _field2;
};

struct optional<unsigned char> {
    _Bool _field1;
    struct aligned_storage<unsigned char> _field2;
};

struct optional<unsigned int> {
    _Bool _field1;
    struct aligned_storage<unsigned int> _field2;
};

struct optional<unsigned long> {
    _Bool _field1;
    struct aligned_storage<unsigned long> _field2;
};

struct pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection>;

struct pair<std::__1::basic_string<char>, spotify::json::encoded_value>;

struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>>;

struct scoped_connection {
    struct weak_ptr<boost::signals2::detail::connection_body_base> _weak_connection_body;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_count {
    struct sp_counted_base *_field1;
};

struct shared_ptr<ComScore::Asset> {
    struct Asset *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::ClientConfiguration> {
    struct ClientConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::Configuration> {
    struct Configuration *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::EventManager> {
    struct EventManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>> {
    HashMap_4f8ab526 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ComScore::OfflineCache> {
    struct OfflineCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::PlaybackSession> {
    struct PlaybackSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::PropertyManager> {
    struct PropertyManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ComScore::StreamingAnalytics> {
    struct StreamingAnalytics *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ComScore::StreamingCore> {
    struct StreamingCore *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ComScore::TaskExecutor> {
    struct TaskExecutor *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>>> {
    struct EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchBool> {
    struct EtchBool *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchByte> {
    struct EtchByte *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchException> {
    struct EtchException *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchFloat> {
    struct EtchFloat *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>> {
    struct EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchInt32> {
    struct EtchInt32 *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchNativeArray<std::__1::shared_ptr<EtchObject>>> {
    struct EtchNativeArray<std::__1::shared_ptr<EtchObject>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchObject> {
    struct EtchObject *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchRuntime> {
    struct EtchRuntime *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchShort> {
    struct EtchShort *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<EtchString> {
    struct EtchString *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<boost::signals2::detail::signal_impl<void (), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void ()>, boost::function<void (const boost::signals2::connection &)>, boost::signals2::mutex>> {
    struct signal_impl<void (), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void ()>, boost::function<void (const boost::signals2::connection &)>, boost::signals2::mutex> *_field1;
    struct shared_count _field2;
};

struct shared_ptr<boost::signals2::detail::signal_impl<void (bool, bool), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (bool, bool)>, boost::function<void (const boost::signals2::connection &, bool, bool)>, boost::signals2::mutex>> {
    struct signal_impl<void (bool, bool), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (bool, bool)>, boost::function<void (const boost::signals2::connection &, bool, bool)>, boost::signals2::mutex> *_field1;
    struct shared_count _field2;
};

struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::signals2::mutex>> {
    struct signal_impl<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::signals2::mutex> *_field1;
    struct shared_count _field2;
};

struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::facebook::ServiceEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceEvent)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceEvent)>, boost::signals2::mutex>> {
    struct signal_impl<void (spotify::facebook::ServiceEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceEvent)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceEvent)>, boost::signals2::mutex> *_field1;
    struct shared_count _field2;
};

struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::playback::VolumeChangeReason), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::playback::VolumeChangeReason)>, boost::function<void (const boost::signals2::connection &, spotify::playback::VolumeChangeReason)>, boost::signals2::mutex>> {
    struct signal_impl<void (spotify::playback::VolumeChangeReason), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::playback::VolumeChangeReason)>, boost::function<void (const boost::signals2::connection &, spotify::playback::VolumeChangeReason)>, boost::signals2::mutex> *_field1;
    struct shared_count _field2;
};

struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::prefs::PrefEntry *), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::prefs::PrefEntry *)>, boost::function<void (const boost::signals2::connection &, spotify::prefs::PrefEntry *)>, boost::signals2::mutex>> {
    struct signal_impl<void (spotify::prefs::PrefEntry *), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::prefs::PrefEntry *)>, boost::function<void (const boost::signals2::connection &, spotify::prefs::PrefEntry *)>, boost::signals2::mutex> *_field1;
    struct shared_count _field2;
};

struct shared_ptr<const spotify::connect::AbstractConnectDevice> {
    struct AbstractConnectDevice *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const spotify::social::SocialUserData> {
    struct SocialUserData *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<coreobjc::LogObserver> {
    struct LogObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIDataTable> {
    struct RHMIDataTable *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::SDSDialogCommand> {
    struct SDSDialogCommand *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::accesspoint::LoginCredentials::Impl> {
    struct Impl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::accesspoint::SerializableCredentials::Impl> {
    struct Impl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::analytics::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::async::Timer::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::client::ApplicationStateTracker::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::connect::AbstractConnectDevice> {
    struct AbstractConnectDevice *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::facebook::FacebookPermissions> {
    struct FacebookPermissions *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::facebook::FacebookServiceRequestFactory> {
    struct FacebookServiceRequestFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::facebook::FriendsMetadataRequest> {
    struct FriendsMetadataRequest *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::facebook::MeMetadataRequest> {
    struct MeMetadataRequest *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::hermes::HermesHandler::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::hermes::HermesMessage> {
    struct HermesMessage *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::hermes::HermesQuery> {
    struct HermesQuery *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::hermes::HermesRequest> {
    struct HermesRequest *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::http::AppleSessionManager> {
    struct AppleSessionManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::http::ConnectionFactory> {
    struct ConnectionFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::metadata::AlbumInfo> {
    struct AlbumInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::metadata::ArtistInfo> {
    struct ArtistInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::metadata::MetadataTask> {
    struct MetadataTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::metadata::TrackInfo> {
    struct TrackInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::player::ProxyContextPlayer> {
    struct ProxyContextPlayer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<spotify::player::Restorable> {
    struct Restorable *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::player::mft::MftCanPlayChecker> {
    struct MftCanPlayChecker *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::product_state::ProductState> {
    struct ProductState *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<spotify::time::ServerTime> {
    struct ServerTime *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<void *> {
    void **__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct signal<void (), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void ()>, boost::function<void (const boost::signals2::connection &)>, boost::signals2::mutex> {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<boost::signals2::detail::signal_impl<void (), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void ()>, boost::function<void (const boost::signals2::connection &)>, boost::signals2::mutex>> _field2;
};

struct signal<void (bool, bool), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (bool, bool)>, boost::function<void (const boost::signals2::connection &, bool, bool)>, boost::signals2::mutex> {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<boost::signals2::detail::signal_impl<void (bool, bool), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (bool, bool)>, boost::function<void (const boost::signals2::connection &, bool, bool)>, boost::signals2::mutex>> _field2;
};

struct signal<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::signals2::mutex> {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::signals2::mutex>> _field2;
};

struct signal<void (spotify::facebook::ServiceEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceEvent)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceEvent)>, boost::signals2::mutex> {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::facebook::ServiceEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceEvent)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceEvent)>, boost::signals2::mutex>> _field2;
};

struct signal<void (spotify::playback::VolumeChangeReason), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::playback::VolumeChangeReason)>, boost::function<void (const boost::signals2::connection &, spotify::playback::VolumeChangeReason)>, boost::signals2::mutex> {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::playback::VolumeChangeReason), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::playback::VolumeChangeReason)>, boost::function<void (const boost::signals2::connection &, spotify::playback::VolumeChangeReason)>, boost::signals2::mutex>> _field2;
};

struct signal<void (spotify::prefs::PrefEntry *), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::prefs::PrefEntry *)>, boost::function<void (const boost::signals2::connection &, spotify::prefs::PrefEntry *)>, boost::signals2::mutex> {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::prefs::PrefEntry *), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::prefs::PrefEntry *)>, boost::function<void (const boost::signals2::connection &, spotify::prefs::PrefEntry *)>, boost::signals2::mutex>> _field2;
};

struct signal_impl<void (), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void ()>, boost::function<void (const boost::signals2::connection &)>, boost::signals2::mutex>;

struct signal_impl<void (bool, bool), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (bool, bool)>, boost::function<void (const boost::signals2::connection &, bool, bool)>, boost::signals2::mutex>;

struct signal_impl<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceErrorType, const std::__1::basic_string<char>&)>, boost::signals2::mutex>;

struct signal_impl<void (spotify::facebook::ServiceEvent), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::facebook::ServiceEvent)>, boost::function<void (const boost::signals2::connection &, spotify::facebook::ServiceEvent)>, boost::signals2::mutex>;

struct signal_impl<void (spotify::playback::VolumeChangeReason), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::playback::VolumeChangeReason)>, boost::function<void (const boost::signals2::connection &, spotify::playback::VolumeChangeReason)>, boost::signals2::mutex>;

struct signal_impl<void (spotify::prefs::PrefEntry *), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::prefs::PrefEntry *)>, boost::function<void (const boost::signals2::connection &, spotify::prefs::PrefEntry *)>, boost::signals2::mutex>;

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sp_counted_base;

struct span<const spotify::metadata::AlbumGroup> {
    struct AlbumGroup *_field1;
    unsigned long long _field2;
};

struct span<const spotify::uri::SpotifyLink> {
    struct SpotifyLink *_field1;
    unsigned long long _field2;
};

struct stat {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    struct timespec _field8;
    struct timespec _field9;
    struct timespec _field10;
    struct timespec _field11;
    long long _field12;
    long long _field13;
    int _field14;
    unsigned int _field15;
    unsigned int _field16;
    int _field17;
    long long _field18[2];
};

struct streamingConfigurationParams {
    struct StringArray restrictedPublishersList;
    _Bool systemClockJumpDetection;
};

struct timespec {
    long long _field1;
    long long _field2;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<spotify::accesspoint_resolve::ApResolver, std::__1::default_delete<spotify::accesspoint_resolve::ApResolver>> {
    struct __compressed_pair<spotify::accesspoint_resolve::ApResolver *, std::__1::default_delete<spotify::accesspoint_resolve::ApResolver>> {
        struct ApResolver *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>>;

struct unique_ptr<spotify::async::TimerManager, std::__1::default_delete<spotify::async::TimerManager>> {
    struct __compressed_pair<spotify::async::TimerManager *, std::__1::default_delete<spotify::async::TimerManager>> {
        struct TimerManager *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::client::ConnectivityManager::Impl, std::__1::default_delete<spotify::client::ConnectivityManager::Impl>> {
    struct __compressed_pair<spotify::client::ConnectivityManager::Impl *, std::__1::default_delete<spotify::client::ConnectivityManager::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::client_features::ClientFeatureStack, std::__1::default_delete<spotify::client_features::ClientFeatureStack>> {
    struct __compressed_pair<spotify::client_features::ClientFeatureStack *, std::__1::default_delete<spotify::client_features::ClientFeatureStack>> {
        struct ClientFeatureStack *__value_;
    } __ptr_;
};

struct unique_ptr<spotify::client_features::ClientFeatureStack::Impl, std::__1::default_delete<spotify::client_features::ClientFeatureStack::Impl>> {
    struct __compressed_pair<spotify::client_features::ClientFeatureStack::Impl *, std::__1::default_delete<spotify::client_features::ClientFeatureStack::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::metadata::MetadataModel::Impl, std::__1::default_delete<spotify::metadata::MetadataModel::Impl>> {
    struct __compressed_pair<spotify::metadata::MetadataModel::Impl *, std::__1::default_delete<spotify::metadata::MetadataModel::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<spotify::prefs::PrefStore, std::__1::default_delete<spotify::prefs::PrefStore>> {
    struct __compressed_pair<spotify::prefs::PrefStore *, std::__1::default_delete<spotify::prefs::PrefStore>> {
        struct PrefStore *_field1;
    } _field1;
};

struct unique_ptr<spotify::prefs::Prefs, std::__1::default_delete<spotify::prefs::Prefs>> {
    struct __compressed_pair<spotify::prefs::Prefs *, std::__1::default_delete<spotify::prefs::Prefs>> {
        struct Prefs *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<EtchString, EtchObject *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, unsigned int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned int>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct vector<(anonymous namespace)::LifetimeStorageEntry, std::__1::allocator<(anonymous namespace)::LifetimeStorageEntry>> {
    struct LifetimeStorageEntry *__begin_;
    struct LifetimeStorageEntry *__end_;
    struct __compressed_pair<(anonymous namespace)::LifetimeStorageEntry *, std::__1::allocator<(anonymous namespace)::LifetimeStorageEntry>> {
        struct LifetimeStorageEntry *__value_;
    } __end_cap_;
};

struct vector<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>, boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>> {
    struct vector_alloc_holder<boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>, boost::move_detail::integral_constant<unsigned int, 1>> _field1;
};

struct vector<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>, boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct vector_alloc_holder<boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>, boost::move_detail::integral_constant<unsigned int, 1>> _field1;
};

struct vector<spotify::metadata::AlbumGroup, std::__1::allocator<spotify::metadata::AlbumGroup>> {
    struct AlbumGroup *_field1;
    struct AlbumGroup *_field2;
    struct __compressed_pair<spotify::metadata::AlbumGroup *, std::__1::allocator<spotify::metadata::AlbumGroup>> {
        struct AlbumGroup *_field1;
    } _field3;
};

struct vector<spotify::metadata::AlbumMetadata::Disc, std::__1::allocator<spotify::metadata::AlbumMetadata::Disc>> {
    struct Disc *_field1;
    struct Disc *_field2;
    struct __compressed_pair<spotify::metadata::AlbumMetadata::Disc *, std::__1::allocator<spotify::metadata::AlbumMetadata::Disc>> {
        struct Disc *_field1;
    } _field3;
};

struct vector<spotify::metadata::BiographyOrReview, std::__1::allocator<spotify::metadata::BiographyOrReview>> {
    struct BiographyOrReview *_field1;
    struct BiographyOrReview *_field2;
    struct __compressed_pair<spotify::metadata::BiographyOrReview *, std::__1::allocator<spotify::metadata::BiographyOrReview>> {
        struct BiographyOrReview *_field1;
    } _field3;
};

struct vector<spotify::tl::gid<16, spotify::uri::detail::TrackIdTag>, std::__1::allocator<spotify::tl::gid<16, spotify::uri::detail::TrackIdTag>>>;

struct vector<spotify::uri::SpotifyLink, std::__1::allocator<spotify::uri::SpotifyLink>> {
    struct SpotifyLink *_field1;
    struct SpotifyLink *_field2;
    struct __compressed_pair<spotify::uri::SpotifyLink *, std::__1::allocator<spotify::uri::SpotifyLink>> {
        struct SpotifyLink *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_7c0a1c0b *_field1;
    basic_string_7c0a1c0b *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_7c0a1c0b *_field1;
    } _field3;
};

struct vector<std::__1::pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection>, std::__1::allocator<std::__1::pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection>>> {
    struct pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection> *_field1;
    struct pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection> *_field2;
    struct __compressed_pair<std::__1::pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection>*, std::__1::allocator<std::__1::pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection>>> {
        struct pair<spotify::playback::AudioVolumeControl *, boost::signals2::connection> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>>, std::__1::allocator<std::__1::unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>>>> {
    struct unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>> *_field1;
    struct unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>>*, std::__1::allocator<std::__1::unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>>>> {
        struct unique_ptr<spotify::analytics::PendingMessageStorage::PendingMessage, std::__1::default_delete<spotify::analytics::PendingMessageStorage::PendingMessage>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

struct vector_alloc_holder<boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, spotify::json::encoded_value>>, boost::move_detail::integral_constant<unsigned int, 1>> {
    struct pair<std::__1::basic_string<char>, spotify::json::encoded_value> *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct vector_alloc_holder<boost::container::new_allocator<boost::container::container_detail::pair<std::__1::basic_string<char>, std::__1::basic_string<char>>>, boost::move_detail::integral_constant<unsigned int, 1>> {
    struct pair<std::__1::basic_string<char>, std::__1::basic_string<char>> *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct weak_count {
    struct sp_counted_base *pi_;
};

struct weak_ptr<boost::signals2::detail::connection_body_base> {
    struct connection_body_base *px;
    struct weak_count pn;
};

struct weak_ptr<spotify::facebook::FacebookService> {
    struct FacebookService *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<spotify::http::AppleSessionManager> {
    struct AppleSessionManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::metadata::AlbumInfo> {
    struct AlbumInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<spotify::metadata::ArtistInfo> {
    struct ArtistInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<spotify::metadata::TrackInfo> {
    struct TrackInfo *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<spotify::netstat::RequestAccounting::Impl> {
    struct Impl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::player::ProxyContextPlayer> {
    struct ProxyContextPlayer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<spotify::social::SocialManager> {
    struct SocialManager *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<spotify::time::ServerTime> {
    struct ServerTime *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#if 0
// Names with conflicting types:
typedef struct {
    Class _field1;
    id _field2;
    id _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    id _field8;
} SPTCollectionPlatformDataLoaderResponse_35b6aaff;

typedef struct {
    Class _field1;
} SPTPlaylistPlatformDataLoaderResponse_5db64d04;

typedef struct {
    Class _field1;
} SPTCollectionPlatformDataLoaderResponse_f5c2288a;

typedef struct {
    int _field1;
    struct error_code _field2;
    union Data _field3;
} EventInfo_316ff584;

typedef struct {
    struct CriticalSection _field1;
    struct StringPairArray _field2;
    struct Array<ComScore::EventInfo::ClientInfo, ComScore::DummyCriticalSection, 0> _field3;
    struct HashMap<ComScore::String, ComScore::StringPairArray, ComScore::DefaultHashFunctions, ComScore::DummyCriticalSection> _field4;
    struct String _field5;
    struct StringPairArray _field6;
} EventInfo_922a205e;

typedef struct {
    struct CriticalSection _field1;
    struct clientConfigurationParams _field2;
    struct String _field3;
} Builder_f57fd42e;

typedef struct {
    struct CriticalSection _field1;
    struct clientConfigurationParams _field2;
} Builder_d6bb03b6;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned int framesProcessed;
    float meanAccumulator;
    float prevFilteredAmplitude;
    float peakAmplitude;
    float meanLevel;
    float peakLevel;
} CDStruct_a2d37825;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    unsigned int doesImpWillMoveItemToSection:1;
    unsigned int doesImpScrollIntoSection:1;
    unsigned int doesImpScrollWithOffSet:1;
    unsigned int doesImpVisibleCells:1;
    unsigned int doesImpSectionBounds:1;
    unsigned int doesImpReloadCell:1;
} CDStruct_811f134b;

typedef struct {
    double broadcastRequestTimeout;
    double applicationDeleteTimeout;
    double applicationStartTimeout;
    unsigned long long maxConnectedAppsCount;
    unsigned long long defaultStubButtonWeight;
} CDStruct_35e1d499;

typedef struct {
    double min;
    double max;
    double mean;
    double standardDeviation;
} CDStruct_3412e649;

typedef struct {
    double start;
    double end;
} CDStruct_88b945db;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct {
    long long x;
    long long y;
} CDStruct_f261e59c;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    basic_string_7c0a1c0b *_field1;
} CDStruct_ecbe5f6e;

typedef struct {
    double adOverlayCardContainerMaximumWidth;
    double adOverlayCardContainerAspectRatioMetric;
    double adOverlayCardContainerRadius;
    struct CGColor *adOverlayBackgroundColor;
} CDStruct_4414572c;

typedef struct {
    CDStruct_3412e649 x;
    CDStruct_3412e649 y;
    CDStruct_3412e649 z;
    CDStruct_3412e649 magnitude;
} CDStruct_93d588b8;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    CDStruct_88b945db _field2;
} CDStruct_2394fa6e;

// Template types
typedef struct HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection> {
    struct DefaultHashFunctions _field1;
    struct Array<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>::HashEntry *, ComScore::DummyCriticalSection, 0> _field2;
    int _field3;
    struct CriticalSection _field4;
} HashMap_4f8ab526;

typedef struct OwnedArray<StreamingListenerImpl, ComScore::CriticalSection> {
    struct ArrayAllocationBase<StreamingListenerImpl *, ComScore::CriticalSection> _field1;
    int _field2;
} OwnedArray_4ea96a44;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_7c0a1c0b;

typedef struct function<std::__1::shared_ptr<void>(const spotify::cosmos::Request &, const std::__1::function<void (spotify::cosmos::Response)>&)> {
    struct type __buf_;
    struct __base<std::__1::shared_ptr<void>(const spotify::cosmos::Request &, const std::__1::function<void (spotify::cosmos::Response)>&)> *__f_;
} function_7c2f2a75;

typedef struct function<void ()> {
    struct type __buf_;
    struct __base<void ()> *__f_;
} function_f9feaa7d;

typedef struct function<void (const std::__1::function<void ()>&)> {
    struct type __buf_;
    struct __base<void (const std::__1::function<void ()>&)> *__f_;
} function_b41bc498;

typedef struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_0edfe763;

typedef struct shared_ptr<ComScore::Asset> {
    struct Asset *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f916388d;

typedef struct shared_ptr<ComScore::ClientConfiguration> {
    struct ClientConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_dd675cf3;

typedef struct shared_ptr<ComScore::Configuration> {
    struct Configuration *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c176f907;

typedef struct shared_ptr<ComScore::EventManager> {
    struct EventManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_832a0d82;

typedef struct shared_ptr<ComScore::HashMap<ComScore::String, ComScore::String, ComScore::DefaultHashFunctions, ComScore::CriticalSection>> {
    HashMap_4f8ab526 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_40517a32;

typedef struct shared_ptr<ComScore::OfflineCache> {
    struct OfflineCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_61609fb8;

typedef struct shared_ptr<ComScore::PlaybackSession> {
    struct PlaybackSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1d717101;

typedef struct shared_ptr<ComScore::PropertyManager> {
    struct PropertyManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4af07e7b;

typedef struct shared_ptr<EtchAsyncResult<EtchBool>> {
    struct EtchAsyncResult<EtchBool> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4760166f;

typedef struct shared_ptr<EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>>> {
    struct EtchAsyncResult<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b278485e;

typedef struct shared_ptr<EtchAsyncResult<EtchInt32>> {
    struct EtchAsyncResult<EtchInt32> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_64f13db7;

typedef struct shared_ptr<EtchAsyncResult<EtchNativeArray<signed char>>> {
    struct EtchAsyncResult<EtchNativeArray<signed char>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_9e448cc3;

typedef struct shared_ptr<EtchAsyncResult<EtchObject>> {
    struct EtchAsyncResult<EtchObject> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_8422e678;

typedef struct shared_ptr<EtchAsyncResult<EtchString>> {
    struct EtchAsyncResult<EtchString> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_86a9717a;

typedef struct shared_ptr<EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo>> {
    struct EtchAsyncResult<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_ad0c0903;

typedef struct shared_ptr<EtchAsyncResultNone> {
    struct EtchAsyncResultNone *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_db9b4e3e;

typedef struct shared_ptr<EtchBool> {
    struct EtchBool *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6049e213;

typedef struct shared_ptr<EtchByte> {
    struct EtchByte *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d1a96395;

typedef struct shared_ptr<EtchException> {
    struct EtchException *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6e242317;

typedef struct shared_ptr<EtchFloat> {
    struct EtchFloat *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d725f4e5;

typedef struct shared_ptr<EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>>> {
    struct EtchHashTable<std::__1::shared_ptr<EtchObject>, std::__1::shared_ptr<EtchObject>, EtchComparator<std::__1::shared_ptr<EtchObject>>, EtchHash<std::__1::shared_ptr<EtchObject>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_987f58d3;

typedef struct shared_ptr<EtchInt32> {
    struct EtchInt32 *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6d134981;

typedef struct shared_ptr<EtchNativeArray<signed char>> {
    struct EtchNativeArray<signed char> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_9280a9be;

typedef struct shared_ptr<EtchNativeArray<std::__1::shared_ptr<EtchObject>>> {
    struct EtchNativeArray<std::__1::shared_ptr<EtchObject>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4c384e63;

typedef struct shared_ptr<EtchObject> {
    struct EtchObject *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_cdcbacd5;

typedef struct shared_ptr<EtchRuntime> {
    struct EtchRuntime *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_628bbfde;

typedef struct shared_ptr<EtchShort> {
    struct EtchShort *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d40d6c12;

typedef struct shared_ptr<EtchString> {
    struct EtchString *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_bb08349a;

typedef struct shared_ptr<const spotify::connect::AbstractConnectDevice> {
    struct AbstractConnectDevice *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_bdbe5a13;

typedef struct shared_ptr<const spotify::social::SocialUserData> {
    struct SocialUserData *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_464e3128;

typedef struct shared_ptr<coreobjc::LogObserver> {
    struct LogObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_97588a64;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::AVConnectionType> {
    struct AVConnectionType *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_9f50eacd;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::AVPlayerState> {
    struct AVPlayerState *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0b1fe177;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIDataTable> {
    struct RHMIDataTable *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_2c7d29fd;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::RHMIMetaData> {
    struct RHMIMetaData *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_06cdad31;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::BMWRemoting::VersionInfo> {
    struct VersionInfo *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d04dc555;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::LogLevel> {
    struct LogLevel *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e92c9ff6;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::MapMode> {
    struct MapMode *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e9bf6e71;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::RHMIResourceType> {
    struct RHMIResourceType *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_585487b4;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::RHMIVersion> {
    struct RHMIVersion *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_51068687;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::SDSDialogCommand> {
    struct SDSDialogCommand *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_95c73aa4;

typedef struct shared_ptr<de_bmw_idrive_BMWRemoting::VoicePriorityType> {
    struct VoicePriorityType *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_c41975d0;

typedef struct shared_ptr<spotify::analytics::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0bb93f61;

typedef struct shared_ptr<spotify::connect::AbstractConnectDevice> {
    struct AbstractConnectDevice *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e7b078e8;

typedef struct shared_ptr<spotify::http::AppleSessionManager> {
    struct AppleSessionManager *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_d8673b2f;

typedef struct shared_ptr<spotify::http::ConnectionFactory> {
    struct ConnectionFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6ae16b82;

typedef struct shared_ptr<spotify::metadata::MetadataTask> {
    struct MetadataTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6008c08c;

typedef struct shared_ptr<spotify::player::ProxyContextPlayer> {
    struct ProxyContextPlayer *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_fa30f844;

typedef struct shared_ptr<spotify::player::Restorable> {
    struct Restorable *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_43aca8fa;

typedef struct shared_ptr<spotify::player::mft::MftCanPlayChecker> {
    struct MftCanPlayChecker *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c81f7823;

typedef struct shared_ptr<spotify::product_state::ProductState> {
    struct ProductState *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2175cb8d;

typedef struct shared_ptr<spotify::time::ServerTime> {
    struct ServerTime *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_20fc2b2c;

typedef struct span<const spotify::metadata::AlbumGroup> {
    struct AlbumGroup *_field1;
    unsigned long long _field2;
} span_c9060bd8;

typedef struct span<const spotify::uri::SpotifyLink> {
    struct SpotifyLink *_field1;
    unsigned long long _field2;
} span_60459498;

typedef struct vector<spotify::uri::SpotifyLink, std::__1::allocator<spotify::uri::SpotifyLink>> {
    struct SpotifyLink *_field1;
    struct SpotifyLink *_field2;
    struct __compressed_pair<spotify::uri::SpotifyLink *, std::__1::allocator<spotify::uri::SpotifyLink>> {
        struct SpotifyLink *_field1;
    } _field3;
} vector_553ebee1;

typedef struct weak_ptr<spotify::http::AppleSessionManager> {
    struct AppleSessionManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_a31af7f1;

typedef struct weak_ptr<spotify::player::ProxyContextPlayer> {
    struct ProxyContextPlayer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_20886a9c;

typedef struct weak_ptr<spotify::time::ServerTime> {
    struct ServerTime *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_0e97206c;

#pragma mark Named Unions

union Data {
    CDStruct_ecbe5f6e _field1;
    CDStruct_ecbe5f6e _field2;
    struct {
        struct LoginCredentials *_field1;
    } _field3;
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    CDStruct_b2fbf00d _field1;
    CDStruct_b2fbf00d _field2;
    float _field3[2];
};

#if 0
// Names with conflicting types:
typedef union {
    char _field1[24];
    struct a8 _field2;
} dummy_u_1f621ea1;

typedef union {
    char _field1[8];
    struct a8 _field2;
} dummy_u_16110d0e;

#endif

