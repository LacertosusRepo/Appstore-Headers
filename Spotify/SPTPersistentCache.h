//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSFileManager, NSOperationQueue, SPTPersistentCacheFileManager, SPTPersistentCacheGarbageCollector, SPTPersistentCacheOptions, SPTPersistentCachePosixWrapper;

@interface SPTPersistentCache : NSObject
{
    SPTPersistentCacheOptions *_options;
    CDUnknownBlockType _debugOutput;
    NSOperationQueue *_workQueue;
    NSFileManager *_fileManager;
    SPTPersistentCacheFileManager *_dataCacheFileManager;
    SPTPersistentCacheGarbageCollector *_garbageCollector;
    SPTPersistentCachePosixWrapper *_posixWrapper;
}

@property(readonly, nonatomic) SPTPersistentCachePosixWrapper *posixWrapper; // @synthesize posixWrapper=_posixWrapper;
@property(readonly, nonatomic) SPTPersistentCacheGarbageCollector *garbageCollector; // @synthesize garbageCollector=_garbageCollector;
@property(readonly, nonatomic) SPTPersistentCacheFileManager *dataCacheFileManager; // @synthesize dataCacheFileManager=_dataCacheFileManager;
@property(readonly, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(readonly, nonatomic) NSOperationQueue *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, copy, nonatomic) CDUnknownBlockType debugOutput; // @synthesize debugOutput=_debugOutput;
@property(readonly, copy, nonatomic) SPTPersistentCacheOptions *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (void)logTimingForKey:(id)arg1 method:(unsigned long long)arg2 type:(unsigned long long)arg3;
- (void)doWork:(CDUnknownBlockType)arg1 priority:(long long)arg2 qos:(long long)arg3;
@property(readonly, nonatomic) double currentDateTimeInterval;
- (id)storedImageNamesAndAttributes;
- (_Bool)pruneBySize;
- (void)debugOutput:(id)arg1;
- (void)dispatchError:(id)arg1 result:(long long)arg2 callback:(CDUnknownBlockType)arg3 onQueue:(id)arg4;
- (void)dispatchEmptyResponseWithResult:(long long)arg1 callback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)collectGarbageForceExpire:(_Bool)arg1 forceLocked:(_Bool)arg2;
- (void)runRegularGC;
- (_Bool)isDataCanBeReturnedWithHeader:(struct SPTPersistentCacheRecordHeader *)arg1;
- (_Bool)isDataExpiredWithHeader:(struct SPTPersistentCacheRecordHeader *)arg1;
- (id)alterHeaderForFileAtPath:(id)arg1 withBlock:(CDUnknownBlockType)arg2 writeBack:(_Bool)arg3 complain:(_Bool)arg4;
- (id)guardOpenFileWithPath:(id)arg1 jobBlock:(CDUnknownBlockType)arg2 complain:(_Bool)arg3 writeBack:(_Bool)arg4;
- (id)storeDataSync:(id)arg1 forKey:(id)arg2 ttl:(unsigned long long)arg3 locked:(_Bool)arg4 withCallback:(CDUnknownBlockType)arg5 onQueue:(id)arg6;
- (void)loadDataForKeySync:(id)arg1 withCallback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)dealloc;
- (unsigned long long)lockedItemsSizeInBytes;
- (unsigned long long)totalUsedSizeInBytes;
- (void)wipeNonLockedFilesWithCallback:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)wipeLockedFilesWithCallback:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)pruneWithCallback:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)unscheduleGarbageCollector;
- (void)scheduleGarbageCollector;
- (_Bool)unlockDataForKeys:(id)arg1 callback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (_Bool)lockDataForKeys:(id)arg1 callback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)removeDataForKeys:(id)arg1 callback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)removeDataForKeysSync:(id)arg1;
- (void)touchDataForKey:(id)arg1 callback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (_Bool)storeData:(id)arg1 forKey:(id)arg2 ttl:(unsigned long long)arg3 locked:(_Bool)arg4 withCallback:(CDUnknownBlockType)arg5 onQueue:(id)arg6;
- (_Bool)storeData:(id)arg1 forKey:(id)arg2 locked:(_Bool)arg3 withCallback:(CDUnknownBlockType)arg4 onQueue:(id)arg5;
- (_Bool)loadDataForKeysWithPrefix:(id)arg1 chooseKeyCallback:(CDUnknownBlockType)arg2 withCallback:(CDUnknownBlockType)arg3 onQueue:(id)arg4;
- (_Bool)loadDataForKey:(id)arg1 withCallback:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (id)initWithOptions:(id)arg1;
- (id)init;

@end

