//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTGaiaDeviceDelegate.h"
#import "SPTGaiaDeviceStateManager.h"

@class NSArray, NSMapTable, NSPointerArray, NSString, SPTGaiaBonjourManager, SPTGaiaDevice;

@interface SPTGaiaDeviceManager : NSObject <SPTGaiaDeviceDelegate, SPTGaiaDeviceStateManager>
{
    struct GaiaManagerInterface *_gaiaManager;
    struct MdnsManagerInterface *_mdnsManager;
    struct DialManagerInterface *_dialManager;
    NSString *_localDeviceID;
    struct scoped_connection remote_transfer_connection;
    struct scoped_connection device_map_connection;
    struct scoped_connection connect_login_connection;
    struct scoped_connection connect_logout_connection;
    struct scoped_connection onboarding_connection;
    _Bool _canPlay;
    _Bool _localDevicesOnlyInternal;
    _Bool _activatingLocalDevice;
    _Bool _localTier1Enabled;
    _Bool _enabled;
    NSArray *_devices;
    NSArray *_localDevices;
    SPTGaiaDevice *_activeDevice;
    SPTGaiaDevice *_deviceBeingActivated;
    CDUnknownBlockType _activationCallback;
    SPTGaiaBonjourManager *_bonjourManager;
    NSPointerArray *_stateObservers;
    NSMapTable *_connectLoginStateObservers;
    id <SPTAsyncScheduler> _scheduler;
    NSString *_defaultsKey;
}

@property(retain) NSString *defaultsKey; // @synthesize defaultsKey=_defaultsKey;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) _Bool localTier1Enabled; // @synthesize localTier1Enabled=_localTier1Enabled;
@property(nonatomic) __weak id <SPTAsyncScheduler> scheduler; // @synthesize scheduler=_scheduler;
@property(retain, nonatomic) NSMapTable *connectLoginStateObservers; // @synthesize connectLoginStateObservers=_connectLoginStateObservers;
@property(retain, nonatomic) NSPointerArray *stateObservers; // @synthesize stateObservers=_stateObservers;
@property(retain, nonatomic) SPTGaiaBonjourManager *bonjourManager; // @synthesize bonjourManager=_bonjourManager;
@property(copy, nonatomic) CDUnknownBlockType activationCallback; // @synthesize activationCallback=_activationCallback;
@property _Bool activatingLocalDevice; // @synthesize activatingLocalDevice=_activatingLocalDevice;
@property _Bool localDevicesOnlyInternal; // @synthesize localDevicesOnlyInternal=_localDevicesOnlyInternal;
@property(nonatomic) _Bool canPlay; // @synthesize canPlay=_canPlay;
@property(retain) SPTGaiaDevice *deviceBeingActivated; // @synthesize deviceBeingActivated=_deviceBeingActivated;
@property(retain) SPTGaiaDevice *activeDevice; // @synthesize activeDevice=_activeDevice;
@property(readonly, copy) NSString *localDeviceID; // @synthesize localDeviceID=_localDeviceID;
@property(retain) NSArray *localDevices; // @synthesize localDevices=_localDevices;
@property(retain) NSArray *devices; // @synthesize devices=_devices;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)removeConnectLoginStateObserver:(id)arg1;
- (void)addConnectLoginStateObserver:(id)arg1 onQueue:(id)arg2;
- (void)didBecomeActive;
- (void)enableTier1LocalVerification;
- (struct SposDict)coreDictionaryFromDeviceInfo:(id)arg1;
- (void)removeAllBonjourDevices;
- (_Bool)loginConnectDevice:(id)arg1 info:(id)arg2;
- (_Bool)removeConnectDevice:(id)arg1;
- (_Bool)addOrUpdateConnectDevice:(id)arg1 info:(id)arg2;
@property(nonatomic) int volumeSteps;
@property(nonatomic, getter=getLocalDevicesOnly, setter=setLocalDevicesOnly:) _Bool localDevicesOnly;
@property(nonatomic, setter=setSortingMethod:) long long sortingMethod;
@property(retain, nonatomic, setter=setAttach:) NSString *attach;
- (void)executeBlock:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (void)notifyConnectLogout:(const basic_string_7c0a1c0b *)arg1;
- (void)notifyConnectLoginStatusDidChange:(const basic_string_7c0a1c0b *)arg1 username:(const basic_string_7c0a1c0b *)arg2 blob:(const basic_string_7c0a1c0b *)arg3 clientKey:(const basic_string_7c0a1c0b *)arg4 tokenType:(const basic_string_7c0a1c0b *)arg5;
- (void)notifyDeviceBeingOnboarded:(id)arg1 enabled:(_Bool)arg2;
- (void)notifyDevice:(id)arg1 volumeDidChange:(float)arg2;
- (void)notifyDeviceBeingActivatedDidChange:(id)arg1 error:(id)arg2;
- (void)notifyActiveDeviceDidChange:(id)arg1;
- (void)notifyAvailableDevicesDidChange:(id)arg1;
- (void)notifyPlayingRemotelyDidChange:(_Bool)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)removeDeviceWithServiceInfo:(id)arg1;
- (void)addDeviceWithServiceInfo:(id)arg1;
- (void)clearOnboardingFlows;
- (void)reportOnboardingForDevice:(id)arg1 didComplete:(_Bool)arg2;
- (void)clearNewlyDiscovered;
- (void)acknowledgeNewlyDiscovered;
@property(readonly, nonatomic, getter=newlyDiscoveredDevices) NSArray *newlyDiscoveredDevices;
- (void)device:(id)arg1 volumeChanged:(float)arg2;
- (void)device:(id)arg1 reportedError:(id)arg2;
- (void)rebuildDeviceList;
- (void)consumeLocalDeviceGettingActivated;
- (void)updateIncarnations;
- (void)searchForDevices;
- (void)onboarding:(const shared_ptr_e7b078e8 *)arg1 enabled:(_Bool)arg2;
- (void)remoteTransfer:(const shared_ptr_bdbe5a13 *)arg1 error:(int)arg2;
- (id)findDevice:(id)arg1 withType:(long long)arg2;
- (id)findDevice:(id)arg1 isZeroConf:(_Bool)arg2;
- (void)activateDevice:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (shared_ptr_e7b078e8)getDeviceBeingActivatedNonConst;
- (shared_ptr_e7b078e8)getActiveDeviceNonConst;
- (void)handleDeviceBeingActivatedChanged:(id)arg1;
- (void)handleActiveDeviceChanged:(id)arg1 forceNotify:(_Bool)arg2;
- (id)getOrCreateGaiaDeviceFromCpp:(shared_ptr_e7b078e8)arg1;
- (void)defaultsChanged:(id)arg1;
@property(readonly, getter=isPlayingRemotely) _Bool playingRemotely;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (struct DialManagerInterface *)dial;
- (struct MdnsManagerInterface *)mdns;
- (struct GaiaManagerInterface *)cpp;
- (void)invalidate;
- (void)dealloc;
- (id)initWithGaiaManager:(struct GaiaManagerInterface *)arg1 mdnsManager:(struct MdnsManagerInterface *)arg2 dialManager:(struct DialManagerInterface *)arg3 offlineMode:(id)arg4 scheduler:(id)arg5 canonicalUsername:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

