//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 14 2020 10:06:36).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <Foundation/NSError.h>

@interface NSError (FBSDKLoginError)
+ (id)fbErrorWithSystemAccountStoreDeniedError:(id)arg1 isCancellation:(_Bool *)arg2;
+ (id)fbErrorFromServerError:(id)arg1;
+ (id)fbErrorFromReturnURLParameters:(id)arg1;
+ (id)fbErrorForSystemPasswordChange:(id)arg1;
+ (id)fbErrorForFailedLoginWithCode:(long long)arg1 innerError:(id)arg2;
+ (id)fbErrorForFailedLoginWithCode:(long long)arg1;
+ (id)gckb_errorWithErrno:(int)arg1;
+ (id)dataAssemblingError:(long long)arg1 userInfo:(id)arg2;
+ (id)connectionError:(long long)arg1 userInfo:(id)arg2;
+ (id)applicationErrorWithDescription:(id)arg1 underlyingError:(id)arg2;
+ (id)errorWithFrameworkCode:(long long)arg1 description:(id)arg2 underlyingError:(id)arg3;
+ (id)errorWithFrameworkCode:(long long)arg1 description:(id)arg2;
+ (id)spt_sharingSDKErrorWithCode:(unsigned long long)arg1 message:(id)arg2;
+ (id)spt_browseViewModelFetcherErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (_Bool)spt_isRecoverableConcertsEntityErrorCode:(long long)arg1;
+ (id)spt_concertsEntityErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)spt_concertsEntityErrorWithCode:(long long)arg1;
+ (id)spt_networkIsOfflineError;
+ (id)spt_networkErrorWithUnderlyingError:(id)arg1;
+ (id)spt_contentIsUnknownError;
+ (id)spt_unknownErrorWithUnderlyingError:(id)arg1;
+ (id)spt_errorWithInAppMessageJSONParserCode:(long long)arg1 userInfo:(id)arg2;
+ (id)spt_loginFlowGenericError;
+ (id)spt_errorWithSecurityStatusCode:(int)arg1;
+ (id)spt_persistentDataCacheErrorWithCode:(long long)arg1;
+ (id)spt_createFreeUserAttemptJoinError;
+ (id)spt_createSessionFullError;
+ (id)spt_createJoinFailedError;
+ (id)spt_voiceLibraryOfflineError;
+ (id)spt_voiceLibraryErrorWithRecordPermission:(unsigned long long)arg1;
+ (id)spt_connectivityErrorWithCode:(long long)arg1 description:(id)arg2;
+ (id)spt_connectivityErrorWithCode:(long long)arg1;
- (_Bool)containsEtchErrorTypeEtchException;
- (long long)spt_browseViewModelFetcherErrorCode;
@property(readonly, nonatomic) long long spt_inappmessageJSONParserErrorCode;
- (_Bool)spt_isFacebookUserDoesNotExistError;
- (_Bool)spt_isUserDidCancelFacebookAuthenticationError;
- (_Bool)spt_isNetworkDisabledError;
- (_Bool)spt_isInAuthenticationErrorDomain;
- (_Bool)spt_shouldShowFreeUserAttemptJoinErrorPopup;
- (_Bool)spt_shouldShowSessionFullErrorPopup;
- (_Bool)spt_shouldShowErrorPopup;
- (id)spt_voiceLogError;
- (unsigned long long)spt_voiceLogErrorType;
- (_Bool)spt_isUnintrusiveVoiceErrorType;
- (id)spt_voiceLogErrorTextString;
- (id)spt_voiceLogErrorTypeString;
- (unsigned long long)spt_voiceErrorType;
- (id)spt_voiceLibrarySessionError;
- (id)spt_voiceLibraryErrorDescription;
- (id)spt_voiceLibraryErrorType;
- (id)spt_voiceLibraryErrorDomain;
- (_Bool)spt_isVoiceLibraryEligibleError;
@end

