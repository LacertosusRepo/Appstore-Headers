//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 14 2020 10:06:36).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTCanvasCompatibilityManagerObserver-Protocol.h"
#import "SPTCanvasFlagSignalResolverDelegate-Protocol.h"

@class NSString, SPTCanvasCompatibilityManager, SPTCanvasFlagSignalResolver, SPTObserverManager;
@protocol SPTLocalSettings;

@interface SPTCanvasTestManager : NSObject <SPTCanvasCompatibilityManagerObserver, SPTCanvasFlagSignalResolverDelegate>
{
    _Bool _didShowFirstCanvas;
    _Bool _forceDisabled;
    _Bool _canvasEnabled;
    SPTCanvasFlagSignalResolver *_featureFlagResolver;
    SPTCanvasFlagSignalResolver *_streamingFlagResolver;
    SPTCanvasFlagSignalResolver *_dataSaverFlagResolver;
    SPTCanvasFlagSignalResolver *_canvasNoCacheFlagResolver;
    SPTCanvasFlagSignalResolver *_canvasSettingsFlagResolver;
    SPTCanvasFlagSignalResolver *_canvasToggleFlagResolver;
    SPTCanvasFlagSignalResolver *_canvasBlankToggleFlagResolver;
    SPTCanvasFlagSignalResolver *_canvasTapFlagResolver;
    SPTCanvasFlagSignalResolver *_canvasPlaylistFlagResolver;
    id <SPTLocalSettings> _localSettings;
    SPTObserverManager *_observers;
    SPTCanvasCompatibilityManager *_compatibilityManager;
}

@property(readonly, nonatomic) SPTCanvasCompatibilityManager *compatibilityManager; // @synthesize compatibilityManager=_compatibilityManager;
@property(readonly, nonatomic) SPTObserverManager *observers; // @synthesize observers=_observers;
@property(readonly, nonatomic) id <SPTLocalSettings> localSettings; // @synthesize localSettings=_localSettings;
@property(retain, nonatomic) SPTCanvasFlagSignalResolver *canvasPlaylistFlagResolver; // @synthesize canvasPlaylistFlagResolver=_canvasPlaylistFlagResolver;
@property(retain, nonatomic) SPTCanvasFlagSignalResolver *canvasTapFlagResolver; // @synthesize canvasTapFlagResolver=_canvasTapFlagResolver;
@property(retain, nonatomic) SPTCanvasFlagSignalResolver *canvasBlankToggleFlagResolver; // @synthesize canvasBlankToggleFlagResolver=_canvasBlankToggleFlagResolver;
@property(retain, nonatomic) SPTCanvasFlagSignalResolver *canvasToggleFlagResolver; // @synthesize canvasToggleFlagResolver=_canvasToggleFlagResolver;
@property(retain, nonatomic) SPTCanvasFlagSignalResolver *canvasSettingsFlagResolver; // @synthesize canvasSettingsFlagResolver=_canvasSettingsFlagResolver;
@property(retain, nonatomic) SPTCanvasFlagSignalResolver *canvasNoCacheFlagResolver; // @synthesize canvasNoCacheFlagResolver=_canvasNoCacheFlagResolver;
@property(retain, nonatomic) SPTCanvasFlagSignalResolver *dataSaverFlagResolver; // @synthesize dataSaverFlagResolver=_dataSaverFlagResolver;
@property(retain, nonatomic) SPTCanvasFlagSignalResolver *streamingFlagResolver; // @synthesize streamingFlagResolver=_streamingFlagResolver;
@property(retain, nonatomic) SPTCanvasFlagSignalResolver *featureFlagResolver; // @synthesize featureFlagResolver=_featureFlagResolver;
@property(nonatomic, getter=isCanvasEnabled) _Bool canvasEnabled; // @synthesize canvasEnabled=_canvasEnabled;
@property(nonatomic) _Bool forceDisabled; // @synthesize forceDisabled=_forceDisabled;
@property(nonatomic) _Bool didShowFirstCanvas; // @synthesize didShowFirstCanvas=_didShowFirstCanvas;
- (void).cxx_destruct;
- (void)didChangeEnableCanvasForDevice:(id)arg1;
- (void)didChangeFlag:(id)arg1 enabled:(_Bool)arg2;
@property(readonly, nonatomic, getter=isDataSaverEnabled) _Bool dtaSaverEnabled;
@property(readonly, nonatomic) _Bool shouldStreamCanvas;
@property(readonly, nonatomic) _Bool shouldSkipCanvasCache;
- (_Bool)shouldEnableCanvasPlaylist;
- (_Bool)shouldEnableCanvasTap;
@property(readonly, nonatomic) _Bool shouldDisplayBlankCanvasToggle;
@property(readonly, nonatomic) _Bool shouldDisplayCanvasToggle;
@property(readonly, nonatomic) _Bool shouldDisplayCanvasSettings;
@property(readonly, nonatomic) _Bool shouldDisplayCanvasSettingsContextMenuAction;
@property(readonly, nonatomic) _Bool shouldEnableCanvas;
- (_Bool)canEnableCanvas;
- (void)updateCanvasEnabled;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)initWithFlagSignalFactory:(id)arg1 dataSaverSignal:(id)arg2 localSettings:(id)arg3 compatibilityManager:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

