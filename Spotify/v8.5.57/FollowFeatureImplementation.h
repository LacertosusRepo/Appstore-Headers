//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 14 2020 10:06:36).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "FollowFeature-Protocol.h"
#import "SPTService-Protocol.h"

@class FollowModel, NSString, SPTAllocationContext, SPTFollowArtistCollectionStateManager, SPTFollowDataProvider, SPTFollowFeatureLoggerImplementation, SPTFollowModelMessageManager;
@protocol SPContextMenuFeature, SPTCollectionPlatformService, SPTContainerService, SPTFollowModelFactory, SPTNetworkService, SPTRemoteConfigurationResolver, SPTRemoteConfigurationService, SPTSessionService;

@interface FollowFeatureImplementation : NSObject <SPTService, FollowFeature>
{
    id <SPTSessionService> _clientSessionService;
    id <SPTCollectionPlatformService> _collectionPlatformService;
    id <SPContextMenuFeature> _contextMenuFeature;
    id <SPTNetworkService> _networkFeature;
    id <SPTContainerService> _containerService;
    id <SPTRemoteConfigurationService> _remoteConfigurationService;
    id <SPTFollowModelFactory> _followModelFactory;
    SPTFollowDataProvider *_followDataProvider;
    SPTFollowModelMessageManager *_messageManager;
    SPTFollowFeatureLoggerImplementation *_followLogger;
    SPTFollowArtistCollectionStateManager *_followArtistStateManager;
    id <SPTRemoteConfigurationResolver> _remoteConfigurationResolver;
    FollowModel *_lastFollowArtistTaskModel;
    FollowModel *_lastBanArtistTaskModel;
}

+ (id)serviceIdentifier;
@property(retain, nonatomic) FollowModel *lastBanArtistTaskModel; // @synthesize lastBanArtistTaskModel=_lastBanArtistTaskModel;
@property(retain, nonatomic) FollowModel *lastFollowArtistTaskModel; // @synthesize lastFollowArtistTaskModel=_lastFollowArtistTaskModel;
@property(retain, nonatomic) id <SPTRemoteConfigurationResolver> remoteConfigurationResolver; // @synthesize remoteConfigurationResolver=_remoteConfigurationResolver;
@property(retain, nonatomic) SPTFollowArtistCollectionStateManager *followArtistStateManager; // @synthesize followArtistStateManager=_followArtistStateManager;
@property(retain, nonatomic) SPTFollowFeatureLoggerImplementation *followLogger; // @synthesize followLogger=_followLogger;
@property(retain, nonatomic) SPTFollowModelMessageManager *messageManager; // @synthesize messageManager=_messageManager;
@property(retain, nonatomic) SPTFollowDataProvider *followDataProvider; // @synthesize followDataProvider=_followDataProvider;
@property(retain, nonatomic) id <SPTFollowModelFactory> followModelFactory; // @synthesize followModelFactory=_followModelFactory;
@property(nonatomic) __weak id <SPTRemoteConfigurationService> remoteConfigurationService; // @synthesize remoteConfigurationService=_remoteConfigurationService;
@property(nonatomic) __weak id <SPTContainerService> containerService; // @synthesize containerService=_containerService;
@property(nonatomic) __weak id <SPTNetworkService> networkFeature; // @synthesize networkFeature=_networkFeature;
@property(nonatomic) __weak id <SPContextMenuFeature> contextMenuFeature; // @synthesize contextMenuFeature=_contextMenuFeature;
@property(nonatomic) __weak id <SPTCollectionPlatformService> collectionPlatformService; // @synthesize collectionPlatformService=_collectionPlatformService;
@property(nonatomic) __weak id <SPTSessionService> clientSessionService; // @synthesize clientSessionService=_clientSessionService;
- (void).cxx_destruct;
- (id)provideBanArtistTaskForURL:(id)arg1 logContext:(id)arg2 sourceURL:(id)arg3;
- (id)provideFollowArtistTaskForURL:(id)arg1 logContext:(id)arg2 sourceURL:(id)arg3;
- (void)provideFollowModelForTargetURI:(id)arg1 logContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)provideMultipleFollowModelForFollowDataList:(id)arg1 logContext:(id)arg2;
- (id)provideFollowModelForFollowData:(id)arg1 logContext:(id)arg2;
- (id)provideFeatureProperties;
- (id)provideFollowLogger;
- (id)provideFollowModelFactory;
- (void)load;
- (void)configureWithServices:(id)arg1;

// Remaining properties
@property(retain, nonatomic) SPTAllocationContext *allocationContext;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

