//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 14 2020 10:06:36).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTGaiaConnectAPI-Protocol.h"
#import "SPTGaiaConnectManagerObserver-Protocol.h"
#import "SPTGaiaConnectPublicStateCacheObserver-Protocol.h"

@class NSArray, NSString, SPTCastManager, SPTGaiaConnectPublicStateCache, SPTObserverManager;
@protocol SPTGaiaConnectManager, SPTGaiaDeviceProtocol, SPTGaiaLocalDeviceProtocol;

@interface SPTGaiaConnectAPIImplementation : NSObject <SPTGaiaConnectManagerObserver, SPTGaiaConnectPublicStateCacheObserver, SPTGaiaConnectAPI>
{
    id <SPTGaiaConnectManager> _connectManager;
    SPTGaiaConnectPublicStateCache *_connectStateCache;
    SPTCastManager *_castManager;
    SPTObserverManager *_observers;
}

@property(retain, nonatomic) SPTObserverManager *observers; // @synthesize observers=_observers;
@property(readonly, nonatomic) SPTCastManager *castManager; // @synthesize castManager=_castManager;
@property(readonly, nonatomic) SPTGaiaConnectPublicStateCache *connectStateCache; // @synthesize connectStateCache=_connectStateCache;
@property(readonly, nonatomic) id <SPTGaiaConnectManager> connectManager; // @synthesize connectManager=_connectManager;
- (void).cxx_destruct;
- (void)connectDidChangeCurrentConnectionType:(id)arg1;
- (void)connectDidChangeRemoteConnectionState:(id)arg1;
- (void)connectDidChangeActiveDeviceName:(id)arg1;
- (void)connectDidChangeAvailable:(id)arg1;
- (void)connectManager:(id)arg1 deviceBeingActivatedDidChange:(id)arg2;
- (void)connectManager:(id)arg1 activeDeviceDidChange:(id)arg2;
- (void)connectManager:(id)arg1 availableDevicesDidChange:(id)arg2;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (_Bool)deviceRepresentsGroup:(id)arg1;
- (_Bool)shouldShowCastLogoForDevice:(id)arg1;
- (void)setIncarnationAsPreferred:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)logoutDevice:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (void)discoverDevices;
- (void)renameDevice:(id)arg1 name:(id)arg2 responseBlock:(CDUnknownBlockType)arg3;
- (void)deactivateActiveDeviceWithResponseBlock:(CDUnknownBlockType)arg1;
- (void)activateDevice:(id)arg1 responseBlock:(CDUnknownBlockType)arg2;
- (id)findIncarnationOnDeviceWithId:(id)arg1 incarnationId:(id)arg2;
- (id)findDeviceWithPhysicalIdentifier:(id)arg1;
- (id)findDeviceWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSString *activeDeviceDisplayName;
@property(readonly, nonatomic) long long connectionState;
@property(readonly, nonatomic) long long activeConnectionType;
@property(readonly, nonatomic) _Bool canConnectToAnyDevice;
@property(readonly, nonatomic) id <SPTGaiaDeviceProtocol> deviceBeingActivated;
@property(readonly, nonatomic) id <SPTGaiaLocalDeviceProtocol> localDevice;
@property(readonly, nonatomic) id <SPTGaiaDeviceProtocol> activeDevice;
@property(readonly, nonatomic) NSArray *devices;
- (void)dealloc;
- (id)initWithConnectManager:(id)arg1 connectStateCache:(id)arg2 castManager:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

