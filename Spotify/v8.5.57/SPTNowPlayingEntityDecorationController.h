//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 14 2020 10:06:36).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSHashTable, NSString, NSURL, SPTPlayerState, SPTUser;
@protocol SPTCollectionPlatformTestManager, SPTPlaylistPlatformPlaylistDataLoader, SPTRadioManager;

@interface SPTNowPlayingEntityDecorationController : NSObject
{
    _Bool _contextAwareSharing;
    SPTPlayerState *_playerState;
    unsigned long long _entityType;
    NSString *_entityName;
    NSString *_entityDescription;
    NSString *_contextName;
    NSURL *_entityClickURI;
    NSHashTable *_observers;
    id <SPTRadioManager> _radioManager;
    SPTUser *_entityUser;
    id <SPTPlaylistPlatformPlaylistDataLoader> _playlistDataLoader;
    id <SPTCollectionPlatformTestManager> _collectionTestManager;
}

@property(readonly, nonatomic) __weak id <SPTCollectionPlatformTestManager> collectionTestManager; // @synthesize collectionTestManager=_collectionTestManager;
@property(retain, nonatomic) id <SPTPlaylistPlatformPlaylistDataLoader> playlistDataLoader; // @synthesize playlistDataLoader=_playlistDataLoader;
@property(retain, nonatomic) SPTUser *entityUser; // @synthesize entityUser=_entityUser;
@property(readonly, nonatomic) id <SPTRadioManager> radioManager; // @synthesize radioManager=_radioManager;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSURL *entityClickURI; // @synthesize entityClickURI=_entityClickURI;
@property(retain, nonatomic) NSString *contextName; // @synthesize contextName=_contextName;
@property(nonatomic, getter=isContextAwareSharing) _Bool contextAwareSharing; // @synthesize contextAwareSharing=_contextAwareSharing;
@property(retain, nonatomic) NSString *entityDescription; // @synthesize entityDescription=_entityDescription;
@property(retain, nonatomic) NSString *entityName; // @synthesize entityName=_entityName;
@property(nonatomic) unsigned long long entityType; // @synthesize entityType=_entityType;
@property(retain, nonatomic) SPTPlayerState *playerState; // @synthesize playerState=_playerState;
- (void).cxx_destruct;
- (void)updateEntityInformationWithPlayerState:(id)arg1 contextNameAndDescription:(id)arg2 formatListType:(id)arg3;
- (void)updateEntityInformationWithPlayerState:(id)arg1;
- (id)entityNameAndDescriptionFromPlayerState:(id)arg1 name:(id)arg2 description:(id)arg3;
- (id)clickURIFromPlayerstate:(id)arg1;
- (void)fetchPlaylistNameForURL:(id)arg1 isPlaylistFolder:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)nameAndDescriptionForPlaylistURL:(id)arg1 isPlaylistFolder:(_Bool)arg2 description:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)contextNameAndDescriptionFromPlayerState:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSURL *contextURI;
@property(readonly, nonatomic) NSURL *viewURI;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)initWithRadioManager:(id)arg1 playlistDataLoader:(id)arg2 collectionTestManager:(id)arg3;

@end

