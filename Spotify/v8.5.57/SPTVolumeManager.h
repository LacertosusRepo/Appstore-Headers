//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 14 2020 10:06:36).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTVolumeAPI-Protocol.h"
#import "SPTVolumeRemoteCoordinatorDelegate-Protocol.h"
#import "SPTVolumeSystemObserver-Protocol.h"

@class NSNumber, NSString, SPTObserverManager, SPTVolumeDebugInstrumentation, SPTVolumeLogger, SPTVolumeUbiLogger;
@protocol SPTGaiaConnectAPI, SPTVolumeRemoteCoordinator, SPTVolumeSynchronizationManager, SPTVolumeSystemAPI;

@interface SPTVolumeManager : NSObject <SPTVolumeRemoteCoordinatorDelegate, SPTVolumeSystemObserver, SPTVolumeAPI>
{
    id <SPTVolumeSystemAPI> _systemVolumeManager;
    id <SPTVolumeRemoteCoordinator> _remoteVolumeCoordinator;
    id <SPTVolumeSynchronizationManager> _volumeSynchronizationManager;
    id <SPTGaiaConnectAPI> _connectManager;
    SPTVolumeLogger *_logger;
    SPTVolumeUbiLogger *_ubiLogger;
    SPTVolumeDebugInstrumentation *_debugLogger;
    SPTObserverManager *_observers;
    double _internalVolume;
}

@property(nonatomic) double internalVolume; // @synthesize internalVolume=_internalVolume;
@property(retain, nonatomic) SPTObserverManager *observers; // @synthesize observers=_observers;
@property(readonly, nonatomic) SPTVolumeDebugInstrumentation *debugLogger; // @synthesize debugLogger=_debugLogger;
@property(readonly, nonatomic) SPTVolumeUbiLogger *ubiLogger; // @synthesize ubiLogger=_ubiLogger;
@property(readonly, nonatomic) SPTVolumeLogger *logger; // @synthesize logger=_logger;
@property(readonly, nonatomic) id <SPTGaiaConnectAPI> connectManager; // @synthesize connectManager=_connectManager;
@property(readonly, nonatomic) id <SPTVolumeSynchronizationManager> volumeSynchronizationManager; // @synthesize volumeSynchronizationManager=_volumeSynchronizationManager;
@property(readonly, nonatomic) id <SPTVolumeRemoteCoordinator> remoteVolumeCoordinator; // @synthesize remoteVolumeCoordinator=_remoteVolumeCoordinator;
@property(readonly, nonatomic) id <SPTVolumeSystemAPI> systemVolumeManager; // @synthesize systemVolumeManager=_systemVolumeManager;
- (void).cxx_destruct;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)notifyObserversOfVolumeChange;
- (void)volumeShouldBeResetToValue:(double)arg1;
- (void)volumeShouldBeSynchronizedWithRemoteValue:(double)arg1;
- (void)handleVolumeCommandStatus:(long long)arg1;
- (void)systemVolumeDidUpdate:(double)arg1;
- (void)requestVolumeUpdate:(double)arg1;
@property(readonly, nonatomic) NSNumber *volume; // @dynamic volume;
- (void)setupObserving;
- (id)initWithSystemVolumeManager:(id)arg1 remoteVolumeCoordinator:(id)arg2 volumeSynchronizationManager:(id)arg3 connectManager:(id)arg4 logger:(id)arg5 ubiLogger:(id)arg6 debugLogger:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

