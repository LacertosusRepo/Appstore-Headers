//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 14 2020 10:06:36).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTCanvasNowPlayingViewContentLoader-Protocol.h"
#import "SPTCanvasNowPlayingViewControllerReloaderObserver-Protocol.h"
#import "SPTCanvasNowPlayingViewStateObserver-Protocol.h"
#import "SPTCanvasViewControllerViewModelLoadDelegate-Protocol.h"

@class NSMapTable, NSString, SPTCanvasForceArtworkManager, SPTCanvasNowPlayingContentLoaderTracker, SPTCanvasNowPlayingViewControllerLoaderCache, SPTCanvasNowPlayingViewControllerReloader, SPTCanvasNowPlayingViewControllerViewModelFactory, SPTCanvasNowPlayingViewState, SPTCanvasTestManager;
@protocol SPTCanvasNowPlayingViewContentLoaderDelegate, SPTCanvasTrackChecker, SPTVideoURLAssetLoader;

@interface SPTCanvasNowPlayingViewControllerLoader : NSObject <SPTCanvasNowPlayingViewStateObserver, SPTCanvasViewControllerViewModelLoadDelegate, SPTCanvasNowPlayingViewControllerReloaderObserver, SPTCanvasNowPlayingViewContentLoader>
{
    id <SPTCanvasNowPlayingViewContentLoaderDelegate> delegate;
    id <SPTCanvasTrackChecker> _canvasTrackChecker;
    SPTCanvasNowPlayingViewControllerViewModelFactory *_contentLayerViewModelFactory;
    SPTCanvasNowPlayingViewControllerReloader *_contentReloader;
    id <SPTVideoURLAssetLoader> _videoAssetLoader;
    SPTCanvasNowPlayingContentLoaderTracker *_contentLoaderTracker;
    SPTCanvasNowPlayingViewState *_nowPlayingState;
    SPTCanvasTestManager *_testManager;
    SPTCanvasForceArtworkManager *_forceArtworkManager;
    SPTCanvasNowPlayingViewControllerLoaderCache *_contentLoaderCache;
    NSMapTable *_viewControllers;
}

@property(retain, nonatomic) NSMapTable *viewControllers; // @synthesize viewControllers=_viewControllers;
@property(readonly, nonatomic) SPTCanvasNowPlayingViewControllerLoaderCache *contentLoaderCache; // @synthesize contentLoaderCache=_contentLoaderCache;
@property(readonly, nonatomic) SPTCanvasForceArtworkManager *forceArtworkManager; // @synthesize forceArtworkManager=_forceArtworkManager;
@property(readonly, nonatomic) SPTCanvasTestManager *testManager; // @synthesize testManager=_testManager;
@property(readonly, nonatomic) SPTCanvasNowPlayingViewState *nowPlayingState; // @synthesize nowPlayingState=_nowPlayingState;
@property(readonly, nonatomic) SPTCanvasNowPlayingContentLoaderTracker *contentLoaderTracker; // @synthesize contentLoaderTracker=_contentLoaderTracker;
@property(readonly, nonatomic) id <SPTVideoURLAssetLoader> videoAssetLoader; // @synthesize videoAssetLoader=_videoAssetLoader;
@property(readonly, nonatomic) SPTCanvasNowPlayingViewControllerReloader *contentReloader; // @synthesize contentReloader=_contentReloader;
@property(readonly, nonatomic) SPTCanvasNowPlayingViewControllerViewModelFactory *contentLayerViewModelFactory; // @synthesize contentLayerViewModelFactory=_contentLayerViewModelFactory;
@property(readonly, nonatomic) id <SPTCanvasTrackChecker> canvasTrackChecker; // @synthesize canvasTrackChecker=_canvasTrackChecker;
@property(nonatomic) __weak id <SPTCanvasNowPlayingViewContentLoaderDelegate> delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (void)contentReloader:(id)arg1 needsReloadForTrack:(id)arg2;
- (void)didFailToRenderViewControllerViewModel:(id)arg1;
- (void)didFailToLoadViewControllerViewModel:(id)arg1 withError:(id)arg2;
- (void)didLoadViewControllerViewModel:(id)arg1;
- (void)willLoadViewControllerViewModel:(id)arg1;
- (void)nowPlayingViewWillDisappear;
- (void)nowPlayingViewWillAppear;
- (void)removeCanvasViewController:(id)arg1 fromCanvasCell:(id)arg2;
- (void)addCanvasViewController:(id)arg1 toCanvasCell:(id)arg2 usingContainerViewController:(id)arg3;
- (void)didEndDisplayCanvasForTrack:(id)arg1 usingCanvasCell:(id)arg2 containerViewController:(id)arg3;
- (void)willDisplayCanvasForTrack:(id)arg1 usingCanvasCell:(id)arg2 containerViewController:(id)arg3;
- (void)configureCanvasForTrack:(id)arg1 usingCanvasCell:(id)arg2;
- (id)createCanvasContentLayerViewControllerForTrack:(id)arg1;
- (_Bool)canLoadCanvasForTrack:(id)arg1;
- (void)dealloc;
- (id)initWithCanvasTrackChecker:(id)arg1 contentLayerViewModelFactory:(id)arg2 contentLoaderCache:(id)arg3 contentReloader:(id)arg4 contentLoaderTracker:(id)arg5 videoAssetLoader:(id)arg6 nowPlayingState:(id)arg7 testManager:(id)arg8 forceArtworkManager:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

