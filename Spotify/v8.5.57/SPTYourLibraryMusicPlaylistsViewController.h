//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 14 2020 10:06:36).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SPContentInsetViewController-Protocol.h"
#import "SPTPageController-Protocol.h"
#import "SPTScrollToTopViewController-Protocol.h"
#import "SPTYourLibraryMusicFilterBarViewControllerDelegate-Protocol.h"
#import "SPTYourLibraryMusicPlaylistsViewModelDelegate-Protocol.h"
#import "SPTYourLibraryPage-Protocol.h"
#import "SPViewController-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "_TtP18QuickScrollFeature26SPTQuickScrollViewDelegate_-Protocol.h"
#import "_TtP18QuickScrollFeature28SPTQuickScrollViewDatasource_-Protocol.h"

@class NSArray, NSString, NSURL, SPTProgressView, SPTTableView, SPTYourLibraryMusicEmptyView, SPTYourLibraryMusicFilterBarViewController, SPTYourLibraryMusicGLUETheme, SPTYourLibraryMusicPlaylistsCellConfigurator, UIView;
@protocol GLUEImageLoader, SPTPageContainer, SPTShareDragDelegateFactory, SPTSortingFilteringUIFactory, SPTViewLogger, SPTYourLibraryMusicPlaylistsViewModel, SPTYourLibraryPageDelegate, UITableViewDragDelegate, _TtP18QuickScrollFeature18SPTQuickScrollView_, _TtP18QuickScrollFeature21SPTQuickScrollFactory_;

@interface SPTYourLibraryMusicPlaylistsViewController : UIViewController <SPTYourLibraryMusicFilterBarViewControllerDelegate, SPTScrollToTopViewController, SPContentInsetViewController, _TtP18QuickScrollFeature28SPTQuickScrollViewDatasource_, _TtP18QuickScrollFeature26SPTQuickScrollViewDelegate_, UITableViewDataSource, UITableViewDelegate, UIScrollViewDelegate, SPTPageController, SPTYourLibraryPage, SPTYourLibraryMusicPlaylistsViewModelDelegate, SPViewController>
{
    id <SPTYourLibraryPageDelegate> pageDelegate;
    id <SPTYourLibraryMusicPlaylistsViewModel> _viewModel;
    SPTYourLibraryMusicGLUETheme *_theme;
    CDUnknownBlockType _styleFactoryBlock;
    id <SPTViewLogger> _viewLogger;
    SPTYourLibraryMusicPlaylistsCellConfigurator *_cellConfigurator;
    SPTTableView *_tableView;
    SPTProgressView *_progressView;
    SPTYourLibraryMusicFilterBarViewController *_filterBarViewController;
    SPTYourLibraryMusicEmptyView *_emptyView;
    SPTYourLibraryMusicEmptyView *_noResultEmptyView;
    id <SPTSortingFilteringUIFactory> _sortingFilteringUIFactory;
    id <GLUEImageLoader> _glueImageLoader;
    id <SPTShareDragDelegateFactory> _shareDragDelegateFactory;
    id <UITableViewDragDelegate> _dragDelegateHolder;
    UIView<_TtP18QuickScrollFeature18SPTQuickScrollView_> *_quickScrollView;
    id <_TtP18QuickScrollFeature21SPTQuickScrollFactory_> _quickScrollFactory;
    NSArray *_sectionIndexTitles;
}

@property(copy, nonatomic) NSArray *sectionIndexTitles; // @synthesize sectionIndexTitles=_sectionIndexTitles;
@property(readonly, nonatomic) id <_TtP18QuickScrollFeature21SPTQuickScrollFactory_> quickScrollFactory; // @synthesize quickScrollFactory=_quickScrollFactory;
@property(retain, nonatomic) UIView<_TtP18QuickScrollFeature18SPTQuickScrollView_> *quickScrollView; // @synthesize quickScrollView=_quickScrollView;
@property(retain, nonatomic) id <UITableViewDragDelegate> dragDelegateHolder; // @synthesize dragDelegateHolder=_dragDelegateHolder;
@property(retain, nonatomic) id <SPTShareDragDelegateFactory> shareDragDelegateFactory; // @synthesize shareDragDelegateFactory=_shareDragDelegateFactory;
@property(retain, nonatomic) id <GLUEImageLoader> glueImageLoader; // @synthesize glueImageLoader=_glueImageLoader;
@property(retain, nonatomic) id <SPTSortingFilteringUIFactory> sortingFilteringUIFactory; // @synthesize sortingFilteringUIFactory=_sortingFilteringUIFactory;
@property(retain, nonatomic) SPTYourLibraryMusicEmptyView *noResultEmptyView; // @synthesize noResultEmptyView=_noResultEmptyView;
@property(retain, nonatomic) SPTYourLibraryMusicEmptyView *emptyView; // @synthesize emptyView=_emptyView;
@property(retain, nonatomic) SPTYourLibraryMusicFilterBarViewController *filterBarViewController; // @synthesize filterBarViewController=_filterBarViewController;
@property(retain, nonatomic) SPTProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) SPTTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) SPTYourLibraryMusicPlaylistsCellConfigurator *cellConfigurator; // @synthesize cellConfigurator=_cellConfigurator;
@property(readonly, nonatomic) id <SPTViewLogger> viewLogger; // @synthesize viewLogger=_viewLogger;
@property(copy, nonatomic) CDUnknownBlockType styleFactoryBlock; // @synthesize styleFactoryBlock=_styleFactoryBlock;
@property(retain, nonatomic) SPTYourLibraryMusicGLUETheme *theme; // @synthesize theme=_theme;
@property(retain, nonatomic) id <SPTYourLibraryMusicPlaylistsViewModel> viewModel; // @synthesize viewModel=_viewModel;
@property(nonatomic) __weak id <SPTYourLibraryPageDelegate> pageDelegate; // @synthesize pageDelegate;
- (void).cxx_destruct;
- (void)didEndUserScrollingWithQuickScrollView:(id)arg1;
- (void)didStartUserScrollingWithQuickScrollView:(id)arg1;
- (void)didBecomeVisibleQuickScrollView:(id)arg1;
- (struct CGRect)contentRectForQuickScrollView:(id)arg1;
- (struct CGRect)scrollableRectForQuickScrollView:(id)arg1;
- (id)quickScrollView:(id)arg1 titleAtOffset:(double)arg2;
@property(readonly, nonatomic) double offscreenContentHeight;
@property(readonly, nonatomic) NSURL *URI;
@property(readonly, nonatomic, getter=spt_pageIdentifier) NSString *pageIdentifier;
@property(readonly, nonatomic, getter=spt_pageURI) NSURL *pageURI;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayFooterView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 sectionForSectionIndexTitle:(id)arg2 atIndex:(long long)arg3;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)sp_updateContentInsets;
- (void)spt_scrollToTop;
- (void)freeTierFilterSearchBar:(id)arg1 didSelectFilterRuleAtIndex:(long long)arg2;
- (void)freeTierFilterSearchBarTextWillEndEditing:(id)arg1;
- (void)freeTierFilterSearchBarTextWillBeginEditing:(id)arg1;
- (void)freeTierFilterSearchBarContextButtonTapped:(id)arg1;
- (void)freeTierFilterSearchBar:(id)arg1 textDidChange:(id)arg2;
- (void)logViewDataDidLoadIfNeeded;
- (void)handleFilterBar;
- (void)handleQuickScroll;
- (void)handleEmptyView;
- (_Bool)areSectionIndexTitlesUpdated;
- (void)updateTable;
- (void)viewModel:(id)arg1 error:(id)arg2;
- (void)viewModelDidUpdate:(id)arg1;
- (_Bool)automaticallyAdjustsScrollViewInsets;
- (void)applyThemeLayout;
- (void)setupCellConfigurator;
- (void)hideProgressViewWithError:(id)arg1;
- (void)setupConstraints;
- (void)initializeInterface;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithViewModel:(id)arg1 imageLoader:(id)arg2 theme:(id)arg3 styleFactoryBlock:(CDUnknownBlockType)arg4 viewLogger:(id)arg5 sortingFilteringUIFactory:(id)arg6 shareDragDelegateFactory:(id)arg7 quickScrollFactory:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=spt_pageContainer) id <SPTPageContainer> pageContainer;
@property(readonly) Class superclass;

@end

