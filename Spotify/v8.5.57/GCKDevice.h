//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 14 2020 10:06:36).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"
#import "NSSecureCoding-Protocol.h"

@class GCKDatabase, GCKEndpointID, GCKNetworkAddress, NSArray, NSMutableDictionary, NSMutableSet, NSString;

@interface GCKDevice : NSObject <NSCopying, NSSecureCoding>
{
    GCKDatabase *_database;
    NSMutableDictionary *_multizoneDeviceDictionary;
    NSMutableSet *_supportedApplicationIDs;
    NSMutableSet *_supportedNamespaces;
    unsigned int _flags;
    unsigned short _servicePort;
    NSString *_ipAddress;
    GCKNetworkAddress *_networkAddress;
    NSString *_friendlyName;
    NSString *_modelName;
    NSArray *_icons;
    long long _status;
    NSString *_statusText;
    NSString *_deviceVersion;
    NSString *_category;
    GCKEndpointID *_endpointID;
    NSString *_endpointDeviceID;
    NSString *_serviceInstanceName;
    NSMutableDictionary *_attributes;
    NSString *_uniqueID;
    long long _capabilities;
    NSString *_receiverMetricsID;
    NSString *_hardwareID;
    NSString *_rawDeviceID;
}

+ (_Bool)validateDeviceCategory:(id)arg1;
+ (_Bool)supportsSecureCoding;
+ (id)deviceCategoryForDeviceUniqueID:(id)arg1;
+ (id)uniqueIDWithCategory:(id)arg1 endpointDeviceID:(id)arg2;
+ (id)deviceForGuestModeWithEndpointDeviceID:(id)arg1;
@property(copy, nonatomic) NSString *rawDeviceID; // @synthesize rawDeviceID=_rawDeviceID;
@property(copy, nonatomic) NSString *hardwareID; // @synthesize hardwareID=_hardwareID;
@property(copy, nonatomic) NSString *receiverMetricsID; // @synthesize receiverMetricsID=_receiverMetricsID;
@property(nonatomic) long long capabilities; // @synthesize capabilities=_capabilities;
@property(copy, nonatomic) NSString *uniqueID; // @synthesize uniqueID=_uniqueID;
@property(retain, nonatomic) NSMutableDictionary *attributes; // @synthesize attributes=_attributes;
@property(copy, nonatomic) NSString *serviceInstanceName; // @synthesize serviceInstanceName=_serviceInstanceName;
@property(copy, nonatomic) NSString *endpointDeviceID; // @synthesize endpointDeviceID=_endpointDeviceID;
@property(copy, nonatomic) GCKEndpointID *endpointID; // @synthesize endpointID=_endpointID;
@property(copy, nonatomic) NSString *category; // @synthesize category=_category;
@property(copy, nonatomic) NSString *deviceVersion; // @synthesize deviceVersion=_deviceVersion;
@property(copy, nonatomic) NSString *statusText; // @synthesize statusText=_statusText;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(copy, nonatomic) NSArray *icons; // @synthesize icons=_icons;
@property(copy, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
@property(copy, nonatomic) NSString *friendlyName; // @synthesize friendlyName=_friendlyName;
@property(nonatomic) unsigned short servicePort; // @synthesize servicePort=_servicePort;
@property(copy, nonatomic) GCKNetworkAddress *networkAddress; // @synthesize networkAddress=_networkAddress;
@property(copy, nonatomic) NSString *ipAddress; // @synthesize ipAddress=_ipAddress;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isOnLocalNetwork;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)removeAllAttributes;
- (void)removeAttributeForKey:(id)arg1;
- (id)attributeForKey:(id)arg1;
- (void)setAttribute:(id)arg1 forKey:(id)arg2;
- (void)clearMultizoneMemberDevices;
- (void)removeMultizoneMemberDevice:(id)arg1;
- (void)addMultizoneMemberDevice:(id)arg1;
- (void)addMultizoneMemberDevices:(id)arg1;
- (void)copyFrom:(id)arg1;
- (_Bool)isCastDevice;
- (_Bool)isSameDeviceAs:(id)arg1;
- (_Bool)isSupportedNamespace:(id)arg1;
- (_Bool)isSupportedApplicationID:(id)arg1;
- (id)mutableSupportedNamespaces;
- (id)supportedNamespaces;
- (_Bool)hasSupportedNamespace:(id)arg1;
@property(readonly, nonatomic) _Bool hasSupportedNamespaces;
- (id)mutableSupportedApplicationIDs;
- (id)supportedApplicationIDs;
@property(readonly, nonatomic) _Bool hasSupportedApplicationIDs;
- (_Bool)getFlag:(unsigned int)arg1;
- (void)setFlag:(unsigned int)arg1 to:(_Bool)arg2;
@property(readonly, nonatomic) long long type;
- (_Bool)hasCapabilities:(long long)arg1;
@property(readonly, copy, nonatomic) NSArray *multizoneMemberDevices;
@property(readonly, copy, nonatomic) NSString *deviceID;
- (id)init;
- (id)initWithCategory:(id)arg1 deviceID:(id)arg2 ipAddress:(id)arg3 servicePort:(unsigned short)arg4;
- (id)initWithCategory:(id)arg1 deviceID:(id)arg2 networkAddress:(id)arg3 servicePort:(unsigned short)arg4 database:(id)arg5;
- (id)initWithCategory:(id)arg1 deviceID:(id)arg2 networkAddress:(id)arg3 servicePort:(unsigned short)arg4;

@end

