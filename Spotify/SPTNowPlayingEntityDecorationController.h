//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSHashTable, NSString, NSURL, SPTPlayerContext, SPTPlayerState, SPTUser;

@interface SPTNowPlayingEntityDecorationController : NSObject
{
    SPTPlayerState *_playerState;
    SPTPlayerContext *_stagedContext;
    unsigned long long _entityType;
    NSString *_entityName;
    NSString *_entityDescription;
    NSString *_contextName;
    NSURL *_entityClickURI;
    NSHashTable *_observers;
    id <SPRadioManager> _radioManager;
    id <NowPlayingFeature> _nowPlayingFeature;
    SPTUser *_entityUser;
    id <SPTPlaylistPlatformPlaylistDataLoader> _playlistDataLoader;
    id <SPTCollectionPlatformTestManager> _collectionTestManager;
}

@property(readonly, nonatomic) __weak id <SPTCollectionPlatformTestManager> collectionTestManager; // @synthesize collectionTestManager=_collectionTestManager;
@property(retain, nonatomic) id <SPTPlaylistPlatformPlaylistDataLoader> playlistDataLoader; // @synthesize playlistDataLoader=_playlistDataLoader;
@property(retain, nonatomic) SPTUser *entityUser; // @synthesize entityUser=_entityUser;
@property(readonly, nonatomic) __weak id <NowPlayingFeature> nowPlayingFeature; // @synthesize nowPlayingFeature=_nowPlayingFeature;
@property(readonly, nonatomic) id <SPRadioManager> radioManager; // @synthesize radioManager=_radioManager;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSURL *entityClickURI; // @synthesize entityClickURI=_entityClickURI;
@property(retain, nonatomic) NSString *contextName; // @synthesize contextName=_contextName;
@property(retain, nonatomic) NSString *entityDescription; // @synthesize entityDescription=_entityDescription;
@property(retain, nonatomic) NSString *entityName; // @synthesize entityName=_entityName;
@property(nonatomic) unsigned long long entityType; // @synthesize entityType=_entityType;
@property(retain, nonatomic) SPTPlayerContext *stagedContext; // @synthesize stagedContext=_stagedContext;
@property(retain, nonatomic) SPTPlayerState *playerState; // @synthesize playerState=_playerState;
- (void).cxx_destruct;
- (void)entityUserDisplayableNameChanged;
- (void)updateEntityInformationWithPlayerContext:(id)arg1;
- (void)updateEntityInformationWithPlayerState:(id)arg1 contextNameAndDescription:(id)arg2;
- (void)updateEntityInformationWithPlayerState:(id)arg1;
- (id)entityNameAndDescriptionFromPlayerState:(id)arg1 name:(id)arg2 description:(id)arg3;
- (id)clickURIFromPlayerstate:(id)arg1;
- (void)fetchPlaylistNameForURL:(id)arg1 isPlaylistFolder:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)nameAndDescriptionForPlaylistURL:(id)arg1 isPlaylistFolder:(_Bool)arg2 description:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)contextNameAndDescriptionFromPlayerState:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSURL *contextURI;
@property(readonly, nonatomic) NSURL *viewURI;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)initWithRadioManager:(id)arg1 nowPlayingFeature:(id)arg2 playlistDataLoader:(id)arg3 collectionTestManager:(id)arg4;

@end

