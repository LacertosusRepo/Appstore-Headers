//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NowPlayingFeature.h"
#import "SPTQueueViewControllerDelegate.h"
#import "SPTService.h"
#import "SpotifyApplicationRemoteControlDelegate.h"

@class NSString, SPTAllocationContext, SPTNowPlayingAuxiliaryActionsHandler, SPTNowPlayingContentProviderRegistriesImplementation, SPTNowPlayingContextMenuHeaderFactory, SPTNowPlayingDeviceOrientationManager, SPTNowPlayingLogger, SPTNowPlayingManagerImplementation, SPTNowPlayingModeResolver, SPTNowPlayingModel, SPTNowPlayingNavigationBarModel, SPTNowPlayingPlaybackActionsHandler, SPTNowPlayingRemoteControlEventControllerManager, SPTNowPlayingRemoteControlEventDefaultController, SPTNowPlayingRemoteControlPolicyResolver, SPTNowPlayingStateProxy, SPTNowPlayingTestManager, SPTNowPlayingToggleViewController, SPTNowPlayingTrackMetadataQueue, SPTNowPlayingVideoManagerImplementation, SPTStatefulPlayer, UIViewController;

@interface NowPlayingFeatureImplementation : NSObject <SpotifyApplicationRemoteControlDelegate, SPTQueueViewControllerDelegate, SPTService, NowPlayingFeature>
{
    SPTNowPlayingRemoteControlEventControllerManager *_remoteControlEventControllerManager;
    id <SPTSessionService> _clientSessionService;
    id <SPTContainerService> _containerService;
    id <SPTCoreService> _coreService;
    id <SPTNetworkService> _networkFeature;
    id <SPContextMenuFeature> _contextMenu;
    id <SPTSettingsFeature> _settings;
    id <GaiaFeature> _gaia;
    id <RadioFeature> _radio;
    id <SPTDailyMixFeature> _dailyMix;
    id <UpsellFeature> _upsell;
    id <CollectionFeature> _collection;
    id <SPTCollectionPlatformService> _collectionPlatformService;
    id <SPTPlayerFeature> _playerFeature;
    id <SPTQueueService> _queueService;
    id <SPTAdsService> _adsService;
    id <SPTVideoFeature> _videoFeature;
    id <SPTPodcastFeature> _podcastFeature;
    id <SPTShowsFormatService> _showsFormatService;
    id <SPTAbbaService> _abbaService;
    id <SPTMediaPlayerService> _mediaPlayerService;
    id <SPTFormatListPlatformService> _formatListPlatformService;
    id <SPTContainerUIService> _containerUIService;
    id <SPTPlaylistPlatformService> _playlistPlatformService;
    id <SPTURIDispatchService> _URIDispatchService;
    id <SPTShareFeature> _shareFeature;
    id <SPTPersonalisedSetsService> _personalisedSetsService;
    id <PlaylistFeature> _playlistFeature;
    id <SPTFreeTierService> _freeTierService;
    id <SPTFeedbackService> _feedbackService;
    id <SPTUIPresentationService> _presentationService;
    id <SPTKaraokeService> _karaokeService;
    id <SPTOnDemandService> _onDemandService;
    id <SPTHeartsService> _heartsService;
    id <SPTSleepTimerService> _sleepTimerService;
    SPTNowPlayingToggleViewController *_nowPlayingToggleVC;
    UIViewController *_nowPlayingViewController;
    UIViewController *_nowPlayingBarViewController;
    id <SPTQueueInteractor> _queueInteractor;
    id <SPTNowPlayingRemoteControlPolicyRegistry> _remoteControlPolicyRegistry;
    id <SPTNowPlayingModesRegistry> _modesRegistry;
    id <SPTNowPlayingInfoCenterManagerProtocol> _nowPlayingInfoCenterManager;
    id <SPTPlayer> _player;
    SPTNowPlayingDeviceOrientationManager *_deviceOrientationManager;
    SPTNowPlayingManagerImplementation *_nowPlayingManager;
    SPTNowPlayingVideoManagerImplementation *_videoManager;
    SPTNowPlayingRemoteControlEventDefaultController *_remoteControlEventController;
    SPTNowPlayingModel *_nowPlayingModel;
    SPTNowPlayingModeResolver *_modeResolver;
    SPTNowPlayingRemoteControlPolicyResolver *_remoteControlPolicyResolver;
    SPTNowPlayingNavigationBarModel *_navigationBarModel;
    id <SPTNowPlayingShowsFormatOverriderRegistry> _showsFormatOverriderRegistry;
    SPTNowPlayingContentProviderRegistriesImplementation *_contentProviderRegistries;
    SPTNowPlayingTestManager *_testManager;
    SPTStatefulPlayer *_statefulPlayer;
    SPTNowPlayingTrackMetadataQueue *_trackMetadataQueue;
    SPTNowPlayingLogger *_nowPlayingLogger;
    id <SPTQueueLogger> _queueLogger;
    SPTNowPlayingStateProxy *_nowPlayingStateProxy;
    id <SPTNowPlayingFeedbackObservable> _nowPlayingFeedbackObservable;
    SPTNowPlayingPlaybackActionsHandler *_playbackActionsHandler;
    SPTNowPlayingAuxiliaryActionsHandler *_auxiliaryActionsHandler;
    SPTNowPlayingContextMenuHeaderFactory *_contextMenuHeaderFactory;
}

+ (id)serviceIdentifier;
@property(retain, nonatomic) SPTNowPlayingContextMenuHeaderFactory *contextMenuHeaderFactory; // @synthesize contextMenuHeaderFactory=_contextMenuHeaderFactory;
@property(retain, nonatomic) SPTNowPlayingAuxiliaryActionsHandler *auxiliaryActionsHandler; // @synthesize auxiliaryActionsHandler=_auxiliaryActionsHandler;
@property(retain, nonatomic) SPTNowPlayingPlaybackActionsHandler *playbackActionsHandler; // @synthesize playbackActionsHandler=_playbackActionsHandler;
@property(retain, nonatomic) id <SPTNowPlayingFeedbackObservable> nowPlayingFeedbackObservable; // @synthesize nowPlayingFeedbackObservable=_nowPlayingFeedbackObservable;
@property(retain, nonatomic) SPTNowPlayingStateProxy *nowPlayingStateProxy; // @synthesize nowPlayingStateProxy=_nowPlayingStateProxy;
@property(readonly, nonatomic) id <SPTQueueLogger> queueLogger; // @synthesize queueLogger=_queueLogger;
@property(retain, nonatomic) SPTNowPlayingLogger *nowPlayingLogger; // @synthesize nowPlayingLogger=_nowPlayingLogger;
@property(retain, nonatomic) SPTNowPlayingTrackMetadataQueue *trackMetadataQueue; // @synthesize trackMetadataQueue=_trackMetadataQueue;
@property(retain, nonatomic) SPTStatefulPlayer *statefulPlayer; // @synthesize statefulPlayer=_statefulPlayer;
@property(retain, nonatomic) SPTNowPlayingTestManager *testManager; // @synthesize testManager=_testManager;
@property(retain, nonatomic) SPTNowPlayingContentProviderRegistriesImplementation *contentProviderRegistries; // @synthesize contentProviderRegistries=_contentProviderRegistries;
@property(retain, nonatomic) id <SPTNowPlayingShowsFormatOverriderRegistry> showsFormatOverriderRegistry; // @synthesize showsFormatOverriderRegistry=_showsFormatOverriderRegistry;
@property(retain, nonatomic) SPTNowPlayingNavigationBarModel *navigationBarModel; // @synthesize navigationBarModel=_navigationBarModel;
@property(retain, nonatomic) SPTNowPlayingRemoteControlPolicyResolver *remoteControlPolicyResolver; // @synthesize remoteControlPolicyResolver=_remoteControlPolicyResolver;
@property(retain, nonatomic) SPTNowPlayingModeResolver *modeResolver; // @synthesize modeResolver=_modeResolver;
@property(retain, nonatomic) SPTNowPlayingModel *nowPlayingModel; // @synthesize nowPlayingModel=_nowPlayingModel;
@property(retain, nonatomic) SPTNowPlayingRemoteControlEventDefaultController *remoteControlEventController; // @synthesize remoteControlEventController=_remoteControlEventController;
@property(retain, nonatomic) SPTNowPlayingVideoManagerImplementation *videoManager; // @synthesize videoManager=_videoManager;
@property(retain, nonatomic) SPTNowPlayingManagerImplementation *nowPlayingManager; // @synthesize nowPlayingManager=_nowPlayingManager;
@property(retain, nonatomic) SPTNowPlayingDeviceOrientationManager *deviceOrientationManager; // @synthesize deviceOrientationManager=_deviceOrientationManager;
@property(retain, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(retain, nonatomic) id <SPTNowPlayingInfoCenterManagerProtocol> nowPlayingInfoCenterManager; // @synthesize nowPlayingInfoCenterManager=_nowPlayingInfoCenterManager;
@property(retain, nonatomic) id <SPTNowPlayingModesRegistry> modesRegistry; // @synthesize modesRegistry=_modesRegistry;
@property(retain, nonatomic) id <SPTNowPlayingRemoteControlPolicyRegistry> remoteControlPolicyRegistry; // @synthesize remoteControlPolicyRegistry=_remoteControlPolicyRegistry;
@property(retain, nonatomic) id <SPTQueueInteractor> queueInteractor; // @synthesize queueInteractor=_queueInteractor;
@property(retain, nonatomic) UIViewController *nowPlayingBarViewController; // @synthesize nowPlayingBarViewController=_nowPlayingBarViewController;
@property(retain, nonatomic) UIViewController *nowPlayingViewController; // @synthesize nowPlayingViewController=_nowPlayingViewController;
@property(retain, nonatomic) SPTNowPlayingToggleViewController *nowPlayingToggleVC; // @synthesize nowPlayingToggleVC=_nowPlayingToggleVC;
@property(nonatomic) __weak id <SPTSleepTimerService> sleepTimerService; // @synthesize sleepTimerService=_sleepTimerService;
@property(nonatomic) __weak id <SPTHeartsService> heartsService; // @synthesize heartsService=_heartsService;
@property(nonatomic) __weak id <SPTOnDemandService> onDemandService; // @synthesize onDemandService=_onDemandService;
@property(nonatomic) __weak id <SPTKaraokeService> karaokeService; // @synthesize karaokeService=_karaokeService;
@property(nonatomic) __weak id <SPTUIPresentationService> presentationService; // @synthesize presentationService=_presentationService;
@property(nonatomic) __weak id <SPTFeedbackService> feedbackService; // @synthesize feedbackService=_feedbackService;
@property(nonatomic) __weak id <SPTFreeTierService> freeTierService; // @synthesize freeTierService=_freeTierService;
@property(nonatomic) __weak id <PlaylistFeature> playlistFeature; // @synthesize playlistFeature=_playlistFeature;
@property(nonatomic) __weak id <SPTPersonalisedSetsService> personalisedSetsService; // @synthesize personalisedSetsService=_personalisedSetsService;
@property(nonatomic) __weak id <SPTShareFeature> shareFeature; // @synthesize shareFeature=_shareFeature;
@property(nonatomic) __weak id <SPTURIDispatchService> URIDispatchService; // @synthesize URIDispatchService=_URIDispatchService;
@property(nonatomic) __weak id <SPTPlaylistPlatformService> playlistPlatformService; // @synthesize playlistPlatformService=_playlistPlatformService;
@property(nonatomic) __weak id <SPTContainerUIService> containerUIService; // @synthesize containerUIService=_containerUIService;
@property(nonatomic) __weak id <SPTFormatListPlatformService> formatListPlatformService; // @synthesize formatListPlatformService=_formatListPlatformService;
@property(nonatomic) __weak id <SPTMediaPlayerService> mediaPlayerService; // @synthesize mediaPlayerService=_mediaPlayerService;
@property(nonatomic) __weak id <SPTAbbaService> abbaService; // @synthesize abbaService=_abbaService;
@property(nonatomic) __weak id <SPTShowsFormatService> showsFormatService; // @synthesize showsFormatService=_showsFormatService;
@property(nonatomic) __weak id <SPTPodcastFeature> podcastFeature; // @synthesize podcastFeature=_podcastFeature;
@property(nonatomic) __weak id <SPTVideoFeature> videoFeature; // @synthesize videoFeature=_videoFeature;
@property(nonatomic) __weak id <SPTAdsService> adsService; // @synthesize adsService=_adsService;
@property(nonatomic) __weak id <SPTQueueService> queueService; // @synthesize queueService=_queueService;
@property(nonatomic) __weak id <SPTPlayerFeature> playerFeature; // @synthesize playerFeature=_playerFeature;
@property(nonatomic) __weak id <SPTCollectionPlatformService> collectionPlatformService; // @synthesize collectionPlatformService=_collectionPlatformService;
@property(nonatomic) __weak id <CollectionFeature> collection; // @synthesize collection=_collection;
@property(nonatomic) __weak id <UpsellFeature> upsell; // @synthesize upsell=_upsell;
@property(nonatomic) __weak id <SPTDailyMixFeature> dailyMix; // @synthesize dailyMix=_dailyMix;
@property(nonatomic) __weak id <RadioFeature> radio; // @synthesize radio=_radio;
@property(nonatomic) __weak id <GaiaFeature> gaia; // @synthesize gaia=_gaia;
@property(nonatomic) __weak id <SPTSettingsFeature> settings; // @synthesize settings=_settings;
@property(nonatomic) __weak id <SPContextMenuFeature> contextMenu; // @synthesize contextMenu=_contextMenu;
@property(nonatomic) __weak id <SPTNetworkService> networkFeature; // @synthesize networkFeature=_networkFeature;
@property(nonatomic) __weak id <SPTCoreService> coreService; // @synthesize coreService=_coreService;
@property(nonatomic) __weak id <SPTContainerService> containerService; // @synthesize containerService=_containerService;
@property(nonatomic) __weak id <SPTSessionService> clientSessionService; // @synthesize clientSessionService=_clientSessionService;
- (void).cxx_destruct;
- (void)registerArtworkDecorators;
- (void)registerContextMenuActions;
- (id)provideTestManager;
- (void)queue:(struct UIViewController *)arg1 didTapNowPlayingTrack:(id)arg2;
- (_Bool)spotifyApplication:(id)arg1 handleRemoteControlEventOfSubtype:(long long)arg2;
@property(readonly, nonatomic) SPTNowPlayingRemoteControlEventControllerManager *remoteControlEventControllerManager; // @synthesize remoteControlEventControllerManager=_remoteControlEventControllerManager;
- (id)provideModesRegistry;
- (void)registerDefaultModes;
- (id)provideNowPlayingFeedbackObservable;
- (id)provideInfoCenterManager;
- (id)provideContentProviderRegistries;
- (id)provideRemoteControlEventDefaultController;
- (id)provideShowsFormatOverriderRegistry;
- (id)provideRemoteControlPolicyRegistry;
- (id)provideRemoteControlEventControllerRegistry;
- (id)provideQueueLogger;
- (id)provideQueueInteractor;
- (id)provideVideoManager;
- (id)provideNowPlayingStateObservable;
- (id)provideNowPlayingContainerIdleMonitorObservable;
- (id)provideNowPlayingManager;
- (id)provideDeviceOrientationManager;
- (void)loadRemoteControlPolicyResolver;
- (id)createNowPlayingBarModel;
- (id)createNowPlayingModel;
- (id)provideNowPlayingBarViewController:(id)arg1;
- (id)createNowPlayingViewController:(id)arg1;
- (id)makeHeadUnitViewProvider;
- (id)provideNavigationBarModel;
- (id)provideNowPlayingViewController:(id)arg1;
- (void)unload;
- (id)provideOpenGLEasterEggSettingsSection:(id)arg1;
- (id)provideFeedbackSoundsSettingsSection:(id)arg1;
- (id)provideHideAlbumArtworkSettingsSection:(id)arg1;
- (void)load;
- (void)configureWithServices:(id)arg1;

// Remaining properties
@property(retain, nonatomic) SPTAllocationContext *allocationContext;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

