//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "TKNCurve-Protocol.h"

@class NSString;

@interface TKNCubicBezierCurve : NSObject <TKNCurve>
{
    double _ax;
    double _bx;
    double _cx;
    double _ay;
    double _by;
    double _cy;
    struct CGPoint _startHandle;
    struct CGPoint _endHandle;
}

@property(nonatomic) double cy; // @synthesize cy=_cy;
@property(nonatomic) double by; // @synthesize by=_by;
@property(nonatomic) double ay; // @synthesize ay=_ay;
@property(nonatomic) double cx; // @synthesize cx=_cx;
@property(nonatomic) double bx; // @synthesize bx=_bx;
@property(nonatomic) double ax; // @synthesize ax=_ax;
@property(nonatomic) struct CGPoint endHandle; // @synthesize endHandle=_endHandle;
@property(nonatomic) struct CGPoint startHandle; // @synthesize startHandle=_startHandle;
- (struct BezierPointDefinition)scale:(struct BezierPointDefinition)arg1 by:(struct CGPoint)arg2;
- (struct BezierPointDefinition)translate:(struct BezierPointDefinition)arg1 by:(struct CGPoint)arg2;
- (struct BezierPointDefinition)positionAndHandleAt:(double)arg1;
- (struct CGPoint)lerpFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 progress:(double)arg3;
- (id)subCurveFromStartT:(double)arg1 endT:(double)arg2;
- (double)solveCurveX:(double)arg1 epsilon:(double)arg2;
- (double)sampleCurveDerivativeX:(double)arg1;
- (double)sampleCurveY:(double)arg1;
- (double)sampleCurveX:(double)arg1;
- (void)calculatePolynomialCoefficients;
- (double)epsilon;
- (double)solveCurveX:(double)arg1;
- (double)yForGivenX:(double)arg1;
- (id)initWithStartHandle:(struct CGPoint)arg1 endHandle:(struct CGPoint)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

