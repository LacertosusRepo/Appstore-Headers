//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTVideoApplicationStateObserver-Protocol.h"
#import "SPTVideoPlaybackSessionDelegate-Protocol.h"
#import "SPTVideoPlayer-Protocol.h"
#import "SPTVideoSurfaceManagerDataSource-Protocol.h"

@class NSMutableOrderedSet, NSString, SPTVideoApplicationStateObservable, SPTVideoObserverManager, SPTVideoPlaybackIdentityFactory, SPTVideoPlaybackSession, SPTVideoPlaybackSessionFactory, SPTVideoPlayerSource, UIView;
@protocol SPTVideoSubtitle, SPTVideoSurface, SPTVideoSurfaceManager;

@interface SPTVideoPlayerImpl : NSObject <SPTVideoPlaybackSessionDelegate, SPTVideoSurfaceManagerDataSource, SPTVideoApplicationStateObserver, SPTVideoPlayer>
{
    _Bool _audioDisabled;
    _Bool _shouldResumeOnActive;
    _Bool _allowRoyaltyVideos;
    _Bool _allowMultipleSurfaces;
    float _playbackSpeed;
    UIView<SPTVideoSurface> *_surfaceView;
    id <SPTVideoSubtitle> _preferredSubtitle;
    SPTVideoPlaybackSessionFactory *_sessionFactory;
    id <SPTVideoSurfaceManager> _surfaceManager;
    SPTVideoPlaybackIdentityFactory *_playbackIdentityFactory;
    SPTVideoPlaybackSession *_currentSession;
    SPTVideoPlayerSource *_playerSource;
    NSMutableOrderedSet *_observerFactories;
    SPTVideoObserverManager *_playbackEventObserverManager;
    SPTVideoApplicationStateObservable *_applicationStateObservable;
}

@property(nonatomic) _Bool allowMultipleSurfaces; // @synthesize allowMultipleSurfaces=_allowMultipleSurfaces;
@property(nonatomic) _Bool allowRoyaltyVideos; // @synthesize allowRoyaltyVideos=_allowRoyaltyVideos;
@property(nonatomic) _Bool shouldResumeOnActive; // @synthesize shouldResumeOnActive=_shouldResumeOnActive;
@property(retain, nonatomic) SPTVideoApplicationStateObservable *applicationStateObservable; // @synthesize applicationStateObservable=_applicationStateObservable;
@property(retain, nonatomic) SPTVideoObserverManager *playbackEventObserverManager; // @synthesize playbackEventObserverManager=_playbackEventObserverManager;
@property(retain, nonatomic) NSMutableOrderedSet *observerFactories; // @synthesize observerFactories=_observerFactories;
@property(retain, nonatomic) SPTVideoPlayerSource *playerSource; // @synthesize playerSource=_playerSource;
@property(retain, nonatomic) SPTVideoPlaybackSession *currentSession; // @synthesize currentSession=_currentSession;
@property(retain, nonatomic) SPTVideoPlaybackIdentityFactory *playbackIdentityFactory; // @synthesize playbackIdentityFactory=_playbackIdentityFactory;
@property(retain, nonatomic) id <SPTVideoSurfaceManager> surfaceManager; // @synthesize surfaceManager=_surfaceManager;
@property(retain, nonatomic) SPTVideoPlaybackSessionFactory *sessionFactory; // @synthesize sessionFactory=_sessionFactory;
@property(nonatomic) float playbackSpeed; // @synthesize playbackSpeed=_playbackSpeed;
@property(nonatomic, getter=isAudioDisabled) _Bool audioDisabled; // @synthesize audioDisabled=_audioDisabled;
- (void).cxx_destruct;
- (void)didBecomeActive;
- (void)willResignActive;
- (void)didChangeBackgroundState:(_Bool)arg1;
- (void)didChangeActiveState:(_Bool)arg1;
- (id)availableSubtitles;
- (id)selectedSubtitle;
@property(retain, nonatomic) id <SPTVideoSubtitle> preferredSubtitle; // @synthesize preferredSubtitle=_preferredSubtitle;
- (void)removePlaybackEventObserver:(id)arg1;
- (void)addPlaybackEventObserver:(id)arg1;
- (void)videoPlaybackSession:(id)arg1 didEncounterUnrecoverableError:(id)arg2;
- (void)videoPlaybackSessionDidFinish:(id)arg1;
- (void)videoPlaybackSession:(id)arg1 didChangeDuration:(double)arg2;
- (void)videoPlaybackSession:(id)arg1 didPlayToTime:(CDStruct_1b6d18a9)arg2;
- (void)videoPlaybackSessionDidStart:(id)arg1;
- (void)surfaceWillHaveNoPlayer;
- (void)renderingSurfaceDidChange:(id)arg1;
- (double)currentPlayingVideoAspectRatioForSurfaceManager:(id)arg1;
- (id)currentlyPlayingIdentityForSurfaceManager:(id)arg1;
- (void)registerPlaybackEventObserverFactoryBlock:(CDUnknownBlockType)arg1;
- (void)registerPlaybackEventObserverFactory:(id)arg1;
- (void)stopWithReason:(id)arg1 nextIdentity:(id)arg2;
- (void)loadSessionWithIdentity:(id)arg1 options:(id)arg2;
@property(readonly, nonatomic) UIView<SPTVideoSurface> *surfaceView; // @synthesize surfaceView=_surfaceView;
- (id)provideSurfaceManager;
- (id)subtitleFactory;
- (id)providePlaybackRequestFactory;
- (id)providePlayerSource;
- (void)stopWithReason:(id)arg1;
- (void)stop;
@property(nonatomic) _Bool repeat;
- (void)seekTo:(double)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) double currentPosition;
@property(nonatomic, getter=isPaused) _Bool paused;
- (void)resume;
- (void)pause;
- (void)playWithRequest:(id)arg1 options:(id)arg2;
- (void)playWithRequest:(id)arg1;
- (void)dealloc;
- (id)initWithPlaybackSessionFactory:(id)arg1 playerSource:(id)arg2 surfaceManager:(id)arg3 playbackIdentityFactory:(id)arg4 applicationStateObservable:(id)arg5 allowRoyaltyVideos:(_Bool)arg6 allowMultipleSurfaces:(_Bool)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

