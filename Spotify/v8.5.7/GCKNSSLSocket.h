//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "GCKNTCPSocket.h"

@class GCKBCircularByteBuffer, NSArray;

@interface GCKNSSLSocket : GCKNTCPSocket
{
    struct SSLContext *_SSLContext;
    NSArray *_certificates;
    GCKBCircularByteBuffer *_unencryptedReadBuffer;
    GCKBCircularByteBuffer *_unencryptedWriteBuffer;
    CDUnknownBlockType _sslReadBlock;
    CDUnknownBlockType _sslWriteBlock;
    CDUnknownBlockType _copyReadBlock;
    CDUnknownBlockType _copyWriteBlock;
    _Bool _serverSide;
    _Bool _handshaking;
    _Bool _inSSLHandshakeCall;
    _Bool _customCertVerification;
}

@property(nonatomic) _Bool customCertVerification; // @synthesize customCertVerification=_customCertVerification;
- (void).cxx_destruct;
- (int)writeSSLData:(const void *)arg1 length:(unsigned long long *)arg2;
- (int)readSSLData:(void *)arg1 length:(unsigned long long *)arg2;
- (void)finishSSL;
- (_Bool)continueHandshakeWithError:(id *)arg1;
- (_Bool)startSSLWithError:(id *)arg1;
- (void)performCrypto;
- (void)closeWithError:(id)arg1;
- (void)onDisconnectedWithError:(id)arg1;
- (void)onWritable;
- (void)onReadable;
- (void)onConnected;
- (_Bool)hasUnreadData;
- (_Bool)hasUnwrittenData;
- (unsigned long long)spaceAvailableToWrite;
- (unsigned long long)bytesAvailableToRead;
- (long long)superReceiveBytes:(char *)arg1 length:(unsigned long long)arg2 partialOK:(_Bool)arg3;
- (long long)receiveBytes:(char *)arg1 length:(unsigned long long)arg2 partialOK:(_Bool)arg3;
- (long long)superSendBytes:(const char *)arg1 length:(unsigned long long)arg2 partialOK:(_Bool)arg3;
- (long long)sendBytes:(const char *)arg1 length:(unsigned long long)arg2 partialOK:(_Bool)arg3;
- (_Bool)verifyCertificate:(id)arg1 error:(id *)arg2;
- (void)sslPrivateInitWithBufferSize:(unsigned long long)arg1;
- (id)init;
- (id)initWithNativeHandle:(int)arg1 certificates:(id)arg2 serverSide:(_Bool)arg3 bufferSize:(unsigned long long)arg4;
- (id)initWithAddressType:(long long)arg1;
- (id)initWithAddressType:(long long)arg1 localPort:(unsigned short)arg2 certificates:(id)arg3 bufferSize:(unsigned long long)arg4;

@end

