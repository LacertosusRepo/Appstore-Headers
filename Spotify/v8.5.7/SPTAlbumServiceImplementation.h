//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTAlbumService-Protocol.h"

@class NSString, SPTAlbumPlaybackStateRestorer, SPTAlbumTestManager, SPTAllocationContext, SPTCollectionLoggerImplementation, SPTTrackContextAwareURITypeManager;
@protocol CollectionFeature, SPContextMenuFeature, SPTCollectionPlatformService, SPTContainerService, SPTContextDispatchService, SPTContributingArtistsService, SPTCoreService, SPTExplicitContentService, SPTFeatureFlagSignal, SPTFeatureFlaggingService, SPTFreeTierService, SPTGLUEService, SPTNavigationFeature, SPTNetworkService, SPTPageRegistrationToken, SPTPerformanceMetricsService, SPTPlayerFeature, SPTSessionService, SPTSettingsFeature, SPTShareFeature, SPTShelfService, SPTSpotlightService, SPTUIPresentationService;

@interface SPTAlbumServiceImplementation : NSObject <SPTAlbumService>
{
    id <SPTNavigationFeature> _navigationService;
    id <SPTSessionService> _clientSessionService;
    id <SPTContainerService> _containerService;
    id <SPTCoreService> _coreService;
    id <SPTNetworkService> _networkFeature;
    id <SPContextMenuFeature> _contextMenu;
    id <CollectionFeature> _collection;
    id <SPTCollectionPlatformService> _collectionPlatformService;
    id <SPTPlayerFeature> _player;
    id <SPTSettingsFeature> _settingsFeature;
    id <SPTSpotlightService> _spotlightService;
    id <SPTContextDispatchService> _contextDispatchService;
    id <SPTContributingArtistsService> _contributingArtistsService;
    id <SPTUIPresentationService> _presentationService;
    id <SPTGLUEService> _glueService;
    id <SPTShareFeature> _shareFeature;
    id <SPTShelfService> _shelfService;
    id <SPTExplicitContentService> _explicitContentService;
    id <SPTPerformanceMetricsService> _performanceMetricsService;
    id <SPTFreeTierService> _freeTierService;
    id <SPTFeatureFlaggingService> _featureFlaggingService;
    SPTAlbumPlaybackStateRestorer *_playbackStateRestorer;
    SPTCollectionLoggerImplementation *_logger;
    SPTTrackContextAwareURITypeManager *_trackURITypeManager;
    SPTAlbumTestManager *_albumTestManager;
    id <SPTFeatureFlagSignal> _legacyAlbumFeatureEnabledSignal;
    id <SPTPageRegistrationToken> _legacyAlbumPageRegistrationToken;
}

+ (id)serviceIdentifier;
@property(retain, nonatomic) id <SPTPageRegistrationToken> legacyAlbumPageRegistrationToken; // @synthesize legacyAlbumPageRegistrationToken=_legacyAlbumPageRegistrationToken;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> legacyAlbumFeatureEnabledSignal; // @synthesize legacyAlbumFeatureEnabledSignal=_legacyAlbumFeatureEnabledSignal;
@property(retain, nonatomic) SPTAlbumTestManager *albumTestManager; // @synthesize albumTestManager=_albumTestManager;
@property(retain, nonatomic) SPTTrackContextAwareURITypeManager *trackURITypeManager; // @synthesize trackURITypeManager=_trackURITypeManager;
@property(retain, nonatomic) SPTCollectionLoggerImplementation *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SPTAlbumPlaybackStateRestorer *playbackStateRestorer; // @synthesize playbackStateRestorer=_playbackStateRestorer;
@property(nonatomic) __weak id <SPTFeatureFlaggingService> featureFlaggingService; // @synthesize featureFlaggingService=_featureFlaggingService;
@property(nonatomic) __weak id <SPTFreeTierService> freeTierService; // @synthesize freeTierService=_freeTierService;
@property(nonatomic) __weak id <SPTPerformanceMetricsService> performanceMetricsService; // @synthesize performanceMetricsService=_performanceMetricsService;
@property(nonatomic) __weak id <SPTExplicitContentService> explicitContentService; // @synthesize explicitContentService=_explicitContentService;
@property(nonatomic) __weak id <SPTShelfService> shelfService; // @synthesize shelfService=_shelfService;
@property(nonatomic) __weak id <SPTShareFeature> shareFeature; // @synthesize shareFeature=_shareFeature;
@property(nonatomic) __weak id <SPTGLUEService> glueService; // @synthesize glueService=_glueService;
@property(nonatomic) __weak id <SPTUIPresentationService> presentationService; // @synthesize presentationService=_presentationService;
@property(nonatomic) __weak id <SPTContributingArtistsService> contributingArtistsService; // @synthesize contributingArtistsService=_contributingArtistsService;
@property(nonatomic) __weak id <SPTContextDispatchService> contextDispatchService; // @synthesize contextDispatchService=_contextDispatchService;
@property(nonatomic) __weak id <SPTSpotlightService> spotlightService; // @synthesize spotlightService=_spotlightService;
@property(nonatomic) __weak id <SPTSettingsFeature> settingsFeature; // @synthesize settingsFeature=_settingsFeature;
@property(nonatomic) __weak id <SPTPlayerFeature> player; // @synthesize player=_player;
@property(nonatomic) __weak id <SPTCollectionPlatformService> collectionPlatformService; // @synthesize collectionPlatformService=_collectionPlatformService;
@property(nonatomic) __weak id <CollectionFeature> collection; // @synthesize collection=_collection;
@property(nonatomic) __weak id <SPContextMenuFeature> contextMenu; // @synthesize contextMenu=_contextMenu;
@property(nonatomic) __weak id <SPTNetworkService> networkFeature; // @synthesize networkFeature=_networkFeature;
@property(nonatomic) __weak id <SPTCoreService> coreService; // @synthesize coreService=_coreService;
@property(nonatomic) __weak id <SPTContainerService> containerService; // @synthesize containerService=_containerService;
@property(nonatomic) __weak id <SPTSessionService> clientSessionService; // @synthesize clientSessionService=_clientSessionService;
@property(nonatomic) __weak id <SPTNavigationFeature> navigationService; // @synthesize navigationService=_navigationService;
- (void).cxx_destruct;
- (void)featureFlagSignal:(id)arg1 hasAssumedState:(long long)arg2;
- (void)unregisterAlbumService;
- (void)registerAlbumService;
- (id)provideAlbumTestManager;
- (id)provideLogger;
- (id)provideAlbumLogger;
- (id)createViewLogger:(id)arg1;
- (id)provideAlbumPage:(id)arg1 context:(id)arg2;
- (id)provideLegacyAlbumFeatureEnabledSignal;
- (void)unload;
- (void)load;
- (void)configureWithServices:(id)arg1;

// Remaining properties
@property(retain, nonatomic) SPTAllocationContext *allocationContext;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

