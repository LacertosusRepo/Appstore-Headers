//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "BMWRemotingSessionDelegate-Protocol.h"
#import "EOCSessionDataSource-Protocol.h"
#import "IDA4APacketReader-Protocol.h"
#import "IDMessagingServiceSubscriber-Protocol.h"

@class BMWRemotingSession, IDA4AProxyInfo, IDAppManifest, IDApplicationManagementService, IDAudioService, IDBackgroundTask, IDCdsService, IDHmiService, IDMapService, IDPiaService, IDSpeechDialogService, IDTranslations, IDTtsService, IDVehicleInfo, IDVoiceRecorderService, IDWidgetHmiService, NSLock, NSOperationQueue, NSString, NSUndoManager;
@protocol IDApplicationDataSource, IDApplicationDelegate, IDHmiProvider;

@interface IDApplication : NSObject <EOCSessionDataSource, BMWRemotingSessionDelegate, IDA4APacketReader, IDMessagingServiceSubscriber>
{
    _Bool _connected;
    IDHmiService *_hmiService;
    IDCdsService *_cdsService;
    IDAudioService *_audioService;
    IDVoiceRecorderService *_voiceRecorderService;
    IDMapService *_mapService;
    IDTtsService *_ttsService;
    IDSpeechDialogService *_speechDialogService;
    id <IDApplicationDelegate> _delegate;
    id <IDApplicationDataSource> _dataSource;
    id <IDHmiProvider> _hmiProvider;
    IDVehicleInfo *_vehicleInfo;
    IDTranslations *_hmiTextTranslations;
    NSLock *_stateLock;
    IDBackgroundTask *_backgroundTask;
    IDA4AProxyInfo *_proxyInfo;
    NSUndoManager *_undoManager;
    unsigned long long _connectionId;
    IDPiaService *_piaService;
    IDApplicationManagementService *_applicationManagementService;
    IDAppManifest *_manifest;
    NSOperationQueue *_appQueue;
    BMWRemotingSession *_etchSession;
    IDWidgetHmiService *_widgetHmiService;
    NSOperationQueue *_delegateQueue;
    long long _rhmiVersion;
}

+ (void)initialize;
@property long long rhmiVersion; // @synthesize rhmiVersion=_rhmiVersion;
@property(retain) NSOperationQueue *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(retain) IDWidgetHmiService *widgetHmiService; // @synthesize widgetHmiService=_widgetHmiService;
@property(retain) BMWRemotingSession *etchSession; // @synthesize etchSession=_etchSession;
@property(readonly) NSOperationQueue *appQueue; // @synthesize appQueue=_appQueue;
@property(readonly) IDAppManifest *manifest; // @synthesize manifest=_manifest;
@property(retain) IDApplicationManagementService *applicationManagementService; // @synthesize applicationManagementService=_applicationManagementService;
@property(retain) IDPiaService *piaService; // @synthesize piaService=_piaService;
@property unsigned long long connectionId; // @synthesize connectionId=_connectionId;
@property(retain) NSUndoManager *undoManager; // @synthesize undoManager=_undoManager;
@property(retain) IDA4AProxyInfo *proxyInfo; // @synthesize proxyInfo=_proxyInfo;
@property(retain) IDBackgroundTask *backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(retain) NSLock *stateLock; // @synthesize stateLock=_stateLock;
@property(retain) IDTranslations *hmiTextTranslations; // @synthesize hmiTextTranslations=_hmiTextTranslations;
@property(retain) IDVehicleInfo *vehicleInfo; // @synthesize vehicleInfo=_vehicleInfo;
@property(readonly) id <IDHmiProvider> hmiProvider; // @synthesize hmiProvider=_hmiProvider;
@property(nonatomic) __weak id <IDApplicationDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <IDApplicationDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) IDSpeechDialogService *speechDialogService; // @synthesize speechDialogService=_speechDialogService;
@property(retain) IDTtsService *ttsService; // @synthesize ttsService=_ttsService;
@property(retain) IDMapService *mapService; // @synthesize mapService=_mapService;
@property(retain) IDVoiceRecorderService *voiceRecorderService; // @synthesize voiceRecorderService=_voiceRecorderService;
@property(retain) IDAudioService *audioService; // @synthesize audioService=_audioService;
@property(retain) IDCdsService *cdsService; // @synthesize cdsService=_cdsService;
@property(retain) IDHmiService *hmiService; // @synthesize hmiService=_hmiService;
@property(getter=isConnected) _Bool connected; // @synthesize connected=_connected;
- (void).cxx_destruct;
- (void)readA4APacket:(id)arg1;
- (void)vrs_onEventHandle:(id)arg1 event:(id)arg2 seq:(id)arg3 data:(id)arg4;
- (void)voice_sessionStateChangedHandle:(id)arg1 state:(id)arg2;
- (void)ver_getVersion;
- (void)vds_diagnosticHandlerHandle:(id)arg1 type:(id)arg2 data:(id)arg3;
- (void)sds_onDialogEventHandle:(id)arg1 result:(id)arg2 parameters:(id)arg3;
- (void)rhmi_onHmiEventHandle:(id)arg1 ident:(id)arg2 componentId:(id)arg3 eventId:(id)arg4 args:(id)arg5;
- (void)rhmi_onActionEventHandle:(id)arg1 ident:(id)arg2 actionId:(id)arg3 args:(id)arg4;
- (void)rcs_playbackEventHandle:(id)arg1 state:(id)arg2;
- (void)rcs_muteEventHandle:(id)arg1 mute:(id)arg2;
- (void)rcs_lockEventHandle:(id)arg1 event:(id)arg2;
- (void)rcs_headphoneEventHandle:(id)arg1 headphoneEnabled:(id)arg2;
- (void)rcs_entSourceEventHandle:(id)arg1 entId:(id)arg2;
- (void)rcs_entPlaylistEventHandle:(id)arg1 index:(id)arg2 count:(id)arg3 titles:(id)arg4;
- (void)rcs_entListEventHandle:(id)arg1 entId:(id)arg2 entName:(id)arg3 playable:(id)arg4 upnp:(id)arg5;
- (void)rcs_controlHandle:(id)arg1 accelOn:(id)arg2 reset:(id)arg3;
- (void)pia_onEventHandle:(id)arg1 event:(id)arg2 data:(id)arg3;
- (void)map_onEventHandle:(id)arg1 transferId:(id)arg2 event:(id)arg3;
- (void)map_abortImportHandle:(id)arg1 transferId:(id)arg2 reason:(id)arg3;
- (void)diag_perf_onewayData:(id)arg1;
- (void)cds_onPropertyChangedEventHandle:(id)arg1 ident:(id)arg2 propertyName:(id)arg3 propertyValue:(id)arg4;
- (void)cds_onPropertyChangedBinaryEventHandle:(id)arg1 ident:(id)arg2 propertyName:(id)arg3 propertyValue:(id)arg4 propertyBinaryValue:(id)arg5;
- (void)av_requestPlayerStateHandle:(id)arg1 connectionType:(id)arg2 playerState:(id)arg3;
- (void)av_multimediaButtonEventHandle:(id)arg1 event:(id)arg2;
- (void)av_connectionGrantedHandle:(id)arg1 connectionType:(id)arg2;
- (void)av_connectionDeniedHandle:(id)arg1 connectionType:(id)arg2;
- (void)av_connectionDeactivatedHandle:(id)arg1 connectionType:(id)arg2;
- (void)am_onAppEventHandle:(id)arg1 ident:(id)arg2 appId:(id)arg3 event:(id)arg4;
- (void)didStartSession:(id)arg1;
- (_Bool)maySendMessage;
- (void)writeData:(id)arg1;
- (id)receiveMessage:(id)arg1;
- (void)eventOccured:(id)arg1;
- (void)stop;
- (void)errorDetected:(id)arg1;
- (_Bool)shouldRegisterForApplicationLaunch;
- (long long)rhmiVersionToStartApplication;
- (_Bool)hasApplicationSupportForRhmiVersion:(long long)arg1;
- (_Bool)isRhmiVersion:(long long)arg1 supportedByVehicle:(id)arg2;
- (_Bool)hasValidHmiResourceDatabaseCount;
- (_Bool)hasValidResourceHashes;
- (_Bool)shouldRegisterSpeechDialogService;
- (_Bool)shouldRegisterTextToSpeechService;
- (_Bool)shouldRegisterMapService;
- (_Bool)shouldRegisterVoiceRecorderService;
- (_Bool)shouldRegisterPiaService;
- (_Bool)shouldRegisterAudioService;
- (_Bool)shouldRegisterCdsService;
- (_Bool)isLastUserModeAllowed;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)restoreMainHmiState;
- (void)hmiDidStop;
- (void)hmiDidStart;
- (void)applicationDidStop;
- (void)applicationDidFailToStartWithError:(id)arg1;
- (void)applicationDidStart;
- (void)applicationDidConnectToVehicle;
- (void)performLastUserModeWithView:(id)arg1;
- (void)handleRequest:(id)arg1;
- (void)handleMessage:(id)arg1;
- (void)internalStop;
- (void)stopWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)onHmiRestoreEvent:(id)arg1;
- (_Bool)setupSpeechDialogService:(id *)arg1;
- (void)undoSetupSpeechDialogService;
- (void)undoSetupTtsService;
- (_Bool)setupTtsService:(id *)arg1;
- (void)undoSetupMapService;
- (_Bool)setupMapService:(id *)arg1;
- (void)undoSetupWidgetHMIService;
- (_Bool)setupWidgetHMIService:(id *)arg1;
- (void)undoSetupVoiceRecorderService;
- (_Bool)setupVoiceRecorderService:(id *)arg1;
- (void)undoSetupPiaService;
- (_Bool)setupApplicationManagementService;
- (_Bool)setupPiaService:(id *)arg1;
- (void)undoSetupAudioService;
- (_Bool)setupAudioService:(id *)arg1;
- (void)undoStartHmi;
- (id)loadTranslations;
- (_Bool)startHmi:(id *)arg1;
- (void)undoSetupHmiService;
- (_Bool)setupHmiService:(id *)arg1;
- (void)undoSetupCdsService;
- (_Bool)setupCdsService:(id *)arg1;
- (void)undoLoginToHmi;
- (_Bool)loginToHmi:(id *)arg1;
- (void)undoStartEtchSession;
- (_Bool)startEtchSession:(id *)arg1;
- (void)undoPreflightCheck;
- (_Bool)performPreflightCheck:(id *)arg1;
- (id)internalStart;
- (void)startWithRhmiVersion:(long long)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)startWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)uniqueIdentifier;
- (id)vendor;
- (id)version;
- (id)name;
- (id)initWithHmiProvider:(id)arg1 etchSession:(id)arg2;
- (id)initWithHmiProvider:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

