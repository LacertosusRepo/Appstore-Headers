//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTCollectionAlbumModel-Protocol.h"
#import "SPTCollectionSongItemPlaying-Protocol.h"
#import "SPTPlayerObserver-Protocol.h"

@class NSArray, NSString, NSURL, SPTCollectionContextMenuComponentFactory, SPTCollectionCurrentlyPlayingIndex, SPTCollectionPlatformFetchOptions, SPTPlayOrigin;
@protocol SPTCollectionAlbumCosmosMetadataFields, SPTCollectionAlbumModelDelegate, SPTCollectionPlatform, SPTCollectionPlatformDataLoaderRequestToken, SPTCollectionPlatformTestManager, SPTOfflineModeState, SPTPlayer, SPTProductState;

@interface SPTCollectionAlbumCosmosModel : NSObject <SPTPlayerObserver, SPTCollectionSongItemPlaying, SPTCollectionAlbumModel>
{
    _Bool _loaded;
    id <SPTCollectionAlbumModelDelegate> _delegate;
    NSURL *_collectionAlbumURL;
    id <SPTCollectionPlatform> _collectionPlatform;
    id <SPTOfflineModeState> _offlineNotifier;
    id <SPTPlayer> _player;
    SPTCollectionCurrentlyPlayingIndex *_currentlyPlayingIndex;
    SPTPlayOrigin *_playOrigin;
    SPTCollectionPlatformFetchOptions *_fetchOptions;
    id <SPTCollectionPlatformDataLoaderRequestToken> _viewSubscription;
    id <SPTCollectionAlbumCosmosMetadataFields> _metadata;
    NSArray *_tracks;
    NSArray *_trackItems;
    id <SPTProductState> _productState;
    SPTCollectionContextMenuComponentFactory *_contextMenuComponentFactory;
    id <SPTCollectionPlatformTestManager> _collectionPlatformTestManager;
}

@property(retain, nonatomic) id <SPTCollectionPlatformTestManager> collectionPlatformTestManager; // @synthesize collectionPlatformTestManager=_collectionPlatformTestManager;
@property(retain, nonatomic) SPTCollectionContextMenuComponentFactory *contextMenuComponentFactory; // @synthesize contextMenuComponentFactory=_contextMenuComponentFactory;
@property(retain, nonatomic) id <SPTProductState> productState; // @synthesize productState=_productState;
@property(retain, nonatomic) NSArray *trackItems; // @synthesize trackItems=_trackItems;
@property(retain, nonatomic) NSArray *tracks; // @synthesize tracks=_tracks;
@property(retain, nonatomic) id <SPTCollectionAlbumCosmosMetadataFields> metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) id <SPTCollectionPlatformDataLoaderRequestToken> viewSubscription; // @synthesize viewSubscription=_viewSubscription;
@property(retain, nonatomic) SPTCollectionPlatformFetchOptions *fetchOptions; // @synthesize fetchOptions=_fetchOptions;
@property(retain, nonatomic) SPTPlayOrigin *playOrigin; // @synthesize playOrigin=_playOrigin;
@property(retain, nonatomic) SPTCollectionCurrentlyPlayingIndex *currentlyPlayingIndex; // @synthesize currentlyPlayingIndex=_currentlyPlayingIndex;
@property(retain, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(nonatomic) __weak id <SPTOfflineModeState> offlineNotifier; // @synthesize offlineNotifier=_offlineNotifier;
@property(retain, nonatomic) id <SPTCollectionPlatform> collectionPlatform; // @synthesize collectionPlatform=_collectionPlatform;
@property(copy, nonatomic) NSURL *collectionAlbumURL; // @synthesize collectionAlbumURL=_collectionAlbumURL;
@property(nonatomic) _Bool loaded; // @synthesize loaded=_loaded;
@property(nonatomic) __weak id <SPTCollectionAlbumModelDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)checkPlayabilityOfCollectionSongTrackItem:(id)arg1;
- (void)playCollectionSongTrackItem:(id)arg1;
- (unsigned long long)offlineSyncStateForTrackAtIndexPath:(id)arg1;
- (id)itemAtIndexPath:(id)arg1;
- (long long)numberOfItemsInSection:(long long)arg1;
- (long long)numberOfSections;
@property(nonatomic, getter=isOffline) _Bool offline;
@property(readonly, nonatomic) unsigned long long offlineState;
- (unsigned long long)offlineAvailability;
@property(readonly, nonatomic) NSURL *artistURL;
@property(readonly, nonatomic) NSString *artistName;
@property(readonly, nonatomic) NSURL *coverArtLink;
@property(readonly, nonatomic) NSString *albumName;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
@property(readonly, nonatomic) NSURL *collectionAlbumLink;
@property(readonly, nonatomic) NSURL *albumURL;
@property(readonly, nonatomic) _Bool albumHasTracksInCollection;
@property(nonatomic, getter=isCompleteAlbumInCollection) _Bool completeAlbumInCollection;
@property(readonly, nonatomic) NSURL *currentlyPlayingURL;
- (void)updateCurrentlyPlayingTrack:(id)arg1;
- (void)player:(id)arg1 stateDidChange:(id)arg2;
- (void)shufflePlayAlbumWithOptions:(id)arg1;
- (id)contextMenuComponentForTrackAtIndexPath:(id)arg1;
- (id)albumContextMenuComponent;
- (void)load;
- (void)dealloc;
- (id)initWithCollectionAlbumURL:(id)arg1 collectionPlatform:(id)arg2 offlineNotifier:(id)arg3 player:(id)arg4 playOrigin:(id)arg5 productState:(id)arg6 contextMenuComponentFactory:(id)arg7 collectionPlatformTestManager:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

