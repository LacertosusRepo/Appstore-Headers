//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTConnectionModeObserver-Protocol.h"
#import "SPTVideoApplicationStateObserver-Protocol.h"
#import "SPTVideoPlayerSourceObserver-Protocol.h"
#import "SPTVideoResourceLoaderInternalDelegate-Protocol.h"

@class NSDate, NSString, NSTimer, SPTPlayerItemErrorLogEventFilter, SPTVideoApplicationStateObservable, SPTVideoCDNSelector, SPTVideoFormatImpl, SPTVideoPlayerSource, SPTVideoSubtitleSelector, UIView;
@protocol SPTConnectionModeObservable, SPTKVOController, SPTNotificationCenter, SPTVideoEventObserver, SPTVideoPlaybackErrorFormatter, SPTVideoPlaybackIdentity, SPTVideoPlaybackSessionAssetLoader, SPTVideoPlaybackSessionDelegate, SPTVideoPlaybackTimeObservableInternal, SPTVideoPlayerConfiguration, SPTVideoResourceLoaderInternal, SPTVideoSubtitle, SPTVideoSurface;

@interface SPTVideoPlaybackSession : NSObject <SPTVideoResourceLoaderInternalDelegate, SPTVideoApplicationStateObserver, SPTConnectionModeObserver, SPTVideoPlayerSourceObserver>
{
    _Bool _allowRoyaltyVideos;
    _Bool _paused;
    _Bool _audioDisabled;
    _Bool _seeking;
    _Bool _stalled;
    _Bool _buffering;
    _Bool _rebufferedAfterForegrounding;
    _Bool _sessionStartNotificationSent;
    _Bool _requireRetryToResume;
    _Bool _retrying;
    float _preferredPlaybackSpeed;
    float _effectivePlaybackRate;
    id <SPTVideoPlaybackIdentity> _identity;
    double _videoAspectRatio;
    id <SPTVideoPlaybackSessionDelegate> _delegate;
    UIView<SPTVideoSurface> *_surface;
    id <SPTVideoSubtitle> _preferredSubtitle;
    id <SPTVideoResourceLoaderInternal> _resourceLoader;
    id <SPTVideoEventObserver> _notifierProxy;
    id <SPTVideoPlayerConfiguration> _playerConfiguration;
    id <SPTKVOController> _kvoController;
    id <SPTNotificationCenter> _notificationCenter;
    id <SPTVideoPlaybackErrorFormatter> _videoPlaybackErrorFormatter;
    id <SPTVideoPlaybackSessionAssetLoader> _sessionAssetLoader;
    id <SPTVideoPlaybackTimeObservableInternal> _playbackTimeObservable;
    SPTVideoPlayerSource *_playerSource;
    SPTVideoCDNSelector *_cdnSelector;
    SPTVideoApplicationStateObservable *_appStateObservable;
    SPTVideoSubtitleSelector *_subtitleSelector;
    CDUnknownBlockType _subtitleSelectorFactory;
    id <SPTVideoSubtitle> _selectedSubtitle;
    double _initialOffset;
    double _lastSeekTime;
    NSDate *_lastSeekEventDate;
    long long _playerResetCount;
    NSTimer *_syncTimer;
    SPTPlayerItemErrorLogEventFilter *_playerItemErrorLogEventFilter;
    SPTVideoFormatImpl *_currentFormat;
    id <SPTConnectionModeObservable> _connectionModeObservable;
    unsigned long long _connectionMode;
}

@property(nonatomic) unsigned long long connectionMode; // @synthesize connectionMode=_connectionMode;
@property(retain, nonatomic) id <SPTConnectionModeObservable> connectionModeObservable; // @synthesize connectionModeObservable=_connectionModeObservable;
@property(retain, nonatomic) SPTVideoFormatImpl *currentFormat; // @synthesize currentFormat=_currentFormat;
@property(retain, nonatomic) SPTPlayerItemErrorLogEventFilter *playerItemErrorLogEventFilter; // @synthesize playerItemErrorLogEventFilter=_playerItemErrorLogEventFilter;
@property(nonatomic) _Bool retrying; // @synthesize retrying=_retrying;
@property(nonatomic) _Bool requireRetryToResume; // @synthesize requireRetryToResume=_requireRetryToResume;
@property(nonatomic) _Bool sessionStartNotificationSent; // @synthesize sessionStartNotificationSent=_sessionStartNotificationSent;
@property(nonatomic) _Bool rebufferedAfterForegrounding; // @synthesize rebufferedAfterForegrounding=_rebufferedAfterForegrounding;
@property(retain, nonatomic) NSTimer *syncTimer; // @synthesize syncTimer=_syncTimer;
@property(nonatomic) long long playerResetCount; // @synthesize playerResetCount=_playerResetCount;
@property(retain, nonatomic) NSDate *lastSeekEventDate; // @synthesize lastSeekEventDate=_lastSeekEventDate;
@property(nonatomic) double lastSeekTime; // @synthesize lastSeekTime=_lastSeekTime;
@property(nonatomic) float effectivePlaybackRate; // @synthesize effectivePlaybackRate=_effectivePlaybackRate;
@property(nonatomic) _Bool buffering; // @synthesize buffering=_buffering;
@property(nonatomic) _Bool stalled; // @synthesize stalled=_stalled;
@property(nonatomic) _Bool seeking; // @synthesize seeking=_seeking;
@property(nonatomic) double initialOffset; // @synthesize initialOffset=_initialOffset;
@property(retain, nonatomic) id <SPTVideoSubtitle> selectedSubtitle; // @synthesize selectedSubtitle=_selectedSubtitle;
@property(copy, nonatomic) CDUnknownBlockType subtitleSelectorFactory; // @synthesize subtitleSelectorFactory=_subtitleSelectorFactory;
@property(retain, nonatomic) SPTVideoSubtitleSelector *subtitleSelector; // @synthesize subtitleSelector=_subtitleSelector;
@property(retain, nonatomic) SPTVideoApplicationStateObservable *appStateObservable; // @synthesize appStateObservable=_appStateObservable;
@property(retain, nonatomic) SPTVideoCDNSelector *cdnSelector; // @synthesize cdnSelector=_cdnSelector;
@property(retain, nonatomic) SPTVideoPlayerSource *playerSource; // @synthesize playerSource=_playerSource;
@property(retain, nonatomic) id <SPTVideoPlaybackTimeObservableInternal> playbackTimeObservable; // @synthesize playbackTimeObservable=_playbackTimeObservable;
@property(retain, nonatomic) id <SPTVideoPlaybackSessionAssetLoader> sessionAssetLoader; // @synthesize sessionAssetLoader=_sessionAssetLoader;
@property(retain, nonatomic) id <SPTVideoPlaybackErrorFormatter> videoPlaybackErrorFormatter; // @synthesize videoPlaybackErrorFormatter=_videoPlaybackErrorFormatter;
@property(retain, nonatomic) id <SPTNotificationCenter> notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain, nonatomic) id <SPTKVOController> kvoController; // @synthesize kvoController=_kvoController;
@property(retain, nonatomic) id <SPTVideoPlayerConfiguration> playerConfiguration; // @synthesize playerConfiguration=_playerConfiguration;
@property(retain, nonatomic) id <SPTVideoEventObserver> notifierProxy; // @synthesize notifierProxy=_notifierProxy;
@property(retain, nonatomic) id <SPTVideoResourceLoaderInternal> resourceLoader; // @synthesize resourceLoader=_resourceLoader;
@property(nonatomic, getter=isAudioDisabled) _Bool audioDisabled; // @synthesize audioDisabled=_audioDisabled;
@property(retain, nonatomic) id <SPTVideoSubtitle> preferredSubtitle; // @synthesize preferredSubtitle=_preferredSubtitle;
@property(retain, nonatomic) UIView<SPTVideoSurface> *surface; // @synthesize surface=_surface;
@property(nonatomic) float preferredPlaybackSpeed; // @synthesize preferredPlaybackSpeed=_preferredPlaybackSpeed;
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic) _Bool allowRoyaltyVideos; // @synthesize allowRoyaltyVideos=_allowRoyaltyVideos;
@property(nonatomic) __weak id <SPTVideoPlaybackSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double videoAspectRatio; // @synthesize videoAspectRatio=_videoAspectRatio;
@property(retain, nonatomic) id <SPTVideoPlaybackIdentity> identity; // @synthesize identity=_identity;
- (void).cxx_destruct;
- (void)refreshSession;
- (void)connectionModeDidChange:(unsigned long long)arg1;
- (void)triggerPlaybackEventsForAccessLogEvent:(id)arg1;
- (void)videoPlaybackDidEndWithReason:(long long)arg1;
- (void)refreshBufferingState;
- (_Bool)playing;
- (void)refreshSelectedSubtitle;
- (void)markLastUsedCDNFail;
- (void)markLastUsedCDNOk;
- (void)resourceLoader:(id)arg1 willDownloadVideoSegment:(long long)arg2;
- (void)addPeriodicTimeObserver;
- (void)effectiveRateChanged;
- (void)errorLogEntryAdded:(id)arg1;
- (void)accessLogEntryAdded:(id)arg1;
- (void)playerSource:(id)arg1 playerItem:(id)arg2 failedToPlayToEndWithError:(id)arg3;
- (void)playerSource:(id)arg1 didReachEndForPlayerItem:(id)arg2;
- (void)didChangeBackgroundState:(_Bool)arg1;
- (void)didChangeActiveState:(_Bool)arg1;
- (void)sendPlaybackError:(id)arg1;
- (void)playerSource:(id)arg1 playerItem:(id)arg2 likelyToKeepUp:(_Bool)arg3;
- (void)playerSource:(id)arg1 playerItem:(id)arg2 statusChanged:(long long)arg3;
- (void)activateBackgroundPlayPlus;
- (void)enableFullVideoUsage;
- (void)assetFailedToPrepareForPlayback:(id)arg1;
- (void)refreshAVStack;
- (void)processPlayerItem:(id)arg1;
- (void)playerSource:(id)arg1 resetPlayerWithError:(id)arg2;
- (void)resume;
- (void)pause;
- (double)adjustCurrentPosition:(double)arg1 forItem:(id)arg2;
- (double)currentPosition;
- (id)availableSubtitles;
- (void)seekTo:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)retrySession;
- (void)unloadPlayerAndResetState;
- (void)unloadSession:(id)arg1 nextIdentity:(id)arg2;
- (void)loadSession;
- (void)dealloc;
- (id)initWithPlaybackIdentity:(id)arg1 options:(id)arg2 notifierProxy:(id)arg3 resourceLoader:(id)arg4 kvoControllerFactory:(id)arg5 connectionModeObservable:(id)arg6 notificationCenter:(id)arg7 videoPlaybackErrorFormatter:(id)arg8 playbackTimeObservable:(id)arg9 sessionAssetLoader:(id)arg10 playerSource:(id)arg11 cndSelector:(id)arg12 subtitleSelectorFactory:(CDUnknownBlockType)arg13 selectedSubtitle:(id)arg14 playerConfiguration:(id)arg15 appStateObservable:(id)arg16 playerItemErrorLogEventFilter:(id)arg17;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

