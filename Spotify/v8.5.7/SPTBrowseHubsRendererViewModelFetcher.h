//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTBrowseViewModelFetcher-Protocol.h"
#import "SPTDataLoaderDelegate-Protocol.h"

@class NSString, SPTBrowseOnDemandDecorator, SPTDataLoader, SPTDataLoaderFactory;
@protocol SPTBrowseTimeZoneProvider, SPTBrowseViewModelBuilderProvider, SPTFeatureFlagSignal, SPTPodcastTestManager;

@interface SPTBrowseHubsRendererViewModelFetcher : NSObject <SPTDataLoaderDelegate, SPTBrowseViewModelFetcher>
{
    _Bool _nftEnabled;
    id <SPTBrowseViewModelBuilderProvider> _viewModelBuilderProvider;
    SPTDataLoaderFactory *_dataLoaderFactory;
    NSString *_genre;
    id <SPTPodcastTestManager> _podcastTestManager;
    id <SPTFeatureFlagSignal> _nftEnabledSignal;
    NSString *_locale;
    SPTDataLoader *_dataLoader;
    SPTBrowseOnDemandDecorator *_onDemandDecorator;
    unsigned long long _offset;
    NSString *_sourceIdentifier;
    NSString *_featureID;
    NSString *_pageURI;
    id <SPTBrowseTimeZoneProvider> _timeZoneProvider;
}

@property(readonly, nonatomic) id <SPTBrowseTimeZoneProvider> timeZoneProvider; // @synthesize timeZoneProvider=_timeZoneProvider;
@property(readonly, copy, nonatomic) NSString *pageURI; // @synthesize pageURI=_pageURI;
@property(readonly, copy, nonatomic) NSString *featureID; // @synthesize featureID=_featureID;
@property(readonly, copy, nonatomic) NSString *sourceIdentifier; // @synthesize sourceIdentifier=_sourceIdentifier;
@property(readonly, nonatomic) unsigned long long offset; // @synthesize offset=_offset;
@property(nonatomic, getter=isNFTEnabled) _Bool nftEnabled; // @synthesize nftEnabled=_nftEnabled;
@property(readonly, nonatomic) SPTBrowseOnDemandDecorator *onDemandDecorator; // @synthesize onDemandDecorator=_onDemandDecorator;
@property(readonly, nonatomic) SPTDataLoader *dataLoader; // @synthesize dataLoader=_dataLoader;
@property(readonly, copy, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(readonly, nonatomic) id <SPTFeatureFlagSignal> nftEnabledSignal; // @synthesize nftEnabledSignal=_nftEnabledSignal;
@property(readonly, nonatomic) id <SPTPodcastTestManager> podcastTestManager; // @synthesize podcastTestManager=_podcastTestManager;
@property(readonly, copy, nonatomic) NSString *genre; // @synthesize genre=_genre;
@property(readonly, nonatomic) SPTDataLoaderFactory *dataLoaderFactory; // @synthesize dataLoaderFactory=_dataLoaderFactory;
@property(readonly, nonatomic) id <SPTBrowseViewModelBuilderProvider> viewModelBuilderProvider; // @synthesize viewModelBuilderProvider=_viewModelBuilderProvider;
- (void).cxx_destruct;
- (void)handleErrorResponse:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)handleSuccessfulResponseData:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)handleSuccessfulResponse:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)handleResponse:(id)arg1 successful:(_Bool)arg2;
- (void)updateNavigationBarStateInViewModelBuilder:(id)arg1;
- (id)nextPageFetcherFromViewModelBuilder:(id)arg1;
- (id)makeNextPageFetcherWithGenre:(id)arg1 offset:(unsigned long long)arg2;
- (void)setCompletion:(CDUnknownBlockType)arg1 forRequest:(id)arg2;
- (CDUnknownBlockType)completionForRequest:(id)arg1;
- (id)makeURL;
- (void)featureFlagSignal:(id)arg1 hasAssumedState:(long long)arg2;
- (void)dataLoader:(id)arg1 didReceiveErrorResponse:(id)arg2;
- (void)dataLoader:(id)arg1 didReceiveSuccessfulResponse:(id)arg2;
- (id)fetchViewModelWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithViewModelBuilderProvider:(id)arg1 dataLoaderFactory:(id)arg2 genre:(id)arg3 podcastTestManager:(id)arg4 nftEnabledSignal:(id)arg5 onDemandDecorator:(id)arg6 locale:(id)arg7 offset:(unsigned long long)arg8 sourceIdentifier:(id)arg9 featureID:(id)arg10 pageURI:(id)arg11 timeZoneProvider:(id)arg12;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

