//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "EXP_HUGSThemableComponentView.h"

#import "EXP_HUBComponentViewObserver-Protocol.h"
#import "EXP_HUBComponentViewVisibilityObserver-Protocol.h"
#import "EXP_HUBComponentViewWithChildren-Protocol.h"
#import "EXP_HUBComponentViewWithRestorableUIState-Protocol.h"
#import "SPTHomeUICarouselLayoutDelegate-Protocol.h"
#import "SPTHomeUISlideshowControllerDelegate-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"

@class NSString, SPTHomeUICarouselLayout, SPTHomeUISlideshowController, SPTHomeUISlideshowProgressView, UICollectionView, UIView;
@protocol EXP_HUBComponentViewChildDelegate, SPTHomeUICarouselChildSizingDelegate;

@interface SPTHomeUISlideshowComponentView : EXP_HUGSThemableComponentView <UICollectionViewDataSource, UICollectionViewDelegate, SPTHomeUICarouselLayoutDelegate, SPTHomeUISlideshowControllerDelegate, EXP_HUBComponentViewWithChildren, EXP_HUBComponentViewObserver, EXP_HUBComponentViewWithRestorableUIState, EXP_HUBComponentViewVisibilityObserver>
{
    id <EXP_HUBComponentViewChildDelegate> _childDelegate;
    UICollectionView *_collectionView;
    SPTHomeUICarouselLayout *_carouselLayout;
    id <SPTHomeUICarouselChildSizingDelegate> _childSizingDelegate;
    SPTHomeUISlideshowController *_slideShowController;
    SPTHomeUISlideshowProgressView *_progressView;
    UIView *_previousTapArea;
    UIView *_nextTapArea;
}

+ (double)spacingForBoundsSize:(struct CGSize)arg1 theme:(id)arg2;
+ (struct CGSize)sizeForContainerViewSize:(struct CGSize)arg1 theme:(id)arg2 model:(id)arg3 childSizingDelegate:(id)arg4 slideShowLayout:(id)arg5;
@property(readonly, nonatomic) UIView *nextTapArea; // @synthesize nextTapArea=_nextTapArea;
@property(readonly, nonatomic) UIView *previousTapArea; // @synthesize previousTapArea=_previousTapArea;
@property(readonly, nonatomic) SPTHomeUISlideshowProgressView *progressView; // @synthesize progressView=_progressView;
@property(readonly, nonatomic) SPTHomeUISlideshowController *slideShowController; // @synthesize slideShowController=_slideShowController;
@property(readonly, nonatomic) __weak id <SPTHomeUICarouselChildSizingDelegate> childSizingDelegate; // @synthesize childSizingDelegate=_childSizingDelegate;
@property(readonly, nonatomic) SPTHomeUICarouselLayout *carouselLayout; // @synthesize carouselLayout=_carouselLayout;
@property(readonly, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(nonatomic) __weak id <EXP_HUBComponentViewChildDelegate> childDelegate; // @synthesize childDelegate=_childDelegate;
- (void).cxx_destruct;
- (void)updateViewForChangedVisibility:(_Bool)arg1;
- (double)spacing;
- (id)idenifiersFromModel:(id)arg1;
- (void)slideshowShouldUpdateProgress:(double)arg1 atIndex:(unsigned long long)arg2;
- (void)slideshowShouldSlideToCellAtIndex:(unsigned long long)arg1;
- (double)carouselLayoutTrailingSpace:(id)arg1;
- (double)carouselLayoutLeadingSpace:(id)arg1;
- (double)carouselLayoutItemSpacing:(id)arg1;
- (struct CGSize)carouselLayout:(id)arg1 sizeForItemAtIndexPath:(id)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)restoreUIState:(id)arg1;
- (id)currentUIState;
- (void)viewDidDisappear;
- (void)viewWillAppear;
- (void)configureWithModel:(id)arg1;
- (void)userDidNavigatePrevious;
- (void)userDidNavigateNext;
- (id)initWithTheme:(id)arg1 frame:(struct CGRect)arg2 childSizingDelegate:(id)arg3 layout:(id)arg4 interfaceFactory:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

