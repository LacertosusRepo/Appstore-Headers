//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTQuickPlayService-Protocol.h"

@class NSString, SPTAllocationContext, SPTQuickPlayTestManager;
@protocol SPTContainerService, SPTFeatureFlaggingService, SPTNetworkService, SPTPlayerFeature, SPTQuickPlayLogger, SPTQuickPlayPlaybackManager;

@interface SPTQuickPlayServiceImplementation : NSObject <SPTQuickPlayService>
{
    SPTQuickPlayTestManager *_testManager;
    id <SPTContainerService> _containerService;
    id <SPTFeatureFlaggingService> _featureFlaggingSevice;
    id <SPTNetworkService> _networkService;
    id <SPTPlayerFeature> _playerService;
    id <SPTQuickPlayLogger> _logger;
    id <SPTQuickPlayPlaybackManager> _playbackManager;
}

+ (id)serviceIdentifier;
@property(retain, nonatomic) id <SPTQuickPlayPlaybackManager> playbackManager; // @synthesize playbackManager=_playbackManager;
@property(retain, nonatomic) id <SPTQuickPlayLogger> logger; // @synthesize logger=_logger;
@property(nonatomic) __weak id <SPTPlayerFeature> playerService; // @synthesize playerService=_playerService;
@property(nonatomic) __weak id <SPTNetworkService> networkService; // @synthesize networkService=_networkService;
@property(nonatomic) __weak id <SPTFeatureFlaggingService> featureFlaggingSevice; // @synthesize featureFlaggingSevice=_featureFlaggingSevice;
@property(nonatomic) __weak id <SPTContainerService> containerService; // @synthesize containerService=_containerService;
@property(retain, nonatomic) SPTQuickPlayTestManager *testManager; // @synthesize testManager=_testManager;
- (void).cxx_destruct;
- (id)provideQuickPlayLogger;
- (id)provideQuickPlayPlaybackManager;
- (void)unload;
- (void)load;
- (void)configureWithServices:(id)arg1;

// Remaining properties
@property(retain, nonatomic) SPTAllocationContext *allocationContext;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

