//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 25 2019 19:12:25).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SPTCastManagerObserver-Protocol.h"
#import "SPTGaiaConnectManagerObserver-Protocol.h"
#import "SPTGaiaSystemVolumeObserver-Protocol.h"
#import "SPTGaiaVolumeButtonControllerDelegate-Protocol.h"
#import "SPTGaiaVolumeControllerInterface-Protocol.h"

@class AVAudioSession, GaiaRemoteDeviceVolumeOverlayViewController, NSNotificationCenter, NSNumber, NSString, SPTCastManager, SPTGaiaDeviceAppearanceMapping, SPTGaiaLogger, SPTGaiaVolumeButtonController, SPTObserverManager, SPTTheme;
@protocol SPTGaiaConnectManager, SPTGaiaLockScreenControlsStateProvider, SPTGaiaSystemVolumeManager;

@interface SPTGaiaVolumeController : NSObject <SPTCastManagerObserver, SPTGaiaVolumeButtonControllerDelegate, SPTGaiaConnectManagerObserver, SPTGaiaSystemVolumeObserver, SPTGaiaVolumeControllerInterface>
{
    _Bool _disableRemoteVolumePopup;
    NSNumber *_currentVolume;
    SPTGaiaVolumeButtonController *_volumeButtonController;
    SPTCastManager *_castDeviceManager;
    id <SPTGaiaConnectManager> _connectManager;
    SPTTheme *_theme;
    SPTGaiaDeviceAppearanceMapping *_deviceIconMapper;
    id <SPTGaiaLockScreenControlsStateProvider> _lockScreenControlsStateProvider;
    NSNotificationCenter *_notificationCenter;
    AVAudioSession *_audioSession;
    id <SPTGaiaSystemVolumeManager> _systemVolumeManager;
    GaiaRemoteDeviceVolumeOverlayViewController *_remoteVolumeOverlay;
    SPTGaiaLogger *_logger;
    SPTObserverManager *_observerManager;
}

@property(readonly, nonatomic) SPTObserverManager *observerManager; // @synthesize observerManager=_observerManager;
@property(readonly, nonatomic) SPTGaiaLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) GaiaRemoteDeviceVolumeOverlayViewController *remoteVolumeOverlay; // @synthesize remoteVolumeOverlay=_remoteVolumeOverlay;
@property(retain, nonatomic) id <SPTGaiaSystemVolumeManager> systemVolumeManager; // @synthesize systemVolumeManager=_systemVolumeManager;
@property(retain, nonatomic) AVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property(retain, nonatomic) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(retain, nonatomic) id <SPTGaiaLockScreenControlsStateProvider> lockScreenControlsStateProvider; // @synthesize lockScreenControlsStateProvider=_lockScreenControlsStateProvider;
@property(retain, nonatomic) SPTGaiaDeviceAppearanceMapping *deviceIconMapper; // @synthesize deviceIconMapper=_deviceIconMapper;
@property(retain, nonatomic) SPTTheme *theme; // @synthesize theme=_theme;
@property(retain, nonatomic) id <SPTGaiaConnectManager> connectManager; // @synthesize connectManager=_connectManager;
@property(nonatomic) __weak SPTCastManager *castDeviceManager; // @synthesize castDeviceManager=_castDeviceManager;
@property(retain, nonatomic) SPTGaiaVolumeButtonController *volumeButtonController; // @synthesize volumeButtonController=_volumeButtonController;
@property(nonatomic) _Bool disableRemoteVolumePopup; // @synthesize disableRemoteVolumePopup=_disableRemoteVolumePopup;
@property(retain, nonatomic) NSNumber *currentVolume; // @synthesize currentVolume=_currentVolume;
- (void).cxx_destruct;
- (void)removeVolumeControllerObserver:(id)arg1;
- (void)addVolumeControllerObserver:(id)arg1;
- (_Bool)lockScreenVolumeControlsShouldBeActive;
- (_Bool)lockScreenVolumeControlsFeatureEnabled;
- (void)castManager:(id)arg1 deviceConnectivityDidChange:(id)arg2;
- (void)updateSystemVolume:(id)arg1;
- (void)updateRemoteVolume:(id)arg1 maybeShowOverlay:(_Bool)arg2 delayCount:(long long)arg3;
- (void)updateRemoteVolume:(id)arg1 maybeShowOverlay:(_Bool)arg2;
- (_Bool)shouldShowVolumeControls:(id)arg1;
- (void)requestVolumeChange:(float)arg1;
- (void)musicPlayerVolumeDidChange;
- (float)volumeButtonControllerDidStealVolumeDown:(id)arg1;
- (float)volumeButtonControllerDidStealVolumeUp:(id)arg1;
- (void)observeCastVolume;
- (void)observeLocalVolume;
- (void)audioSessionInterruptionNotification:(id)arg1;
- (_Bool)isRemoteVolumeAllowedForDevice:(id)arg1;
- (void)updateRemoteVolumeAvailabilityWithCompletion:(CDUnknownBlockType)arg1;
- (void)applicationDidBecomeActiveNotification;
- (void)applicationWillResignActiveNotification;
- (void)callUpdateRemoteVolumeWithCurrentVolumeAndNoOverlay;
- (void)activeDeviceDidChange:(id)arg1;
- (void)castVolumeDidUpdate;
- (void)deviceDidUpdate:(id)arg1 withNewVolume:(float)arg2;
- (float)updateVolumeOfActiveDeviceWithValue:(float)arg1;
- (float)decreaseVolumeOfActiveDevice;
- (float)increaseVolumeOfActiveDevice;
- (_Bool)isDeviceActive:(id)arg1;
- (id)activeDevice;
- (void)systemVolumeDidUpdate:(double)arg1;
- (void)connectManager:(id)arg1 activeDeviceDidChange:(id)arg2;
- (void)connectManager:(id)arg1 volumeDidChangeForDevice:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupNotificationCenterObserving;
- (void)setupObserving;
- (void)dealloc;
- (id)initWithCastDeviceManager:(id)arg1 connectManager:(id)arg2 theme:(id)arg3 deviceIconMapper:(id)arg4 lockScreenControlsStateProvider:(id)arg5 notificationCenter:(id)arg6 audioSession:(id)arg7 logger:(id)arg8 volumeButtonController:(id)arg9 systemVolumeManager:(id)arg10;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

